2025-04-07 11:39:57.402 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-07 11:39:57.431 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 70768 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 11:39:57.432 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 11:39:57.591 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-07 11:39:57.592 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-07 11:39:58.843 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 11:39:58.849 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 11:39:58.850 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 11:39:58.850 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 11:39:58.875 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 11:39:58.875 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1283 ms
2025-04-07 11:39:59.381 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 11:39:59.387 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 11:39:59.388 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 11:39:59.388 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 11:39:59.388 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 11:39:59.388 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 11:39:59.388 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 11:39:59.388 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@4d1ae211
2025-04-07 11:39:59.415 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 11:39:59.534 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 11:39:59.883 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71984cc3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@df8bce4, org.springframework.security.web.context.SecurityContextHolderFilter@9538405, org.springframework.security.web.header.HeaderWriterFilter@21276acb, org.springframework.web.filter.CorsFilter@1dc464dd, org.springframework.security.web.authentication.logout.LogoutFilter@3bef2350, com.momo.filter.JwtAuthorizationFilter@66c0a807, org.springframework.security.web.session.ConcurrentSessionFilter@7bbb0bd7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@426cc8b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b959bc9, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5db744ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@558d1e48, org.springframework.security.web.session.SessionManagementFilter@2a13f52, org.springframework.security.web.access.ExceptionTranslationFilter@118bfd26, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12c83ac6]
2025-04-07 11:39:59.998 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 11:40:00.072 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 11:40:00.090 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 11:40:00.102 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 11:40:00.104 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 11:40:00.104 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6b82d4b0]]
2025-04-07 11:40:00.104 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 11:40:00.104 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 11:40:00.104 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 11:40:00.112 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 3.221 seconds (process running for 4.002)
2025-04-07 11:40:24.314 INFO  [File Watcher] [o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-04-07 11:40:24.317 INFO  [Thread-5] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 11:40:24.317 INFO  [Thread-5] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6b82d4b0]]
2025-04-07 11:40:24.317 INFO  [Thread-5] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 11:40:24.317 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 11:40:24.317 INFO  [Thread-5] [o.apache.coyote.http11.Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-11040"]
2025-04-07 11:40:24.325 INFO  [Thread-5] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 11:40:24.326 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 11:40:24.326 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 11:40:24.326 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-07 11:40:24.375 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 70768 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 11:40:24.375 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 11:40:24.623 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 11:40:24.624 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 11:40:24.624 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 11:40:24.624 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 11:40:24.632 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 11:40:24.632 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 255 ms
2025-04-07 11:40:24.876 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 11:40:24.877 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@66908862
2025-04-07 11:40:24.892 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 11:40:24.939 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 11:40:25.080 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@586ce9e6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@687e9d34, org.springframework.security.web.context.SecurityContextHolderFilter@2f0acedf, org.springframework.security.web.header.HeaderWriterFilter@5fb43915, org.springframework.web.filter.CorsFilter@89d04fb, org.springframework.security.web.authentication.logout.LogoutFilter@30a5b20c, com.momo.filter.JwtAuthorizationFilter@2ffc260, org.springframework.security.web.session.ConcurrentSessionFilter@4ff1de60, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@518836ba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8e33c63, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@20886f44, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3de33800, org.springframework.security.web.session.SessionManagementFilter@7e24e2da, org.springframework.security.web.access.ExceptionTranslationFilter@28c91a43, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26d587b7]
2025-04-07 11:40:25.155 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 11:40:25.208 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 11:40:25.218 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 11:40:25.220 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 11:40:25.220 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 11:40:25.220 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7d07bd75]]
2025-04-07 11:40:25.220 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 11:40:25.220 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 11:40:25.220 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 11:40:25.224 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 0.867 seconds (process running for 29.114)
2025-04-07 11:40:25.225 INFO  [restartedMain] [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2025-04-07 11:41:25.229 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-07 12:03:01.145 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-07 12:03:01.145 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-07 12:03:01.146 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-07 12:03:01.158 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/user/id/kmtest/exist
2025-04-07 12:03:01.159 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:03:01.159 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/user/id/kmtest/exist
2025-04-07 12:03:01.159 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:03:01.374 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT IF(count(*) > 0, true, false)
        FROM tb_account
        WHERE id = 'kmtest'
 {executed in 14 msec}
2025-04-07 12:03:30.230 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/brno/status
2025-04-07 12:03:30.230 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:03:30.230 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/brno/status
2025-04-07 12:03:30.230 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:03:30.309 INFO  [http-nio-11040-exec-2] [com.momo.common.util.ExternalApiUtils] - body: {"b_no":["5218702490"]}
2025-04-07 12:03:30.624 INFO  [http-nio-11040-exec-2] [com.momo.common.util.ExternalApiUtils] - res: {"request_cnt":1,"match_cnt":1,"status_code":"OK","data":[{"b_no":"5218702490","b_stt":"계속사업자","b_stt_cd":"01","tax_type":"부가가치세 일반과세자","tax_type_cd":"01","end_dt":"","utcc_yn":"N","tax_type_change_dt":"","invoice_apply_dt":"","rbf_tax_type":"해당없음","rbf_tax_type_cd":"99"}]}
2025-04-07 12:03:30.637 INFO  [http-nio-11040-exec-2] [com.momo.common.util.BusinessmanApiUtil] - result: {request_cnt=1, match_cnt=1, status_code=OK, data=[{b_no=5218702490, b_stt=계속사업자, b_stt_cd=01, tax_type=부가가치세 일반과세자, tax_type_cd=01, end_dt=, utcc_yn=N, tax_type_change_dt=, invoice_apply_dt=, rbf_tax_type=해당없음, rbf_tax_type_cd=99}]}
2025-04-07 12:03:34.731 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/signup
2025-04-07 12:03:34.732 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:03:34.733 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/signup
2025-04-07 12:03:34.733 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:03:34.919 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO tb_account
            (id, pwd, name, email, tel, br_no, terms)
        VALUES ('kmtest', '$2a$10$oJYS/x8XOFAM4onWx.hOzOwQu4mCPVQaxTkoqg6BIsesOXbBchH6S', 'kmtest', 'km@test.kr', '010-123-4123', '5218702490', '11')
 {executed in 3 msec}
2025-04-07 12:03:34.924 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest'
 {executed in 5 msec}
2025-04-07 12:03:34.942 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=kmtest, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QiLCJpYXQiOjE3NDM5OTUwMTQsImV4cCI6MTc0Mzk5NTYxNCwiYXV0aG9yaXRpZXMiOiJST0xFX05PTkUifQ.YLUo-n-zGj4bcxb6IQksuz-T_sa5EWL4739XkLKu7lY, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTg2MTR9.fs-7EOOAMiBp5KDUG4xEUUi8DDEzlixWQUorFvcW9Qg, expireTime=3600000, revoked=false, expired=false)
2025-04-07 12:03:34.947 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='kmtest'
 {executed in 3 msec}
2025-04-07 12:03:34.948 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO tb_refresh_token
                    (user_id, refresh_token)
        VALUES      ('kmtest','eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTg2MTR9.fs-7EOOAMiBp5KDUG4xEUUi8DDEzlixWQUorFvcW9Qg')
 {executed in 0 msec}
2025-04-07 12:03:34.966 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:03:34.967 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QiLCJpYXQiOjE3NDM5OTUwMTQsImV4cCI6MTc0Mzk5NTYxNCwiYXV0aG9yaXRpZXMiOiJST0xFX05PTkUifQ.YLUo-n-zGj4bcxb6IQksuz-T_sa5EWL4739XkLKu7lY
2025-04-07 12:03:34.967 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:03:34.981 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : kmtest
2025-04-07 12:03:34.983 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest'
 {executed in 1 msec}
2025-04-07 12:03:34.984 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest' 인증 정보를 저장했습니다
2025-04-07 12:03:34.985 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest, password=$2a$10$oJYS/x8XOFAM4onWx.hOzOwQu4mCPVQaxTkoqg6BIsesOXbBchH6S, authorities=[ROLE_NONE])
2025-04-07 12:03:34.990 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'kmtest'
 {executed in 4 msec}
2025-04-07 12:03:34.992 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=kmtest, nickname=null, corp_nm=null, tel=010-123-4123, id=kmtest, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:03:35.002 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop
2025-04-07 12:03:35.003 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QiLCJpYXQiOjE3NDM5OTUwMTQsImV4cCI6MTc0Mzk5NTYxNCwiYXV0aG9yaXRpZXMiOiJST0xFX05PTkUifQ.YLUo-n-zGj4bcxb6IQksuz-T_sa5EWL4739XkLKu7lY
2025-04-07 12:03:35.003 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop
2025-04-07 12:03:35.004 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : kmtest
2025-04-07 12:03:35.006 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest'
 {executed in 1 msec}
2025-04-07 12:03:35.007 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest' 인증 정보를 저장했습니다
2025-04-07 12:03:35.009 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest, password=$2a$10$oJYS/x8XOFAM4onWx.hOzOwQu4mCPVQaxTkoqg6BIsesOXbBchH6S, authorities=[ROLE_NONE])
2025-04-07 12:03:35.047 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:03:35.048 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QiLCJpYXQiOjE3NDM5OTUwMTQsImV4cCI6MTc0Mzk5NTYxNCwiYXV0aG9yaXRpZXMiOiJST0xFX05PTkUifQ.YLUo-n-zGj4bcxb6IQksuz-T_sa5EWL4739XkLKu7lY
2025-04-07 12:03:35.048 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:03:35.057 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : kmtest
2025-04-07 12:03:35.060 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest'
 {executed in 1 msec}
2025-04-07 12:03:35.061 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest' 인증 정보를 저장했습니다
2025-04-07 12:03:35.061 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT sh.shop_id,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   select corp_nm
                   from tb_account
                   where id = (
                                select staff_id
                                from tb_staff sf
                                where sf.role = 1 and
                                sf.shop_id = sh.shop_id
                            )
                ) as corp_nm,
                IFNULL((
                    select sf.approval_st
                    from tb_staff sf
                    where sf.staff_id='kmtest' and
                            sf.shop_id = sh.shop_id
                ), -1) as approval_st
        from tb_shop sh
        where

        1=1
        limit 20
 {executed in 14 msec}
2025-04-07 12:03:35.062 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest, password=$2a$10$oJYS/x8XOFAM4onWx.hOzOwQu4mCPVQaxTkoqg6BIsesOXbBchH6S, authorities=[ROLE_NONE])
2025-04-07 12:03:35.064 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'kmtest'
 {executed in 2 msec}
2025-04-07 12:03:35.065 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=kmtest, nickname=null, corp_nm=null, tel=010-123-4123, id=kmtest, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:15:28.249 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 12:15:28.249 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@7d07bd75]]
2025-04-07 12:15:28.249 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 12:15:28.249 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:15:28.252 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 12:15:28.252 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 12:15:28.252 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:15:28.252 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-07 12:15:31.393 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-07 12:15:31.431 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 79502 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 12:15:31.432 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 12:15:31.616 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-07 12:15:31.616 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-07 12:15:32.879 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 12:15:32.889 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 12:15:32.890 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 12:15:32.890 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 12:15:32.935 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 12:15:32.935 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1319 ms
2025-04-07 12:15:33.630 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 12:15:33.637 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 12:15:33.637 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 12:15:33.638 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 12:15:33.638 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 12:15:33.638 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 12:15:33.638 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 12:15:33.638 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@10063a59
2025-04-07 12:15:33.666 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 12:15:33.782 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 12:15:34.063 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@18bb2a9a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55a5be87, org.springframework.security.web.context.SecurityContextHolderFilter@4dc5c3c8, org.springframework.security.web.header.HeaderWriterFilter@71d10d16, org.springframework.web.filter.CorsFilter@30326f42, org.springframework.security.web.authentication.logout.LogoutFilter@132c38b4, com.momo.filter.JwtAuthorizationFilter@7f74602a, org.springframework.security.web.session.ConcurrentSessionFilter@55956dc7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@405eccda, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ce69f3b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@43723df5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3eda6aa4, org.springframework.security.web.session.SessionManagementFilter@635421e, org.springframework.security.web.access.ExceptionTranslationFilter@615ced27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ec65dc8]
2025-04-07 12:15:34.170 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 12:15:34.241 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 12:15:34.259 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 12:15:34.268 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 12:15:34.269 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 12:15:34.270 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@35a72d5e]]
2025-04-07 12:15:34.270 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 12:15:34.270 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 12:15:34.270 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 12:15:34.278 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 3.212 seconds (process running for 3.767)
2025-04-07 12:15:35.061 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-07 12:15:35.062 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-07 12:15:35.063 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-07 12:15:35.077 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-07 12:15:35.077 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:15:35.078 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-07 12:15:35.078 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:15:35.268 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:15:35.411 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:35.435 INFO  [http-nio-11040-exec-1] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTkzMzV9.NiGo8lQpHj7DTf3YzXhD3p4VGRXbfkdEztZGtgUXN9I, expireTime=3600000, revoked=false, expired=false)
2025-04-07 12:15:35.438 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.440 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTkzMzV9.NiGo8lQpHj7DTf3YzXhD3p4VGRXbfkdEztZGtgUXN9I'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.442 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:35.463 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:35.464 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.464 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:35.483 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.485 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.487 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.489 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.493 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.494 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:15:35.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:15:35.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:15:35.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:15:35.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:15:35.558 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - refresh
2025-04-07 12:15:35.564 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTkzMzV9.NiGo8lQpHj7DTf3YzXhD3p4VGRXbfkdEztZGtgUXN9I'
 {executed in 2 msec}
2025-04-07 12:15:35.567 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.571 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:15:35.597 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-07 12:15:35.597 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.598 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-07 12:15:35.601 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.606 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:15:35.609 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.610 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.650 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:15:35.650 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.650 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:15:35.650 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:35.651 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.651 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:35.651 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.651 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:35.651 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:35.654 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.655 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.656 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.657 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.658 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.658 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.659 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.659 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.660 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.660 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.660 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 49 msec}
2025-04-07 12:15:35.660 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.660 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.661 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-07 12:15:35.662 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.662 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:15:35.664 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:35.669 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:35.669 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.669 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:35.671 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.673 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.674 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.674 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.675 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-07 12:15:35.699 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:35.699 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.699 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:35.701 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.704 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:35.704 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.704 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:35.704 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:15:35.705 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.705 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:15:35.705 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:35.714 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.714 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:35.714 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.714 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.717 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.718 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 16 msec}
2025-04-07 12:15:35.723 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:15:35.725 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-07 12:15:35.726 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:15:35.734 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:35.734 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.734 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:35.737 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.738 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.738 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.746 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.746 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.746 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.745 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:15:35.748 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.749 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.755 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.755 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.756 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.758 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:15:35.761 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.761 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:35.762 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 5 msec}
2025-04-07 12:15:35.765 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 13 msec}
2025-04-07 12:15:35.770 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 8 msec}
2025-04-07 12:15:35.770 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 8 msec}
2025-04-07 12:15:35.773 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 5 msec}
2025-04-07 12:15:35.786 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:15:35.786 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.786 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:15:35.788 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.790 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:35.791 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.791 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:35.791 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:35.791 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.792 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:35.794 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.794 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:15:35.794 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.794 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:15:35.795 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.796 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:15:35.796 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.797 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:35.797 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.797 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:35.797 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.798 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:35.798 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.798 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.799 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:35.798 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:35.799 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.800 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:35.800 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:35.801 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.800 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.801 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.802 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.802 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.802 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.802 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.804 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.807 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.810 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 4 msec}
2025-04-07 12:15:35.811 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.811 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.811 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.813 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.815 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.817 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 15 msec}
2025-04-07 12:15:35.817 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.825 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 5 msec}
2025-04-07 12:15:35.828 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 19 msec}
2025-04-07 12:15:35.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:35.841 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:35.841 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.841 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.848 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.848 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.856 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:15:35.858 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.858 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:35.858 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.858 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:35.860 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:35.860 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.860 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-07 12:15:35.862 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:35.862 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.864 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.865 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.865 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.866 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.866 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:15:35.868 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.871 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:35.872 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:35.873 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.873 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:35.873 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:35.873 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.873 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:35.873 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.874 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.874 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.875 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:35.875 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.875 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.877 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.877 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.881 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.881 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.881 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.881 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-07 12:15:35.884 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.888 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:15:35.891 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.894 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:35.899 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.899 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:35.899 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:35.901 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:35.902 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:35.904 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:35.907 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:36.317 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.317 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:36.317 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.325 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:36.327 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:36.329 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:36.329 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:36.331 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:36.765 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.765 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:36.765 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.774 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:36.776 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:36.777 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:36.778 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:36.780 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:36.833 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.833 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:36.833 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.842 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:36.844 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:36.845 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:36.845 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:36.847 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:36.858 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.858 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:36.858 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:36.860 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:36.862 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:36.863 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:36.864 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:36.865 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:37.637 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:37.637 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:37.637 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.637 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.637 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:37.637 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:37.641 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.641 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.644 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.644 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.647 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.647 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.648 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:37.649 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:37.652 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. update tb_account
        set curr_shop_id=2
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.652 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:37.657 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:37.658 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.658 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:37.658 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:37.658 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.658 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:37.660 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.660 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.663 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.664 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.668 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.668 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.669 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:37.669 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:37.672 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:37.672 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.672 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:15:37.689 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:37.690 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.690 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:37.694 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.697 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:37.697 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.697 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:37.697 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:37.703 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:37.703 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.703 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:37.705 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.708 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.709 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.709 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.709 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.713 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.713 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:37.714 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.715 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.715 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.715 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:15:37.716 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.716 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.716 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:37.716 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.717 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.717 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.717 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.718 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 0 msec}
2025-04-07 12:15:37.719 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.719 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-07 12:15:37.720 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:37.722 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.724 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 4 msec}
2025-04-07 12:15:37.726 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:37.727 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.727 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:37.726 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:37.728 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.728 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:37.730 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.730 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.731 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.731 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.731 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.731 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:37.731 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.731 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:37.732 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.732 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.733 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.733 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.734 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.734 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.734 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.734 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:37.737 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.737 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-07 12:15:37.738 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.740 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-07 12:15:37.740 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.740 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.740 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.741 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.744 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.748 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:37.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.750 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.750 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.750 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.752 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.754 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:15:37.754 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:37.755 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.755 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:37.756 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.757 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.759 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.759 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.759 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.760 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.760 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.762 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.763 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.763 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.765 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.765 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.765 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.765 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.766 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:37.767 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.767 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:37.770 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.771 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.771 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.771 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:37.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:37.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:37.772 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.773 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.773 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.774 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.774 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.776 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.776 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.776 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.776 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.776 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.778 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:37.778 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.779 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.782 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.784 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.793 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.793 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.793 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.794 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.797 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.798 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.800 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.804 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.804 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.804 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.806 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.808 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.809 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.810 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:37.814 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.814 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:37.814 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:37.816 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:37.817 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:37.818 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:37.819 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:38.322 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:38.323 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.323 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:38.325 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.328 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.331 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.332 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:38.335 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:15:38.960 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:38.960 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.960 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:38.964 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.966 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:38.969 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.969 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.970 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.972 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:38.972 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.972 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:15:38.972 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.974 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.974 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.974 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.974 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.975 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:38.975 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:38.976 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:38.976 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:38.976 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:38.976 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update tb_account
        set curr_shop_id=1
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.985 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:38.985 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:38.985 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:38.985 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:38.985 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:38.986 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:38.988 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.988 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.988 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.988 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:38.989 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.989 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.989 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.989 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:38.990 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.990 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.990 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.990 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:38.991 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:38.991 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:38.991 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:38.991 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:38.992 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:38.992 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:38.992 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=1, shop_nm=병천점}
2025-04-07 12:15:38.998 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:38.998 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:38.998 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.001 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.003 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.005 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.006 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:39.006 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.006 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:39.009 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:15:39.009 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.013 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:39.018 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:39.019 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.019 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:39.020 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:39.020 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.020 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:39.021 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:39.021 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.021 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:39.022 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.022 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.022 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.022 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.022 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.022 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:39.023 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.023 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.023 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.024 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.024 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.024 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.024 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:39.024 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:39.024 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.024 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:39.025 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.025 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.025 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.025 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.025 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.026 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.026 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.029 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 3 msec}
2025-04-07 12:15:39.029 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:39.029 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.029 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:39.029 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.031 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.034 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.034 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.034 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.035 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.036 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:15:39.041 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 15 msec}
2025-04-07 12:15:39.042 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=1
 {executed in 14 msec}
2025-04-07 12:15:39.042 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:15:39.042 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.042 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=1 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 11 msec}
2025-04-07 12:15:39.042 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 15 msec}
2025-04-07 12:15:39.043 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.047 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:15:39.047 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-07 12:15:39.049 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.049 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.049 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.052 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.053 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.053 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.053 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.054 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.055 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.055 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:39.055 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.056 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.057 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:39.060 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:39.066 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.066 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.066 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.067 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.067 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.067 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.068 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.068 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.069 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.069 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.070 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.070 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.072 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:39.072 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:39.076 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.076 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.076 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.076 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.076 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:39.076 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.078 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.078 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.079 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.079 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.080 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.080 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.081 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:39.081 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:39.088 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.088 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.088 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.089 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.096 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:15:39.097 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.098 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:39.108 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.108 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.108 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.109 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.111 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:39.112 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.113 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:39.119 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.119 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.119 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.125 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.127 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:39.128 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.129 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:39.139 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.140 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.140 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.141 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.142 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.143 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.145 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:39.151 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.151 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.151 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:39.157 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.159 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:39.160 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.161 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:39.767 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:39.767 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:39.767 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:39.768 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:39.776 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:15:39.777 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:39.779 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:39.781 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:40.608 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:40.608 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.608 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:40.611 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.614 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:40.616 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.618 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.616 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.619 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:40.619 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.619 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.621 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.621 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.621 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.622 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:40.622 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.623 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.623 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:40.624 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:15:40.624 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.624 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:40.625 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. update tb_account
        set curr_shop_id=3
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.632 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:40.633 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.633 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.634 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.634 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.634 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.634 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.635 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.634 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.635 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.635 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.635 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.635 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.636 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:40.636 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:40.636 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:40.636 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.636 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:40.637 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:40.637 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=경기도 부천시 소사구 범박동 힐스테이트 503-602, br_no=5218702490, provider=3, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=3, shop_nm=라인탁송}
2025-04-07 12:15:40.641 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.641 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.641 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.643 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.644 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.646 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.650 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:15:40.652 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:40.652 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.652 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:40.655 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.658 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.659 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:40.660 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.661 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:40.662 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.662 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.662 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.662 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.664 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.664 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:40.664 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:40.664 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:40.665 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.665 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.665 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:40.665 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.666 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.666 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.666 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.666 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.667 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.667 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=3
 {executed in 1 msec}
2025-04-07 12:15:40.667 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=3 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=3 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:40.667 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:40.670 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 3 msec}
2025-04-07 12:15:40.672 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:40.673 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.673 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:40.675 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.676 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.677 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:40.678 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.678 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.678 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.678 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.678 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.679 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.679 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.680 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.681 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.681 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=3 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:40.682 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.682 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:40.683 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-07 12:15:40.687 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.687 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.687 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.687 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.687 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.687 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.689 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.689 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.691 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.691 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.692 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.692 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.693 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.693 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:40.701 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.701 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.701 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.701 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.701 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.701 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.703 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.703 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.705 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.705 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.705 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.705 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.707 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.707 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:40.712 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.712 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.712 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:40.712 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.712 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.712 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.713 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.713 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.714 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.714 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.715 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.715 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.716 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.716 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:40.720 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.721 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.721 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.722 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.723 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.724 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.725 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:40.728 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.729 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.729 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.730 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.731 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.731 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.732 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:40.736 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.736 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.736 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.737 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.738 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.739 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.740 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.744 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.744 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.744 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.745 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.746 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.746 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.748 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.751 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.751 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.751 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.752 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.753 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:40.754 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.755 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:40.758 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.758 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:40.758 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:40.759 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:40.760 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:40.761 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:40.762 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:44.007 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.008 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.008 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.007 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.008 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.008 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.010 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:44.010 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.010 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:44.012 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.010 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:44.013 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.013 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:44.013 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.012 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.015 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:44.015 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.015 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.015 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:44.017 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.018 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:44.018 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.018 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:44.018 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:44.020 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.020 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.020 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.021 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:44.022 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.023 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.024 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:15:44.026 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=3 and
                device_id is not null and
                actv_dt like '2025-03%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3 and
                actv_dt like '2025-03%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-03%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-03%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 4 msec}
2025-04-07 12:15:44.026 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 3 msec}
2025-04-07 12:15:44.029 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 3 msec}
2025-04-07 12:15:44.029 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-02%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-03%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 6 msec}
2025-04-07 12:15:44.037 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.037 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.037 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.039 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.041 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:44.042 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.042 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.042 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.042 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.044 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.045 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:44.045 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.046 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.049 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:44.049 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.050 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.050 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.051 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.053 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.054 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.054 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.054 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.054 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.058 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.061 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 4 msec}
2025-04-07 12:15:44.064 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:15:44.066 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.067 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.067 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.067 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.070 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.071 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 4 msec}
2025-04-07 12:15:44.071 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.072 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.074 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:44.079 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.079 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.079 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.080 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.082 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.083 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.084 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:44.088 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.088 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.088 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.090 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.091 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.092 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.093 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.204 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.205 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:44.205 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.206 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.206 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.206 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.206 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.206 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.207 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.207 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.207 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:44.207 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:44.207 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.208 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.208 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.208 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.208 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.208 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.210 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:44.210 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:44.215 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=3 and
                device_id is not null and
                actv_dt like '2025-02%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3 and
                actv_dt like '2025-02%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-02%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-02%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:15:44.215 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 5 msec}
2025-04-07 12:15:44.216 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.216 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.216 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.218 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.218 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-01%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-02%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 8 msec}
2025-04-07 12:15:44.221 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:44.228 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.237 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 5 msec}
2025-04-07 12:15:44.237 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.237 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.237 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.239 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.242 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:44.244 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.244 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.244 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.245 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.246 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.247 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.247 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:44.248 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.251 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:15:44.252 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.252 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.252 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.255 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.257 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.257 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.257 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.257 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:44.258 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.258 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.259 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:44.259 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.260 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:44.261 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:44.266 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.267 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.267 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.268 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.269 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.270 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.272 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:44.276 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.276 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.276 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.277 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.278 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.279 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.280 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.448 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:44.450 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.450 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.450 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.450 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.450 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.451 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.451 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.451 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.451 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.451 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.452 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.452 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.452 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.452 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.452 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.455 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:15:44.455 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:15:44.455 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=3 and
                device_id is not null and
                actv_dt like '2025-01%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3 and
                actv_dt like '2025-01%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-01%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 3 and
                actv_dt like '2025-01%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-07 12:15:44.456 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=3
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 3 msec}
2025-04-07 12:15:44.459 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2024-12%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=3 and
                actv_dt like '2025-01%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:15:44.462 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.462 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.462 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.463 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.465 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:44.467 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.469 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:44.470 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.470 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.470 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.473 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.474 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.475 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.475 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.475 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.477 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.479 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.480 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:44.480 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.482 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.485 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:15:44.485 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.485 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.485 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:44.487 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.489 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.490 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.490 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.490 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.491 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.491 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.492 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:44.492 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.493 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.494 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:44.498 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.499 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.499 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.500 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.500 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:44.501 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.502 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:44.507 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.507 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:44.507 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:44.509 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:44.510 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:44.511 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:44.512 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:45.052 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:45.052 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:45.052 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:45.054 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:45.056 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:45.059 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:45.060 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:45.063 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:46.200 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:46.200 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.200 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:46.202 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.205 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:46.206 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.206 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:46.206 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.206 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.206 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.208 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.208 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.208 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.208 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.209 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.211 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.211 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.212 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:46.212 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:15:46.213 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.213 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.213 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.213 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:46.214 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:46.215 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.215 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.217 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-07 12:15:46.217 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 3  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:46.218 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=3 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.219 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. update tb_account
        set curr_shop_id=1
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.226 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:46.227 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:46.227 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.227 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:46.228 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.228 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.228 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.228 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.229 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.229 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.229 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.229 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.230 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.230 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.230 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.230 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.230 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:46.230 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:46.231 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.231 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:46.231 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.231 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:46.231 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=1, shop_nm=병천점}
2025-04-07 12:15:46.235 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.235 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.235 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.237 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.238 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.240 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.241 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:46.244 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:46.244 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.244 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:46.247 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.248 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:46.249 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.249 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.249 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.250 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:46.250 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:46.250 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.250 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:46.253 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.253 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.254 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.254 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.253 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.254 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.254 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.254 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:46.254 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.254 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.255 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.255 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.255 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.255 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.255 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.255 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-07 12:15:46.255 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.256 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=1
 {executed in 0 msec}
2025-04-07 12:15:46.257 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:46.257 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:46.259 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 2 msec}
2025-04-07 12:15:46.259 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.266 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2024-12%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-01%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 2 msec}
2025-04-07 12:15:46.266 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:46.266 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.267 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:46.269 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.269 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.270 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.270 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.270 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.270 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.270 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.271 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.271 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.272 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.272 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.272 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.274 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.274 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:15:46.274 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=1 and
                device_id is not null and
                actv_dt like '2025-01%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1 and
                actv_dt like '2025-01%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-01%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-01%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:46.276 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-07 12:15:46.281 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.281 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.281 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.281 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.281 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.281 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.284 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.284 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.285 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.285 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.286 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.286 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.288 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:46.288 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.294 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.294 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.294 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.294 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.294 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.294 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.296 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.296 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.297 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.297 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.299 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.299 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.301 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:46.301 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:46.305 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.305 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.305 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.305 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.305 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.305 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:46.308 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.308 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.309 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.309 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.309 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.309 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.311 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:46.311 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:46.314 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.314 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.314 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.316 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.317 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.317 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.318 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:46.322 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.322 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.322 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.324 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.325 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.325 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.326 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:46.330 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.330 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.330 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.331 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.332 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.333 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.334 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.337 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.337 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.337 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.338 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.340 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.341 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.342 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.346 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.346 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.346 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.347 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.348 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:46.349 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.350 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:46.353 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.354 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:46.354 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:46.354 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:46.355 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:46.356 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:46.357 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:47.413 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:47.413 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:47.413 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:47.416 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:47.419 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:47.422 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:47.423 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:47.426 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:48.031 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:48.033 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.033 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:15:48.035 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.038 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:48.039 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.040 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.041 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.042 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.042 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.043 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.043 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.043 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.043 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.045 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:48.045 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.045 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.046 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:48.046 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:48.046 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:48.047 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:48.047 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. update tb_account
        set curr_shop_id=2
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:48.054 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.054 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.054 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.055 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.055 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.055 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.054 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:48.055 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.055 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:48.056 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.056 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.057 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.057 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:48.057 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.057 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:15:48.058 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.058 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.058 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.058 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.059 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.059 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.059 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.059 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.059 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:48.059 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.059 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:48.060 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.060 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:48.060 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:48.060 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:48.061 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:15:48.065 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.065 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.065 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.067 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.068 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.069 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.071 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.075 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:48.075 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.076 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.076 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.076 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.076 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:48.078 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.078 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.080 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:48.080 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.080 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:48.080 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:48.080 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.080 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:48.081 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:48.081 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.081 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:48.081 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.082 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.082 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.082 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:48.082 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:48.083 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.083 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.083 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.084 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.085 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.085 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.085 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.085 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:48.085 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:48.085 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.085 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:48.086 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.086 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.086 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.086 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.087 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.087 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:48.088 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-07 12:15:48.088 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:48.088 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:48.091 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2024-12%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-01%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 4 msec}
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:48.095 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.097 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.097 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.097 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.097 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.098 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.098 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.098 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.098 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.099 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.099 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.099 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.099 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.100 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:48.100 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-01%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-01%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-01%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-01%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:48.100 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.101 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-07 12:15:48.101 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:48.101 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.101 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:48.104 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.106 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.106 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.106 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.106 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.107 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.107 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.108 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.109 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.112 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:48.113 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.113 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.113 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.115 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.115 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.115 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.115 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.115 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.116 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:48.116 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.116 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.117 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.117 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:48.117 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:48.124 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.124 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.124 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.126 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.126 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.126 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.126 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:48.127 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.127 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.127 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.128 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.128 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.129 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.129 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:48.133 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.134 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.134 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.134 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:48.134 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.134 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:48.136 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.136 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.137 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.137 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.138 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.138 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.140 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.143 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.143 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.143 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.144 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.145 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:48.145 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.145 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:48.146 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:48.146 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.146 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:48.146 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.147 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.147 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:48.162 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.162 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.162 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.163 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.165 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:48.167 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.168 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:48.172 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.172 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:48.172 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:48.176 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:48.177 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:48.178 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:48.179 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:49.810 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:49.811 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:49.811 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:49.813 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:49.817 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:49.818 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:49.819 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:49.822 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:50.709 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:50.710 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:50.710 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:50.712 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:50.714 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:50.716 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:50.716 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:50.718 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:52.583 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:52.583 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:52.583 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:52.584 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:52.586 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:52.587 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:52.587 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/all
2025-04-07 12:15:52.587 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:52.587 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/all
2025-04-07 12:15:52.587 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:52.588 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:52.589 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:52.589 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:52.590 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:52.593 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:52.593 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:52.593 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:52.594 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:52.600 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:52.615 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:52.620 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:52.621 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:15:52.626 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with sale as (
            select s.*,
                   IF(device_id is not null, true, false) as ct,
                   IF(wt_cms > 0 and (internet_plan is not null or tv_plan is not null), true, false) as wt,
                   IF(s.sd_id is not null, true, false) as sd,
                (
                    select device_nm
                    from tb_device
                    where device_id=s.device_id
                    ) as device_nm,
                (
                    select device_cd
                    from tb_device
                    where device_id=s.device_id
                    ) as device_cd,
                (
                select ct_plan_nm
                from tb_ct_plan
                where ct_plan_id=s.ct_actv_plan
                ) as ct_actv_plan_nm,
                (
                select ct_plan_nm
                from tb_ct_plan
                where ct_plan_id=s.ct_dec_plan
                ) as ct_dec_plan_nm,
                IFNULL(ac.name, s.seller_id) as seller_nm,
                IF(ac.name is not null, ac.pfp, 0) as seller_pfp
            from tb_sale s
            left outer join tb_account ac on s.seller_id=ac.id
            where shop_id=2

                order by actv_dt desc

        ), filters as (
            select *
            from sale
            where

            1=1

                limit 30

        ), search as (
            select *
            from filters
            where

            1=1
        ), result as (
                select json_arrayagg(json_object(
                'sale_id',sale_id,
                'cust_nm', cust_nm,
                'cust_tel',cust_tel,
                'cust_cd',cust_cd,
                'cust_gd',cust_gd,
                'actv_dt',actv_dt,
                'total_cms',total_cms,
                'ct', ct,
                'wt',wt,
                'sd',sd,
                'device_nm',device_nm,
                'seller_nm',seller_nm,
                'seller_pfp', seller_pfp
                ))
                from search
        )

        select (
            select count(*)
            from filters
        ) as total_cnt,
            (
                select *
                from result
        ) as list
 {executed in 10 msec}
2025-04-07 12:15:53.739 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:53.739 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.739 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:15:53.739 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:15:53.739 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.739 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:15:53.740 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:53.740 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.740 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:15:53.740 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.741 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.741 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.742 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.742 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.743 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.744 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.744 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.745 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.747 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.747 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:53.747 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:53.748 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:53.748 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:53.748 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:15:53.749 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.749 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.749 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.750 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.750 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:53.751 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.751 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.751 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:53.752 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:53.754 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 3 msec}
2025-04-07 12:15:53.757 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 5 msec}
2025-04-07 12:15:53.757 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 4 msec}
2025-04-07 12:15:53.758 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:15:53.758 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.758 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:15:53.760 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.761 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:15:53.761 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.761 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:15:53.764 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.765 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:53.766 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.766 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:15:53.766 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 10 msec}
2025-04-07 12:15:53.766 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:15:53.766 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.768 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.768 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.768 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.768 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:15:53.769 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:53.769 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:53.769 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.769 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:53.769 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:15:53.769 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.769 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:15:53.770 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:53.770 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.771 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.771 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.772 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.772 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.772 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.773 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.773 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.773 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.773 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:53.773 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.773 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:53.773 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.773 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 1 msec}
2025-04-07 12:15:53.774 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.774 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 0 msec}
2025-04-07 12:15:53.774 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 0 msec}
2025-04-07 12:15:53.774 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:53.776 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:15:53.780 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.789 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.789 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.789 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.789 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.789 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.789 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.790 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.790 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.791 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.791 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:15:53.792 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.793 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.796 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:15:53.796 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:53.801 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.801 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.801 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.801 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.801 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.801 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.802 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.802 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.803 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.803 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.804 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.804 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.805 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:53.805 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.813 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:15:53.820 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.820 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.820 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.825 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:15:53.825 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:15:53.826 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:15:53.827 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.827 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.827 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.828 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:15:53.828 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:15:53.835 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.835 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.835 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.838 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.839 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.840 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.842 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:53.842 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.842 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:15:53.842 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:53.843 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.844 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.845 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.846 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.846 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.846 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.847 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.849 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.850 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.852 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:15:53.857 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.857 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTczNSwiZXhwIjoxNzQzOTk2MzM1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.LbaxOJDLbxdJ9ncw7Lq19OuRSQmok6siWk1QZVXkPro
2025-04-07 12:15:53.857 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:15:53.859 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:15:53.860 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:15:53.861 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:15:53.862 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:16:34.255 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-07 12:17:37.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:17:37.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:17:37.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:17:37.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:17:37.414 INFO  [http-nio-11040-exec-7] [com.momo.api.AuthController] - refresh
2025-04-07 12:17:37.432 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTkzMzV9.NiGo8lQpHj7DTf3YzXhD3p4VGRXbfkdEztZGtgUXN9I'
 {executed in 1 msec}
2025-04-07 12:17:37.434 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:37.434 INFO  [http-nio-11040-exec-7] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.467 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:37.468 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:37.468 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.468 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:37.469 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.468 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.492 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.493 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.494 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.496 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.496 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.497 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:17:37.497 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:37.497 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.498 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:37.498 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:17:37.499 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:37.499 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-07 12:17:37.499 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:37.545 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:37.545 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.545 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:37.545 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:17:37.545 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.545 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:17:37.546 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:37.546 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.546 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.547 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.548 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.548 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.548 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.549 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.549 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.549 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.551 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:37.551 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:37.551 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:37.551 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:37.551 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.551 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.551 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.551 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.561 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-07 12:17:37.561 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.561 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-07 12:17:37.561 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.561 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.562 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 4 msec}
2025-04-07 12:17:37.563 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 3 msec}
2025-04-07 12:17:37.566 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 15 msec}
2025-04-07 12:17:37.576 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 11 msec}
2025-04-07 12:17:37.576 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 24 msec}
2025-04-07 12:17:37.579 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 13 msec}
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:17:37.629 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:17:37.630 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.630 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:17:37.630 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:37.630 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.630 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:37.631 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.631 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:37.631 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.631 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.632 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.632 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.632 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.631 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:37.632 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.633 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.633 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.633 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.643 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-07 12:17:37.643 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.661 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:37.662 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.662 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:37.662 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 29 msec}
2025-04-07 12:17:37.662 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 29 msec}
2025-04-07 12:17:37.662 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.662 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.663 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.664 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 33 msec}
2025-04-07 12:17:37.664 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.665 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 32 msec}
2025-04-07 12:17:37.665 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.665 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 32 msec}
2025-04-07 12:17:37.665 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.666 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.667 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:37.667 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.667 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-07 12:17:37.667 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:37.674 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 9 msec}
2025-04-07 12:17:37.674 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 3 msec}
2025-04-07 12:17:37.678 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 12 msec}
2025-04-07 12:17:37.680 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 13 msec}
2025-04-07 12:17:37.681 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 6 msec}
2025-04-07 12:17:37.697 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:37.697 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.697 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:37.699 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.699 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.699 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.700 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.701 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.702 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.709 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.711 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.715 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.717 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 15 msec}
2025-04-07 12:17:37.717 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 17 msec}
2025-04-07 12:17:37.717 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.717 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.718 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:37.718 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.728 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 10 msec}
2025-04-07 12:17:37.728 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 5 msec}
2025-04-07 12:17:37.743 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:37.743 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.743 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:37.743 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.743 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.744 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.744 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.744 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.744 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.745 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.745 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.745 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.747 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.747 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:37.747 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:37.747 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.747 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.747 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.748 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:37.748 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:37.762 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:37.763 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.763 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:37.764 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.764 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.764 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.765 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.765 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.765 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.765 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.765 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.765 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.767 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:37.767 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:37.799 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.799 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.799 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.800 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.801 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.802 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.813 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:17:37.829 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.829 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.829 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.831 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.832 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:37.832 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.842 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 9 msec}
2025-04-07 12:17:37.851 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.851 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:37.852 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:37.858 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:37.863 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:17:37.863 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:37.865 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:38.350 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:38.350 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:38.350 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:38.352 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:38.362 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:38.362 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:38.363 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:38.366 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-07 12:17:40.342 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:40.342 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:40.342 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:40.343 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:40.346 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:40.346 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:40.347 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:40.350 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:40.437 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:40.437 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:40.437 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:40.439 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:40.442 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:40.442 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:40.443 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:40.445 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:42.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:42.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:42.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:42.661 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:42.663 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:42.663 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:42.664 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:42.666 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:43.423 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:43.423 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.423 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:43.424 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:43.425 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.425 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:43.426 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.426 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.427 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.427 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.427 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.427 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.427 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.427 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.428 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:43.428 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.428 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.428 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.429 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.429 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:43.429 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.429 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:43.431 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.431 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.431 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:43.431 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.431 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.434 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:17:43.434 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:17:43.435 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. update tb_account
        set curr_shop_id=1
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:17:43.439 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:43.439 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.439 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:43.441 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.441 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.441 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.441 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.441 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.442 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.442 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.442 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:43.442 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.442 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:43.442 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.442 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.443 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:43.443 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.443 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.443 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.443 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.443 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:43.443 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:43.443 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:43.444 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.444 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.444 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:43.444 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:43.444 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-07 12:17:43.445 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:43.445 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:43.445 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=1, shop_nm=병천점}
2025-04-07 12:17:43.449 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.449 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.449 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.450 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.451 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.452 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.455 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:43.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:43.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:43.458 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.458 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.458 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.460 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.460 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.462 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.462 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.463 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.464 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:43.465 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.466 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.466 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.466 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.466 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:17:43.468 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:43.468 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:43.468 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:43.469 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:43.469 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:43.470 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.470 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.470 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.471 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.473 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:17:43.474 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=1
 {executed in 1 msec}
2025-04-07 12:17:43.475 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:43.476 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.476 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:43.477 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-07 12:17:43.478 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:17:43.478 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:43.478 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.478 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:43.480 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.480 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.481 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.481 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.482 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.483 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.483 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.484 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.484 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=1 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-07 12:17:43.484 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.485 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-07 12:17:43.485 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.485 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.487 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:17:43.488 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:43.493 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.493 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.494 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.494 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.494 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.494 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.496 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.497 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.498 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.498 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:43.498 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.499 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.500 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:43.500 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:43.505 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.505 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.505 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.505 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.505 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:43.505 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.506 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.506 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.507 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.507 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.507 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.508 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.509 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:43.509 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:43.512 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.512 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.512 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.513 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.526 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-07 12:17:43.527 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.528 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:43.532 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.532 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.532 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.533 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.534 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.535 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.542 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:43.546 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.546 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.546 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.548 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.549 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.550 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.557 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 6 msec}
2025-04-07 12:17:43.562 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.562 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.562 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.563 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.565 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.571 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.573 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:43.577 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.577 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:43.577 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:43.578 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:43.580 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:43.580 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:43.581 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:44.126 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.126 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.126 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.128 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.129 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:44.130 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.131 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:44.132 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:44.932 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:44.933 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.933 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:44.935 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.939 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.939 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.941 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.941 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.941 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.941 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.942 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:44.943 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.943 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.943 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.944 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.944 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.945 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:44.945 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.946 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update tb_account
        set curr_shop_id=2
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:17:44.947 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:44.948 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:44.948 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.954 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:44.956 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.956 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.956 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.956 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.958 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.958 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.958 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.958 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.958 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.958 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.958 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.958 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.958 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:44.958 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:44.959 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:44.959 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:44.959 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:44.959 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:44.959 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:17:44.965 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.965 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.965 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.967 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.968 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:44.969 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.971 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:44.975 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.975 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.975 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:44.979 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.981 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.982 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.982 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.982 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:44.982 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.983 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:44.984 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.984 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.984 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.984 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.985 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.985 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.985 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.985 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:44.985 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.985 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:44.985 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:44.985 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:44.986 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.986 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:44.986 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.987 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.989 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:17:44.989 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 4 msec}
2025-04-07 12:17:44.990 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 4 msec}
2025-04-07 12:17:44.991 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-07 12:17:44.993 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 1 msec}
2025-04-07 12:17:44.994 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:44.994 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.994 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:44.996 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:44.999 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:44.999 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:45.001 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.001 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.001 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.001 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.002 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.002 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.002 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.002 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-07 12:17:45.002 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.002 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:45.002 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.002 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.002 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.004 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:45.004 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:45.006 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-07 12:17:45.009 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.009 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.009 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.009 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:45.009 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.009 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:45.010 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.010 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.011 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.011 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.011 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.011 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.013 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:45.013 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:45.018 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.018 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.018 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.018 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:45.018 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.018 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:45.020 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.020 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.021 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.021 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.021 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.021 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.022 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:45.022 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:45.023 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:45.023 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.023 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:45.028 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.032 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.032 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.032 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.034 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:17:45.034 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.034 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.038 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:45.038 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.040 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:45.043 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.043 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.043 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:45.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:45.045 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.045 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.046 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.046 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.046 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:45.046 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.047 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:45.058 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.058 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.058 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.060 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.061 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.061 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.063 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:45.065 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.065 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.066 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.067 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.068 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.068 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.069 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:45.073 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.074 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.074 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:45.075 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.076 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:45.076 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.077 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:45.646 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:45.646 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:45.646 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:45.648 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:45.656 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:17:45.656 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:45.657 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:45.658 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:46.244 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:46.244 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.244 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:46.246 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.248 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.248 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.250 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.250 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.250 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.250 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.251 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.251 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:46.250 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.251 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.251 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.251 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.252 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.253 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.253 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.255 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.255 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.255 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.255 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.255 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.255 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.255 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:46.256 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. update tb_account
        set curr_shop_id=1
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:17:46.257 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.258 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:17:46.258 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.264 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:46.266 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.266 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.266 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.266 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.267 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.267 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.267 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.267 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.268 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.268 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.268 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.268 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.269 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:46.269 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:46.270 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:46.270 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.271 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:46.272 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:46.272 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=1, shop_nm=병천점}
2025-04-07 12:17:46.275 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.275 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.275 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.277 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.278 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.279 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.281 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:46.285 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.286 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.286 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.289 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.285 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.290 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.290 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.293 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:46.295 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.297 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.297 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:46.297 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.297 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.297 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:46.298 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.299 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:46.299 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.299 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.299 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:46.299 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.299 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.299 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.300 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.301 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.302 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.302 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.303 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.303 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-07 12:17:46.303 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.303 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.303 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.304 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.304 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=1
 {executed in 1 msec}
2025-04-07 12:17:46.304 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:46.306 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=1 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-07 12:17:46.308 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:46.308 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.308 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:46.309 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=1 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 4 msec}
2025-04-07 12:17:46.311 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.313 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.314 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.316 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.316 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.316 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.316 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:46.316 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:46.316 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:46.316 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=1 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 1 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 0 msec}
2025-04-07 12:17:46.317 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.317 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.317 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.319 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:46.319 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:46.320 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=1
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-07 12:17:46.326 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.326 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.326 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.326 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.326 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.326 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.329 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.329 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.330 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.330 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.331 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.331 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.332 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:46.332 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:46.339 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.339 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.339 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.339 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.339 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.339 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.340 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.341 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.342 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.342 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.342 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.342 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.344 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:46.344 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:46.359 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.359 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.359 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.359 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.359 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.360 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:46.361 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.361 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.362 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:46.362 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.362 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.362 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.363 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:46.363 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 1  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:46.374 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.374 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.374 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.375 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.377 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.377 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.379 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.383 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.384 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.388 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.390 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.391 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.392 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.393 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.397 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.397 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.397 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.403 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.406 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.407 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.408 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.413 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.413 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.413 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.415 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.416 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.417 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.423 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 6 msec}
2025-04-07 12:17:46.428 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.428 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.428 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.429 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.431 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:46.436 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.439 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:17:46.442 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.442 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.442 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:46.444 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.446 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.447 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.448 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=1 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:46.799 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.800 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:46.800 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:46.812 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:46.815 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:46.817 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:46.818 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:46.821 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:47.689 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:47.689 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.690 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/shop/curr
2025-04-07 12:17:47.694 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.697 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:47.699 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.699 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:47.700 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.700 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:47.700 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.700 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.700 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.701 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:47.701 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.701 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.701 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.702 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.702 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.703 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.704 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.704 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.704 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.704 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. update tb_account
        set curr_shop_id=2
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:47.704 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.705 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.705 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.705 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-07 12:17:47.708 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:17:47.708 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:17:47.708 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.714 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:47.715 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:47.715 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.715 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:17:47.716 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.716 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.717 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.717 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.717 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.717 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.717 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.717 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.717 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.717 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.717 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.717 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.718 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:47.718 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:47.718 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:47.718 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:17:47.718 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-07 12:17:47.719 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:17:47.719 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:17:47.724 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.724 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.724 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.725 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.726 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.726 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.728 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.732 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.732 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:47.732 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.732 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.732 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:17:47.732 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.734 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.734 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.736 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:47.736 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.736 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:47.736 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.736 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:17:47.736 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:47.737 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.737 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:17:47.737 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:17:47.738 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.738 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:17:47.739 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.739 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.739 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.740 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.740 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.741 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 3 msec}
2025-04-07 12:17:47.741 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.741 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:47.741 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.742 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:17:47.742 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.742 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.742 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:17:47.743 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:47.743 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.743 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:47.743 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.743 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.744 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 2 msec}
2025-04-07 12:17:47.748 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:17:47.748 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 4 msec}
2025-04-07 12:17:47.748 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.749 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 4 msec}
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.753 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.755 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.755 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.755 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.755 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.755 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.755 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.756 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.756 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:17:47.757 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.757 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.757 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:47.757 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.757 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:17:47.757 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.758 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.758 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.758 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:47.758 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.758 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:47.760 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.760 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:47.760 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-07 12:17:47.760 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:17:47.761 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-07 12:17:47.762 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.762 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.768 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.768 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.768 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.770 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.772 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.772 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.774 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.774 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.774 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.774 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.776 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.777 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.777 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.778 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.778 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.778 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.780 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:47.780 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.782 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.782 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.785 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.787 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.787 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.787 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:17:47.789 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.789 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.789 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.790 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.790 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.791 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.791 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.791 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.791 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.792 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.792 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:17:47.796 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:47.796 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.796 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:47.797 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.797 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.797 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.798 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.799 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.800 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.800 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.800 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.800 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.801 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.804 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.804 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.804 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.805 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.805 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:47.805 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.805 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:17:47.807 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.807 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.807 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.808 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.808 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.808 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.819 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.819 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.819 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.821 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.822 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.822 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.824 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:17:47.827 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.827 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTg1NywiZXhwIjoxNzQzOTk2NDU3LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.wXsPIl84EDY9PDbDIEv2FLy_XZ1GzGHabMhpBnCmkSA
2025-04-07 12:17:47.827 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:17:47.828 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:17:47.830 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:17:47.830 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:17:47.831 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:18:32.347 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 12:18:32.348 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@35a72d5e]]
2025-04-07 12:18:32.348 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 12:18:32.348 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:18:32.356 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 12:18:32.356 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 12:18:32.356 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:18:32.356 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-07 12:18:35.906 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-07 12:18:35.925 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 80930 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 12:18:35.925 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 12:18:36.038 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-07 12:18:36.038 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-07 12:18:36.764 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 12:18:36.770 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 12:18:36.771 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 12:18:36.771 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 12:18:36.795 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 12:18:36.795 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 756 ms
2025-04-07 12:18:37.279 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 12:18:37.285 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 12:18:37.285 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 12:18:37.286 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 12:18:37.286 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 12:18:37.286 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 12:18:37.286 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 12:18:37.286 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@115f1734
2025-04-07 12:18:37.312 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 12:18:37.418 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 12:18:37.685 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c90b4d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@393a88d3, org.springframework.security.web.context.SecurityContextHolderFilter@31df1df5, org.springframework.security.web.header.HeaderWriterFilter@3c562b80, org.springframework.web.filter.CorsFilter@4d8f1fcb, org.springframework.security.web.authentication.logout.LogoutFilter@789d22ed, com.momo.filter.JwtAuthorizationFilter@98f100f, org.springframework.security.web.session.ConcurrentSessionFilter@dcbb5ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3583cbb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71aea8ab, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2909a5b1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@506023fe, org.springframework.security.web.session.SessionManagementFilter@44916fb7, org.springframework.security.web.access.ExceptionTranslationFilter@62dc43c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45f72bd9]
2025-04-07 12:18:37.794 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 12:18:37.864 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 12:18:37.880 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 12:18:37.889 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 12:18:37.890 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 12:18:37.890 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5745d69b]]
2025-04-07 12:18:37.890 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 12:18:37.890 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 12:18:37.890 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 12:18:37.898 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 2.365 seconds (process running for 3.78)
2025-04-07 12:18:38.359 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-07 12:18:38.360 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-07 12:18:38.361 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 0 ms
2025-04-07 12:18:38.376 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-07 12:18:38.376 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:18:38.376 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-07 12:18:38.376 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:18:38.563 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:18:38.702 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.726 INFO  [http-nio-11040-exec-1] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1MTh9.6grptwUj8Ye4XG_SypczZC6z6vLiX1Ssdr3ST1GHlxU, expireTime=3600000, revoked=false, expired=false)
2025-04-07 12:18:38.730 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:18:38.732 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1MTh9.6grptwUj8Ye4XG_SypczZC6z6vLiX1Ssdr3ST1GHlxU'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.736 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.758 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:18:38.759 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.759 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:18:38.779 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.781 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.782 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.784 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:38.788 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.788 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:18:38.847 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:18:38.848 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:18:38.848 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:18:38.848 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:18:38.851 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - refresh
2025-04-07 12:18:38.856 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1MTh9.6grptwUj8Ye4XG_SypczZC6z6vLiX1Ssdr3ST1GHlxU'
 {executed in 2 msec}
2025-04-07 12:18:38.857 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.859 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:18:38.885 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-07 12:18:38.886 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.886 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-07 12:18:38.888 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.890 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:38.892 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.893 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:18:38.893 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.893 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:18:38.894 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:38.895 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.899 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:38.900 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.900 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:38.901 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:38.901 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.901 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:38.901 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 2 msec}
2025-04-07 12:18:38.901 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:18:38.901 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.901 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:18:38.903 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.903 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.906 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:18:38.916 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 13 msec}
2025-04-07 12:18:38.916 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-07 12:18:38.916 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.916 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.917 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:38.917 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:38.919 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.919 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-07 12:18:38.919 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:18:38.924 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:38.925 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.925 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:38.927 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.930 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:38.930 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.931 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:38.938 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 4 msec}
2025-04-07 12:18:38.943 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:18:38.943 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.943 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:18:38.944 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:18:38.944 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.944 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:18:38.944 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:18:38.945 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.945 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:18:38.945 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:18:38.945 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.945 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:18:38.946 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.946 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.946 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.946 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.956 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:18:38.956 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:18:38.956 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:18:38.956 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.957 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.957 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.960 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:18:38.982 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:38.974 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 14 msec}
2025-04-07 12:18:38.984 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:38.983 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:18:38.984 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.984 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:38.984 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.984 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:18:38.987 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.992 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.992 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 10 msec}
2025-04-07 12:18:38.993 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:18:38.994 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:38.994 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:18:38.998 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:38.999 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-07 12:18:39.000 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.000 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:18:39.000 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.000 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:18:39.000 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:18:39.000 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:18:39.001 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.002 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.002 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:39.005 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-07 12:18:39.007 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.008 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:18:39.008 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.008 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:18:39.008 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:18:39.008 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:18:39.008 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 7 msec}
2025-04-07 12:18:39.008 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.010 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.012 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 8 msec}
2025-04-07 12:18:39.017 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:18:39.019 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.019 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:18:39.026 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-07 12:18:39.024 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:18:39.028 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.028 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.031 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.033 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:18:39.034 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:18:39.034 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.034 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.036 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.040 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.040 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.036 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:39.044 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-07 12:18:39.045 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.051 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.052 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.052 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.050 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.055 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:18:39.056 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.056 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.056 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 13 msec}
2025-04-07 12:18:39.058 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 18 msec}
2025-04-07 12:18:39.061 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:18:39.062 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 4 msec}
2025-04-07 12:18:39.063 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.065 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:18:39.066 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.066 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:18:39.070 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 5 msec}
2025-04-07 12:18:39.071 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.074 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.075 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.075 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.076 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:18:39.077 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.078 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.081 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.081 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:39.081 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.082 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.082 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.084 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:18:39.084 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:18:39.084 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.084 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:18:39.084 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:18:39.087 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.090 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.091 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.093 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.093 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.096 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:39.096 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:39.097 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.097 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.101 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:18:39.102 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:18:39.113 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.113 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.113 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.113 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.113 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.113 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:18:39.114 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.114 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.116 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.116 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.117 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.117 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.119 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:18:39.119 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:18:39.125 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.126 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.126 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.128 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.129 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.130 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.132 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:18:39.137 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.137 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.137 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.138 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.141 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:39.142 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.143 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:18:39.147 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.147 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.147 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.149 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.150 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.150 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.151 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:18:39.154 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.154 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.154 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.156 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.157 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.157 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.158 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:18:39.161 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.161 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.161 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:18:39.162 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.163 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:18:39.164 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.165 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:18:39.778 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:39.778 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:39.778 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:39.782 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:39.792 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:18:39.792 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:39.793 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:39.797 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:18:40.491 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:40.491 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:40.491 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:40.493 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:40.497 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:40.497 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:40.498 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:40.502 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:18:40.573 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:40.573 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTkxOCwiZXhwIjoxNzQzOTk2NTE4LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.RnperULCLySz_yNkfGcanBGQIBjkdnnguwHizdCZkXo
2025-04-07 12:18:40.573 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:18:40.576 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:18:40.579 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:18:40.580 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:18:40.581 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:18:40.585 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:19:31.383 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 12:19:31.384 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5745d69b]]
2025-04-07 12:19:31.384 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 12:19:31.384 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:19:31.393 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 12:19:31.393 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 12:19:31.393 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:19:31.393 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-07 12:19:32.957 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-07 12:19:32.980 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 81379 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 12:19:32.980 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 12:19:33.100 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-07 12:19:33.101 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-07 12:19:33.822 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 12:19:33.827 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 12:19:33.828 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 12:19:33.828 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 12:19:33.851 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 12:19:33.851 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 750 ms
2025-04-07 12:19:34.331 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 12:19:34.337 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 12:19:34.337 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 12:19:34.338 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 12:19:34.338 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 12:19:34.338 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 12:19:34.338 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 12:19:34.338 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@78af890f
2025-04-07 12:19:34.364 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 12:19:34.468 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 12:19:34.731 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2f98994, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@29766c23, org.springframework.security.web.context.SecurityContextHolderFilter@244372e, org.springframework.security.web.header.HeaderWriterFilter@467438f0, org.springframework.web.filter.CorsFilter@49b8146c, org.springframework.security.web.authentication.logout.LogoutFilter@6dad263e, com.momo.filter.JwtAuthorizationFilter@2bbe6c67, org.springframework.security.web.session.ConcurrentSessionFilter@2273b1ec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25131933, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5aab2f2f, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@4401f9a9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65c5e5ad, org.springframework.security.web.session.SessionManagementFilter@4e365102, org.springframework.security.web.access.ExceptionTranslationFilter@7e3f1bba, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6602efa1]
2025-04-07 12:19:34.842 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 12:19:34.912 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 12:19:34.928 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 12:19:34.936 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 12:19:34.937 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 12:19:34.937 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@50521c73]]
2025-04-07 12:19:34.938 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 12:19:34.938 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 12:19:34.938 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 12:19:34.945 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 2.257 seconds (process running for 2.635)
2025-04-07 12:19:39.891 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 12:19:39.891 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@50521c73]]
2025-04-07 12:19:39.891 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 12:19:39.892 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:19:39.902 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 12:19:39.902 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 12:19:39.903 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:19:39.903 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-07 12:19:41.524 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-07 12:19:41.542 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 81451 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 12:19:41.542 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 12:19:41.641 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-07 12:19:41.641 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-07 12:19:42.493 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 12:19:42.498 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 12:19:42.499 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 12:19:42.499 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 12:19:42.521 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 12:19:42.522 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 880 ms
2025-04-07 12:19:43.162 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 12:19:43.174 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 12:19:43.175 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 12:19:43.176 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 12:19:43.177 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 12:19:43.177 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 12:19:43.177 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 12:19:43.177 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@36b9e401
2025-04-07 12:19:43.238 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 12:19:43.444 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 12:19:44.781 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3a13f837, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a5067e8, org.springframework.security.web.context.SecurityContextHolderFilter@69f43e01, org.springframework.security.web.header.HeaderWriterFilter@2172cc14, org.springframework.web.filter.CorsFilter@2b62d1f, org.springframework.security.web.authentication.logout.LogoutFilter@7a81e3ed, com.momo.filter.JwtAuthorizationFilter@212c762f, org.springframework.security.web.session.ConcurrentSessionFilter@50714a69, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4866da5d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33a59fa8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@40af7c9e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4dbf07d, org.springframework.security.web.session.SessionManagementFilter@182683b, org.springframework.security.web.access.ExceptionTranslationFilter@12f903fb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22f8c35a]
2025-04-07 12:19:44.967 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 12:19:45.071 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 12:19:45.093 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 12:19:45.102 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 12:19:45.104 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 12:19:45.104 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5bc2cd45]]
2025-04-07 12:19:45.104 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 12:19:45.104 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 12:19:45.104 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 12:19:45.111 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 3.922 seconds (process running for 4.372)
2025-04-07 12:19:45.449 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-07 12:19:45.450 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-07 12:19:45.451 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-07 12:19:45.464 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-07 12:19:45.465 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:19:45.465 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-07 12:19:45.465 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:19:45.652 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:19:45.791 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:45.814 INFO  [http-nio-11040-exec-1] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1ODV9.JJWw8s9Va8cEUvSjJs7oztDNIH6dgVWwy9OkDz_TwWo, expireTime=3600000, revoked=false, expired=false)
2025-04-07 12:19:45.817 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:45.819 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1ODV9.JJWw8s9Va8cEUvSjJs7oztDNIH6dgVWwy9OkDz_TwWo'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:45.823 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:45.845 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:19:45.846 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:45.846 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:19:45.864 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:45.867 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:45.867 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:45.870 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:45.873 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:45.874 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:19:45.930 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:19:45.930 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:19:45.930 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:19:45.930 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:19:45.933 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - refresh
2025-04-07 12:19:45.937 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1ODV9.JJWw8s9Va8cEUvSjJs7oztDNIH6dgVWwy9OkDz_TwWo'
 {executed in 2 msec}
2025-04-07 12:19:45.939 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:45.940 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:19:45.964 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-07 12:19:45.964 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:45.965 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-07 12:19:45.968 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:45.972 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:45.972 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:45.973 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:19:45.973 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:45.973 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:19:45.973 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:45.975 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:45.978 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:45.978 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 3 msec}
2025-04-07 12:19:45.978 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:19:45.978 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:45.978 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:19:45.979 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:45.980 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:45.980 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:45.980 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:45.981 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:45.981 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:45.984 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:45.984 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:19:45.984 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:19:45.986 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:45.986 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:45.990 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:45.990 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:45.991 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-07 12:19:45.991 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:19:45.991 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:45.995 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:19:46.002 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:46.003 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.003 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:46.007 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.013 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:19:46.013 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.014 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:46.025 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:19:46.025 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.025 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:19:46.026 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:19:46.026 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.026 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:19:46.027 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:19:46.027 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.027 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:19:46.027 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.028 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.029 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.032 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-07 12:19:46.033 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:46.034 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:46.034 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.034 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.045 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 15 msec}
2025-04-07 12:19:46.046 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.046 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.047 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.047 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.047 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.047 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.046 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.049 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.050 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.051 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:19:46.051 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.051 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:19:46.052 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 5 msec}
2025-04-07 12:19:46.053 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.054 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 5 msec}
2025-04-07 12:19:46.055 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:19:46.055 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.059 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:19:46.061 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.065 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-07 12:19:46.066 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.066 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:19:46.066 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:46.066 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.066 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:19:46.066 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:19:46.067 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.067 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:19:46.069 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.069 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.072 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:46.072 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 4 msec}
2025-04-07 12:19:46.072 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.074 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 7 msec}
2025-04-07 12:19:46.076 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:19:46.080 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 8 msec}
2025-04-07 12:19:46.081 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-07 12:19:46.081 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.081 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:19:46.081 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.081 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:19:46.084 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 6 msec}
2025-04-07 12:19:46.084 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.090 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:19:46.090 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.090 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:19:46.092 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:19:46.093 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.095 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.095 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:46.095 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.095 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:46.099 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:19:46.100 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.100 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:19:46.100 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.100 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:19:46.101 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:19:46.103 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.103 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.104 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.104 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.104 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.105 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:46.107 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.107 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.107 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:46.108 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.108 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.108 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.108 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.108 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:46.109 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 3 msec}
2025-04-07 12:19:46.112 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:46.113 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.112 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.115 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 5 msec}
2025-04-07 12:19:46.117 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:19:46.117 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:46.117 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.123 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-07 12:19:46.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.128 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.128 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.131 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.131 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.131 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.132 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.133 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.137 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:19:46.137 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.137 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.138 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.140 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:19:46.140 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.140 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:19:46.141 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.151 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 12 msec}
2025-04-07 12:19:46.151 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 12 msec}
2025-04-07 12:19:46.151 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:19:46.151 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.158 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.158 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.158 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.158 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.158 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.158 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:19:46.160 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.160 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.160 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:19:46.160 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.160 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:19:46.161 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.161 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.161 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.162 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.162 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.163 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.163 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.163 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-07 12:19:46.163 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:19:46.176 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.176 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.176 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.178 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.180 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:19:46.181 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.182 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:19:46.188 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.188 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.188 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.190 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.191 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.191 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.193 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:19:46.198 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.198 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.198 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.199 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.201 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.201 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.204 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:19:46.207 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.207 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:46.207 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:19:46.209 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:46.211 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:19:46.211 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:46.213 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:19:49.748 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:49.749 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:19:49.749 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:19:49.753 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:19:49.758 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:19:49.758 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:19:49.759 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:19:49.763 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-07 12:20:00.231 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.231 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:20:00.231 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.232 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.234 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.234 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.235 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.237 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:20:00.342 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.342 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NTk4NSwiZXhwIjoxNzQzOTk2NTg1LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.ePHiJEVkqnKXLeGEVb6kwUDwDpPOf52e-hbi61QuWpM
2025-04-07 12:20:00.342 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.344 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.345 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.346 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.346 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.348 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:20:00.607 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:20:00.608 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:20:00.608 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:20:00.608 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:20:00.609 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-07 12:20:00.627 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1ODV9.JJWw8s9Va8cEUvSjJs7oztDNIH6dgVWwy9OkDz_TwWo'
 {executed in 15 msec}
2025-04-07 12:20:00.628 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.630 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-07 12:20:00.661 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:20:00.663 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.663 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.663 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.663 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.664 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.664 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.664 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.664 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.665 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.666 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-07 12:20:00.667 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:20:00.667 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.667 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-07 12:20:00.667 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:20:00.682 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.682 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.682 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.695 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.700 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:20:00.700 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.707 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.708 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:20:00.708 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:20:00.708 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.708 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.708 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:20:00.708 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:20:00.713 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.713 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:20:00.714 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.714 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:20:00.714 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.714 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.714 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.715 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.724 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.726 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.726 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.726 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.726 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.727 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 15 msec}
2025-04-07 12:20:00.727 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 13 msec}
2025-04-07 12:20:00.728 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.728 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.728 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-07 12:20:00.728 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.729 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:20:00.729 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:20:00.729 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.729 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.730 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.730 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.732 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 2 msec}
2025-04-07 12:20:00.732 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-07 12:20:00.733 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-07 12:20:00.733 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 0 msec}
2025-04-07 12:20:00.733 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-07 12:20:00.764 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:20:00.764 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.764 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:20:00.765 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.765 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.765 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:20:00.765 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:20:00.766 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.766 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:20:00.766 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:20:00.766 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.766 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:20:00.768 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:20:00.768 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.768 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:20:00.770 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.771 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.774 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:20:00.775 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.775 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:20:00.777 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.777 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.778 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.779 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.779 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-07 12:20:00.779 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.779 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:20:00.779 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.780 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.780 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.780 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.780 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.780 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.780 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:20:00.781 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.781 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-07 12:20:00.781 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.781 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.781 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.794 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.794 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.794 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.794 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:20:00.794 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.794 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:20:00.794 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 12 msec}
2025-04-07 12:20:00.795 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 14 msec}
2025-04-07 12:20:00.795 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 14 msec}
2025-04-07 12:20:00.796 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-07 12:20:00.796 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.797 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.798 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.798 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.799 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.800 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.817 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 6 msec}
2025-04-07 12:20:00.818 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.823 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.823 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.828 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.833 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.833 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.833 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.833 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.834 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.834 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:20:00.834 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.834 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:20:00.841 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.841 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.842 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 8 msec}
2025-04-07 12:20:00.843 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.843 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.843 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.843 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.848 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 4 msec}
2025-04-07 12:20:00.859 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.859 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.859 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.862 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.863 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.863 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.863 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.863 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:20:00.863 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.863 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:20:00.864 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.864 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.864 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.865 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.866 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.866 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.866 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.866 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.867 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:20:00.877 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 10 msec}
2025-04-07 12:20:00.898 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.898 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.898 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.898 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.898 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.898 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:20:00.900 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.900 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.909 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:20:00.909 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-07 12:20:00.909 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.909 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.912 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:20:00.912 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-07 12:20:00.924 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.924 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.924 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.926 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.927 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.927 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.929 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:20:00.933 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.933 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.933 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.939 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.942 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:20:00.942 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.944 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:20:00.949 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.949 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjAwMCwiZXhwIjoxNzQzOTk2NjAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.5N428RJZTOya5gNNQx6uHi70e-33_EPUfvkvS837BKI
2025-04-07 12:20:00.949 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:20:00.951 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:20:00.958 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:20:00.959 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:20:00.961 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 1 msec}
2025-04-07 12:20:45.097 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-07 12:22:06.181 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:22:06.182 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:22:06.182 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:22:06.182 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:22:06.186 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-07 12:22:06.193 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk1ODV9.JJWw8s9Va8cEUvSjJs7oztDNIH6dgVWwy9OkDz_TwWo'
 {executed in 2 msec}
2025-04-07 12:22:06.195 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.206 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:22:06.259 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:22:06.259 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-07 12:22:06.259 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.260 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:22:06.262 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.262 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.262 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.262 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.264 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.264 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.264 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.264 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.265 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.266 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.269 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:22:06.270 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 4 msec}
2025-04-07 12:22:06.271 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 4 msec}
2025-04-07 12:22:06.271 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:22:06.275 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:22:06.348 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:22:06.348 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.348 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:22:06.360 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.367 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:06.367 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.367 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:06.367 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:22:06.368 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.368 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-07 12:22:06.364 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:22:06.377 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.377 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-07 12:22:06.367 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-07 12:22:06.379 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.379 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-07 12:22:06.418 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.422 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.516 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.520 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:22:06.520 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.520 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:22:06.531 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.532 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.557 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 23 msec}
2025-04-07 12:22:06.561 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.561 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 16 msec}
2025-04-07 12:22:06.562 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.565 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 145 msec}
2025-04-07 12:22:06.566 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.583 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 101 msec}
2025-04-07 12:22:06.583 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 66 msec}
2025-04-07 12:22:06.583 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.584 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.595 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 112 msec}
2025-04-07 12:22:06.595 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.596 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.599 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 34 msec}
2025-04-07 12:22:06.599 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-07'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-07'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 23 msec}
2025-04-07 12:22:06.613 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 38 msec}
2025-04-07 12:22:06.615 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 23 msec}
2025-04-07 12:22:06.615 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-07'
                   when 'w' then '2025-04-07'
                   when 'm' then date_sub('2025-04-07', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-07'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-07' and (
                    case
                        when 'd' = 'h' then '2025-01-07'
                        when 'd' != 'h' then '2025-04-07'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 19 msec}
2025-04-07 12:22:06.628 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 14 msec}
2025-04-07 12:22:06.680 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:22:06.680 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.680 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-07 12:22:06.680 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:22:06.680 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.680 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-07 12:22:06.681 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-07 12:22:06.682 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.682 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-07 12:22:06.682 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.682 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.683 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:22:06.684 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.684 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-07 12:22:06.693 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.694 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:22:06.695 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.695 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:22:06.694 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:22:06.695 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.695 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.695 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-07 12:22:06.696 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.697 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.697 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 14 msec}
2025-04-07 12:22:06.697 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:22:06.697 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 14 msec}
2025-04-07 12:22:06.697 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.697 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.698 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.698 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.698 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.698 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.698 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.698 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:22:06.698 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.699 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.715 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 12 msec}
2025-04-07 12:22:06.716 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 16 msec}
2025-04-07 12:22:06.720 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 10 msec}
2025-04-07 12:22:06.731 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 21 msec}
2025-04-07 12:22:06.733 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:06.733 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.733 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:06.781 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.815 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:22:06.817 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.817 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:22:06.816 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:22:06.897 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.897 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:22:06.846 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 31 msec}
2025-04-07 12:22:06.898 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.916 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.932 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.948 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 33 msec}
2025-04-07 12:22:06.949 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:22:06.949 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:06.949 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:22:06.950 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 24 msec}
2025-04-07 12:22:06.958 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-07 12:22:06.964 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.964 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:06.965 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:22:06.965 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:06.996 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 29 msec}
2025-04-07 12:22:06.996 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 30 msec}
2025-04-07 12:22:06.996 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.010 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 12 msec}
2025-04-07 12:22:07.016 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.016 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.016 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.032 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.033 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:22:07.033 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:22:07.033 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.033 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.033 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:22:07.033 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-07 12:22:07.047 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.047 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.049 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:22:07.050 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.092 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 42 msec}
2025-04-07 12:22:07.093 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.115 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 81 msec}
2025-04-07 12:22:07.115 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.127 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 29 msec}
2025-04-07 12:22:07.148 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 31 msec}
2025-04-07 12:22:07.232 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-07 12:22:07.232 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.232 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-07 12:22:07.237 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.237 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.237 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.237 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.239 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.242 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:22:07.243 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:22:07.244 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.243 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.247 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:22:07.250 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-07 12:22:07.259 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.259 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.259 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.262 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.266 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:22:07.266 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.271 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:22:07.287 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.287 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.287 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.289 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.296 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-07 12:22:07.297 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.303 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 3 msec}
2025-04-07 12:22:07.316 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.316 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.316 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.318 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.321 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:22:07.322 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.330 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 6 msec}
2025-04-07 12:22:07.339 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.339 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:22:07.339 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-07 12:22:07.342 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:22:07.346 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:22:07.346 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:22:07.351 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-07'
 {executed in 2 msec}
2025-04-07 12:23:07.045 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:23:07.046 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:23:07.046 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:23:07.048 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:23:07.051 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:23:07.052 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:23:07.053 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:23:07.055 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-07 12:23:07.062 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:23:07.062 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:23:07.062 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-07 12:23:07.064 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:23:07.066 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-07 12:23:07.067 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:23:07.068 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:23:07.070 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-07 12:23:09.750 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:23:09.750 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:23:09.751 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:23:09.752 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:23:09.754 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-07 12:23:09.754 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:23:09.755 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_NONE])
2025-04-07 12:23:09.757 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-07 12:23:09.757 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=0, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-07 12:23:18.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/user/id/kmtest2/exist
2025-04-07 12:23:18.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:23:18.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/user/id/kmtest2/exist
2025-04-07 12:23:18.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:23:18.132 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT IF(count(*) > 0, true, false)
        FROM tb_account
        WHERE id = 'kmtest2'
 {executed in 2 msec}
2025-04-07 12:23:46.574 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/brno/status
2025-04-07 12:23:46.576 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0Mzk5NjEyNiwiZXhwIjoxNzQzOTk2NzI2LCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.jsnTiB4mXyeKHrCtRtW8uUkpHhl9_30zsSjqhpjghS8
2025-04-07 12:23:46.576 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/brno/status
2025-04-07 12:23:46.579 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-07 12:23:46.584 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-07 12:23:46.585 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-07 12:23:46.656 INFO  [http-nio-11040-exec-9] [com.momo.common.util.ExternalApiUtils] - body: {"b_no":["5218702490"]}
2025-04-07 12:23:46.922 INFO  [http-nio-11040-exec-9] [com.momo.common.util.ExternalApiUtils] - res: {"request_cnt":1,"match_cnt":1,"status_code":"OK","data":[{"b_no":"5218702490","b_stt":"계속사업자","b_stt_cd":"01","tax_type":"부가가치세 일반과세자","tax_type_cd":"01","end_dt":"","utcc_yn":"N","tax_type_change_dt":"","invoice_apply_dt":"","rbf_tax_type":"해당없음","rbf_tax_type_cd":"99"}]}
2025-04-07 12:23:46.924 INFO  [http-nio-11040-exec-9] [com.momo.common.util.BusinessmanApiUtil] - result: {request_cnt=1, match_cnt=1, status_code=OK, data=[{b_no=5218702490, b_stt=계속사업자, b_stt_cd=01, tax_type=부가가치세 일반과세자, tax_type_cd=01, end_dt=, utcc_yn=N, tax_type_change_dt=, invoice_apply_dt=, rbf_tax_type=해당없음, rbf_tax_type_cd=99}]}
2025-04-07 12:23:48.041 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/signup
2025-04-07 12:23:48.041 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:23:48.041 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/signup
2025-04-07 12:23:48.041 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:23:48.185 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. INSERT INTO tb_account
            (id, pwd, name, email, tel, br_no, terms)
        VALUES ('kmtest2', '$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi', 'km222test', 'kmtest@ww.dd', '010-444-1242', '5218702490', '11')
 {executed in 2 msec}
2025-04-07 12:23:48.187 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:23:48.189 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=kmtest2, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2MjI4LCJleHAiOjE3NDM5OTY4MjgsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.Jnf1gIYQbOy4KsGQITpUzCAFY7vX4hAsYDPGUaEOftI, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk4Mjh9.wzzLetRhQHcKc8X9sX87MKxY4f5WrNMp8tFJUsOh6FQ, expireTime=3600000, revoked=false, expired=false)
2025-04-07 12:23:48.190 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:23:48.191 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. INSERT INTO tb_refresh_token
                    (user_id, refresh_token)
        VALUES      ('kmtest2','eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk4Mjh9.wzzLetRhQHcKc8X9sX87MKxY4f5WrNMp8tFJUsOh6FQ')
 {executed in 0 msec}
2025-04-07 12:23:48.215 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:23:48.216 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2MjI4LCJleHAiOjE3NDM5OTY4MjgsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.Jnf1gIYQbOy4KsGQITpUzCAFY7vX4hAsYDPGUaEOftI
2025-04-07 12:23:48.216 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:23:48.217 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:23:48.219 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:23:48.220 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:23:48.221 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:23:48.222 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop
2025-04-07 12:23:48.222 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2MjI4LCJleHAiOjE3NDM5OTY4MjgsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.Jnf1gIYQbOy4KsGQITpUzCAFY7vX4hAsYDPGUaEOftI
2025-04-07 12:23:48.222 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop
2025-04-07 12:23:48.223 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'kmtest2'
 {executed in 1 msec}
2025-04-07 12:23:48.223 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=km222test, nickname=null, corp_nm=null, tel=010-444-1242, id=kmtest2, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:23:48.223 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:23:48.228 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 4 msec}
2025-04-07 12:23:48.228 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:23:48.228 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2MjI4LCJleHAiOjE3NDM5OTY4MjgsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.Jnf1gIYQbOy4KsGQITpUzCAFY7vX4hAsYDPGUaEOftI
2025-04-07 12:23:48.229 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:23:48.229 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:23:48.230 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:23:48.230 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:23:48.231 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:23:48.231 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:23:48.231 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:23:48.232 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'kmtest2'
 {executed in 0 msec}
2025-04-07 12:23:48.233 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=km222test, nickname=null, corp_nm=null, tel=010-444-1242, id=kmtest2, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:23:48.244 ERROR [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT sh.shop_id, -- getShopTest
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   select corp_nm
                   from tb_account
                   where id = (
                                select staff_id
                                from tb_staff sf
                                where sf.role = 1 and
                                sf.shop_id = sh.shop_id
                            )
                ) as corp_nm,
                IFNULL((
                    select sf.approval_st
                    from tb_staff sf
                    where sf.staff_id='kmtest2' and
                            sf.shop_id = sh.shop_id
                ), -1) as approval_st
        from tb_shop sh
        where

            (
                select br_no
                from tb_account
                where id=(
                            select staff_id
                            from tb_staff sf
                            where sf.role=1 and
                            sf.shop_id=sh.shop_id
                        )
        )=(
            select br_no
            from tb_account
            where id='kmtest2'
        )
        1=1
        limit 20
 {FAILED after 7 msec}
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy93.getShop(Unknown Source)
	at com.momo.service.ShopService.getShop(ShopService.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.momo.service.ShopService$$SpringCGLIB$$0.getShop(<generated>)
	at com.momo.api.ShopController.getShop(ShopController.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-07 12:23:48.312 ERROR [http-nio-11040-exec-2] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
### The error may exist in file [/Users/chan/momo/phoneManagement/target/classes/mapper/ShopMapper.xml]
### The error may involve com.momo.mapper.ShopMapper.getShop-Inline
### The error occurred while setting parameters
### SQL: SELECT sh.shop_id, -- getShopTest                sh.shop_nm,                sh.shop_addr,                sh.provider,                (                    select corp_nm                    from tb_account                    where id = (                                 select staff_id                                 from tb_staff sf                                 where sf.role = 1 and                                 sf.shop_id = sh.shop_id                             )                 ) as corp_nm,                 IFNULL((                     select sf.approval_st                     from tb_staff sf                     where sf.staff_id=? and                             sf.shop_id = sh.shop_id                 ), -1) as approval_st         from tb_shop sh         where                       (                 select br_no                 from tb_account                 where id=(                             select staff_id                             from tb_staff sf                             where sf.role=1 and                             sf.shop_id=sh.shop_id                         )         )=(             select br_no             from tb_account             where id=?         )         1=1         limit 20
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy93.getShop(Unknown Source)
	at com.momo.service.ShopService.getShop(ShopService.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.momo.service.ShopService$$SpringCGLIB$$0.getShop(<generated>)
	at com.momo.api.ShopController.getShop(ShopController.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-07 12:29:10.481 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:29:10.482 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:29:10.482 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:29:10.482 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:29:10.487 INFO  [http-nio-11040-exec-8] [com.momo.api.AuthController] - refresh
2025-04-07 12:29:10.509 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk4Mjh9.wzzLetRhQHcKc8X9sX87MKxY4f5WrNMp8tFJUsOh6FQ'
 {executed in 3 msec}
2025-04-07 12:29:10.513 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:29:10.515 INFO  [http-nio-11040-exec-8] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=kmtest2, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2NTUwLCJleHAiOjE3NDM5OTcxNTAsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.lfE6JfrphL2s1Uu9MG8cPjmwwQZsjTld8OHbgbTm8Dw, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:29:10.531 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop
2025-04-07 12:29:10.531 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2NTUwLCJleHAiOjE3NDM5OTcxNTAsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.lfE6JfrphL2s1Uu9MG8cPjmwwQZsjTld8OHbgbTm8Dw
2025-04-07 12:29:10.532 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop
2025-04-07 12:29:10.533 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:29:10.533 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2NTUwLCJleHAiOjE3NDM5OTcxNTAsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.lfE6JfrphL2s1Uu9MG8cPjmwwQZsjTld8OHbgbTm8Dw
2025-04-07 12:29:10.533 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:29:10.533 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:29:10.534 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:29:10.536 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 0 msec}
2025-04-07 12:29:10.536 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:29:10.536 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:29:10.536 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:29:10.537 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:29:10.538 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:29:10.543 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'kmtest2'
 {executed in 3 msec}
2025-04-07 12:29:10.543 ERROR [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT sh.shop_id, -- getShopTest
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   select corp_nm
                   from tb_account
                   where id = (
                                select staff_id
                                from tb_staff sf
                                where sf.role = 1 and
                                sf.shop_id = sh.shop_id
                            )
                ) as corp_nm,
                IFNULL((
                    select sf.approval_st
                    from tb_staff sf
                    where sf.staff_id='kmtest2' and
                            sf.shop_id = sh.shop_id
                ), -1) as approval_st
        from tb_shop sh
        where

            (
                select br_no
                from tb_account
                where id=(
                            select staff_id
                            from tb_staff sf
                            where sf.role=1 and
                            sf.shop_id=sh.shop_id
                        )
        )=(
            select br_no
            from tb_account
            where id='kmtest2'
        )
        1=1
        limit 20
 {FAILED after 3 msec}
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy93.getShop(Unknown Source)
	at com.momo.service.ShopService.getShop(ShopService.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.momo.service.ShopService$$SpringCGLIB$$0.getShop(<generated>)
	at com.momo.api.ShopController.getShop(ShopController.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-07 12:29:10.544 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=km222test, nickname=null, corp_nm=null, tel=010-444-1242, id=kmtest2, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:29:10.545 ERROR [http-nio-11040-exec-7] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
### The error may exist in file [/Users/chan/momo/phoneManagement/target/classes/mapper/ShopMapper.xml]
### The error may involve com.momo.mapper.ShopMapper.getShop-Inline
### The error occurred while setting parameters
### SQL: SELECT sh.shop_id, -- getShopTest                sh.shop_nm,                sh.shop_addr,                sh.provider,                (                    select corp_nm                    from tb_account                    where id = (                                 select staff_id                                 from tb_staff sf                                 where sf.role = 1 and                                 sf.shop_id = sh.shop_id                             )                 ) as corp_nm,                 IFNULL((                     select sf.approval_st                     from tb_staff sf                     where sf.staff_id=? and                             sf.shop_id = sh.shop_id                 ), -1) as approval_st         from tb_shop sh         where                       (                 select br_no                 from tb_account                 where id=(                             select staff_id                             from tb_staff sf                             where sf.role=1 and                             sf.shop_id=sh.shop_id                         )         )=(             select br_no             from tb_account             where id=?         )         1=1         limit 20
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy93.getShop(Unknown Source)
	at com.momo.service.ShopService.getShop(ShopService.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.momo.service.ShopService$$SpringCGLIB$$0.getShop(<generated>)
	at com.momo.api.ShopController.getShop(ShopController.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-07 12:29:14.245 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:29:14.245 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:29:14.245 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-07 12:29:14.245 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:29:14.245 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-07 12:29:14.275 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM5OTk4Mjh9.wzzLetRhQHcKc8X9sX87MKxY4f5WrNMp8tFJUsOh6FQ'
 {executed in 13 msec}
2025-04-07 12:29:14.276 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:29:14.277 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=kmtest2, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2NTU0LCJleHAiOjE3NDM5OTcxNTQsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.tLWGkxZ3TZS5gVQR7RVZfFkWveLvNQpeMrU2lE228aw, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-07 12:29:14.291 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:29:14.291 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop
2025-04-07 12:29:14.291 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2NTU0LCJleHAiOjE3NDM5OTcxNTQsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.tLWGkxZ3TZS5gVQR7RVZfFkWveLvNQpeMrU2lE228aw
2025-04-07 12:29:14.291 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbXRlc3QyIiwiaWF0IjoxNzQzOTk2NTU0LCJleHAiOjE3NDM5OTcxNTQsImF1dGhvcml0aWVzIjoiUk9MRV9OT05FIn0.tLWGkxZ3TZS5gVQR7RVZfFkWveLvNQpeMrU2lE228aw
2025-04-07 12:29:14.291 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:29:14.291 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop
2025-04-07 12:29:14.293 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:29:14.293 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : kmtest2
2025-04-07 12:29:14.295 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:29:14.295 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='kmtest2'
 {executed in 1 msec}
2025-04-07 12:29:14.295 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:29:14.295 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'kmtest2' 인증 정보를 저장했습니다
2025-04-07 12:29:14.296 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:29:14.296 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=kmtest2, password=$2a$10$9VnEBDoh5bFIVP6vtZJRMuXxvgD04PdxhdicIZJUn2NhSK9n3BbOi, authorities=[ROLE_NONE])
2025-04-07 12:29:14.299 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'kmtest2'
 {executed in 3 msec}
2025-04-07 12:29:14.299 ERROR [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT sh.shop_id, -- getShopTest
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   select corp_nm
                   from tb_account
                   where id = (
                                select staff_id
                                from tb_staff sf
                                where sf.role = 1 and
                                sf.shop_id = sh.shop_id
                            )
                ) as corp_nm,
                IFNULL((
                    select sf.approval_st
                    from tb_staff sf
                    where sf.staff_id='kmtest2' and
                            sf.shop_id = sh.shop_id
                ), -1) as approval_st
        from tb_shop sh
        where

            (
                select br_no
                from tb_account
                where id=(
                            select staff_id
                            from tb_staff sf
                            where sf.role=1 and
                            sf.shop_id=sh.shop_id
                        )
        )=(
            select br_no
            from tb_account
            where id='kmtest2'
        )
        1=1
        limit 20
 {FAILED after 3 msec}
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy93.getShop(Unknown Source)
	at com.momo.service.ShopService.getShop(ShopService.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.momo.service.ShopService$$SpringCGLIB$$0.getShop(<generated>)
	at com.momo.api.ShopController.getShop(ShopController.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-07 12:29:14.299 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=km222test, nickname=null, corp_nm=null, tel=010-444-1242, id=kmtest2, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:29:14.300 ERROR [http-nio-11040-exec-9] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
### The error may exist in file [/Users/chan/momo/phoneManagement/target/classes/mapper/ShopMapper.xml]
### The error may involve com.momo.mapper.ShopMapper.getShop-Inline
### The error occurred while setting parameters
### SQL: SELECT sh.shop_id, -- getShopTest                sh.shop_nm,                sh.shop_addr,                sh.provider,                (                    select corp_nm                    from tb_account                    where id = (                                 select staff_id                                 from tb_staff sf                                 where sf.role = 1 and                                 sf.shop_id = sh.shop_id                             )                 ) as corp_nm,                 IFNULL((                     select sf.approval_st                     from tb_staff sf                     where sf.staff_id=? and                             sf.shop_id = sh.shop_id                 ), -1) as approval_st         from tb_shop sh         where                       (                 select br_no                 from tb_account                 where id=(                             select staff_id                             from tb_staff sf                             where sf.role=1 and                             sf.shop_id=sh.shop_id                         )         )=(             select br_no             from tb_account             where id=?         )         1=1         limit 20
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1
        limit 20' at line 38
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy81.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy93.getShop(Unknown Source)
	at com.momo.service.ShopService.getShop(ShopService.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.momo.service.ShopService$$SpringCGLIB$$0.getShop(<generated>)
	at com.momo.api.ShopController.getShop(ShopController.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-07 12:32:44.442 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 12:32:44.444 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5bc2cd45]]
2025-04-07 12:32:44.444 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 12:32:44.444 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:32:44.455 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 12:32:44.455 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 12:32:44.455 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:32:44.455 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-07 12:32:47.109 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-07 12:32:47.202 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 87481 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-07 12:32:47.204 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-07 12:32:47.762 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-07 12:32:47.789 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-07 12:32:50.442 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-07 12:32:50.457 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-07 12:32:50.459 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-07 12:32:50.459 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-07 12:32:50.520 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-07 12:32:50.520 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 2730 ms
2025-04-07 12:32:51.889 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-07 12:32:51.898 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-07 12:32:51.899 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-07 12:32:51.899 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-07 12:32:51.900 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-07 12:32:51.900 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-07 12:32:51.900 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-07 12:32:51.900 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@264e747d
2025-04-07 12:32:51.944 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-07 12:32:52.087 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-07 12:32:52.409 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3f85ec81, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ac9e1a, org.springframework.security.web.context.SecurityContextHolderFilter@3a15d6ea, org.springframework.security.web.header.HeaderWriterFilter@7f6573b8, org.springframework.web.filter.CorsFilter@59d97f83, org.springframework.security.web.authentication.logout.LogoutFilter@7d877f0f, com.momo.filter.JwtAuthorizationFilter@93176a3, org.springframework.security.web.session.ConcurrentSessionFilter@4e89e92a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3489470a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21c52ad, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@b5dcae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@194062e0, org.springframework.security.web.session.SessionManagementFilter@6003399e, org.springframework.security.web.access.ExceptionTranslationFilter@5331a9d3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50d7c0fc]
2025-04-07 12:32:52.536 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-07 12:32:52.609 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-07 12:32:52.627 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-07 12:32:52.639 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-07 12:32:52.640 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-07 12:32:52.640 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@37679721]]
2025-04-07 12:32:52.641 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-07 12:32:52.641 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-07 12:32:52.641 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-07 12:32:52.648 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 6.638 seconds (process running for 7.294)
2025-04-07 12:32:59.262 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-07 12:32:59.262 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-07 12:32:59.263 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-07 12:32:59.274 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/user/id/emsys123/exist
2025-04-07 12:32:59.275 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:32:59.275 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/user/id/emsys123/exist
2025-04-07 12:32:59.275 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:32:59.440 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT IF(count(*) > 0, true, false)
        FROM tb_account
        WHERE id = 'emsys123'
 {executed in 7 msec}
2025-04-07 12:33:17.226 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/brno/status
2025-04-07 12:33:17.227 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:33:17.227 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/brno/status
2025-04-07 12:33:17.227 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:33:17.312 INFO  [http-nio-11040-exec-2] [com.momo.common.util.ExternalApiUtils] - body: {"b_no":["5218702490"]}
2025-04-07 12:33:17.636 INFO  [http-nio-11040-exec-2] [com.momo.common.util.ExternalApiUtils] - res: {"request_cnt":1,"match_cnt":1,"status_code":"OK","data":[{"b_no":"5218702490","b_stt":"계속사업자","b_stt_cd":"01","tax_type":"부가가치세 일반과세자","tax_type_cd":"01","end_dt":"","utcc_yn":"N","tax_type_change_dt":"","invoice_apply_dt":"","rbf_tax_type":"해당없음","rbf_tax_type_cd":"99"}]}
2025-04-07 12:33:17.651 INFO  [http-nio-11040-exec-2] [com.momo.common.util.BusinessmanApiUtil] - result: {request_cnt=1, match_cnt=1, status_code=OK, data=[{b_no=5218702490, b_stt=계속사업자, b_stt_cd=01, tax_type=부가가치세 일반과세자, tax_type_cd=01, end_dt=, utcc_yn=N, tax_type_change_dt=, invoice_apply_dt=, rbf_tax_type=해당없음, rbf_tax_type_cd=99}]}
2025-04-07 12:33:20.269 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/signup
2025-04-07 12:33:20.270 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-07 12:33:20.270 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/signup
2025-04-07 12:33:20.270 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-07 12:33:20.446 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO tb_account
            (id, pwd, name, email, tel, br_no, terms)
        VALUES ('emsys123', '$2a$10$AHlF3Y16/Um0GMK8m35Yn.GOgxCJdny5CfG71uFzK1ubEz/mfiHlK', 'emsys111', 'km1em@dks.sd', '010-123-4123', '5218702490', '11')
 {executed in 2 msec}
2025-04-07 12:33:20.449 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='emsys123'
 {executed in 2 msec}
2025-04-07 12:33:20.466 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=emsys123, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbXN5czEyMyIsImlhdCI6MTc0Mzk5NjgwMCwiZXhwIjoxNzQzOTk3NDAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.PQHw5782xPZAA-98hdCTwUZqW1xIILQ7MQXeg_aM3bg, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwMDA0MDB9.4LFoMutQGnJfP9ocky8ZzNeVfopIrxit0nuepJnBXSw, expireTime=3600000, revoked=false, expired=false)
2025-04-07 12:33:20.469 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='emsys123'
 {executed in 3 msec}
2025-04-07 12:33:20.471 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO tb_refresh_token
                    (user_id, refresh_token)
        VALUES      ('emsys123','eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwMDA0MDB9.4LFoMutQGnJfP9ocky8ZzNeVfopIrxit0nuepJnBXSw')
 {executed in 1 msec}
2025-04-07 12:33:20.510 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:33:20.510 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbXN5czEyMyIsImlhdCI6MTc0Mzk5NjgwMCwiZXhwIjoxNzQzOTk3NDAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.PQHw5782xPZAA-98hdCTwUZqW1xIILQ7MQXeg_aM3bg
2025-04-07 12:33:20.510 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:33:20.522 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop
2025-04-07 12:33:20.522 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbXN5czEyMyIsImlhdCI6MTc0Mzk5NjgwMCwiZXhwIjoxNzQzOTk3NDAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.PQHw5782xPZAA-98hdCTwUZqW1xIILQ7MQXeg_aM3bg
2025-04-07 12:33:20.522 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop
2025-04-07 12:33:20.524 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : emsys123
2025-04-07 12:33:20.524 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : emsys123
2025-04-07 12:33:20.527 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='emsys123'
 {executed in 2 msec}
2025-04-07 12:33:20.530 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='emsys123'
 {executed in 2 msec}
2025-04-07 12:33:20.531 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'emsys123' 인증 정보를 저장했습니다
2025-04-07 12:33:20.531 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'emsys123' 인증 정보를 저장했습니다
2025-04-07 12:33:20.532 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=emsys123, password=$2a$10$AHlF3Y16/Um0GMK8m35Yn.GOgxCJdny5CfG71uFzK1ubEz/mfiHlK, authorities=[ROLE_NONE])
2025-04-07 12:33:20.532 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=emsys123, password=$2a$10$AHlF3Y16/Um0GMK8m35Yn.GOgxCJdny5CfG71uFzK1ubEz/mfiHlK, authorities=[ROLE_NONE])
2025-04-07 12:33:20.536 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'emsys123'
 {executed in 3 msec}
2025-04-07 12:33:20.537 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=emsys111, nickname=null, corp_nm=null, tel=010-123-4123, id=emsys123, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:33:20.545 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-07 12:33:20.545 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbXN5czEyMyIsImlhdCI6MTc0Mzk5NjgwMCwiZXhwIjoxNzQzOTk3NDAwLCJhdXRob3JpdGllcyI6IlJPTEVfTk9ORSJ9.PQHw5782xPZAA-98hdCTwUZqW1xIILQ7MQXeg_aM3bg
2025-04-07 12:33:20.545 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-07 12:33:20.547 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : emsys123
2025-04-07 12:33:20.549 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='emsys123'
 {executed in 2 msec}
2025-04-07 12:33:20.549 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'emsys123' 인증 정보를 저장했습니다
2025-04-07 12:33:20.550 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=emsys123, password=$2a$10$AHlF3Y16/Um0GMK8m35Yn.GOgxCJdny5CfG71uFzK1ubEz/mfiHlK, authorities=[ROLE_NONE])
2025-04-07 12:33:20.551 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'emsys123'
 {executed in 1 msec}
2025-04-07 12:33:20.552 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=null, approval_st=-1, shop_addr=null, br_no=5218702490, provider=null, name=emsys111, nickname=null, corp_nm=null, tel=010-123-4123, id=emsys123, pfp=null, curr_shop_id=0, shop_nm=null}
2025-04-07 12:33:20.557 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT sh.shop_id, -- getShopTest
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   select corp_nm
                   from tb_account
                   where id = (
                                select staff_id
                                from tb_staff sf
                                where sf.role = 1 and
                                sf.shop_id = sh.shop_id
                            )
                ) as corp_nm,
                IFNULL((
                    select sf.approval_st
                    from tb_staff sf
                    where sf.staff_id='emsys123' and
                            sf.shop_id = sh.shop_id
                ), -1) as approval_st
        from tb_shop sh
        where

            (
                select br_no
                from tb_account
                where id=(
                            select staff_id
                            from tb_staff sf
                            where sf.role=1 and
                            sf.shop_id=sh.shop_id
                        )
        )=(
            select br_no
            from tb_account
            where id='emsys123'
        ) and
        1=1
        limit 20
 {executed in 4 msec}
2025-04-07 12:33:52.627 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-07 12:35:37.051 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-07 12:35:37.051 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@37679721]]
2025-04-07 12:35:37.051 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-07 12:35:37.052 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:35:37.059 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-07 12:35:37.059 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-07 12:35:37.059 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-07 12:35:37.059 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
