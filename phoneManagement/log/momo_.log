2025-04-01 11:30:39.982 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-01 11:30:40.002 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 77473 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-01 11:30:40.002 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-01 11:30:40.124 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-01 11:30:40.124 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-01 11:30:40.967 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-01 11:30:40.974 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-01 11:30:40.975 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-01 11:30:40.975 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-01 11:30:41.000 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-01 11:30:41.000 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 875 ms
2025-04-01 11:30:41.514 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-01 11:30:41.522 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-01 11:30:41.522 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-01 11:30:41.522 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-01 11:30:41.522 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-01 11:30:41.523 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-01 11:30:41.523 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-01 11:30:41.523 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@5e7ab91b
2025-04-01 11:30:41.552 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-01 11:30:41.669 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-01 11:30:41.960 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28f29701, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@511c9581, org.springframework.security.web.context.SecurityContextHolderFilter@5e31e1b, org.springframework.security.web.header.HeaderWriterFilter@4c7b566e, org.springframework.web.filter.CorsFilter@7fcf02d9, org.springframework.security.web.authentication.logout.LogoutFilter@1d67204e, com.momo.filter.JwtAuthorizationFilter@3548a5b0, org.springframework.security.web.session.ConcurrentSessionFilter@17477aad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f1c383a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@690ee89a, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@754fdb43, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9be7687, org.springframework.security.web.session.SessionManagementFilter@43b2fbc6, org.springframework.security.web.access.ExceptionTranslationFilter@5d31408c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@132d55cb]
2025-04-01 11:30:42.077 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-01 11:30:42.155 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-01 11:30:42.175 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-01 11:30:42.189 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-01 11:30:42.191 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-01 11:30:42.192 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@33be0b19]]
2025-04-01 11:30:42.192 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-01 11:30:42.192 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-01 11:30:42.192 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-01 11:30:42.199 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 2.589 seconds (process running for 3.191)
2025-04-01 11:30:58.919 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-01 11:30:58.920 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-01 11:30:58.922 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 2 ms
2025-04-01 11:30:58.937 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:30:58.938 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:30:58.938 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:30:58.938 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:30:58.953 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 11:30:59.178 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 25 msec}
2025-04-01 11:30:59.187 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: null
2025-04-01 11:30:59.927 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:30:59.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:30:59.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:30:59.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:30:59.994 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.138 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 13 msec}
2025-04-01 11:31:00.161 INFO  [http-nio-11040-exec-2] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgyNjB9.tjd7lsk7QzljuzvaKnXrwNfMhz8G_YTOtjJYg1m524U, expireTime=3600000, revoked=false, expired=false)
2025-04-01 11:31:00.165 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.167 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgyNjB9.tjd7lsk7QzljuzvaKnXrwNfMhz8G_YTOtjJYg1m524U'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.170 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.194 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:31:00.194 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.194 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:31:00.216 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.221 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.226 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.229 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.279 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:31:00.279 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.279 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 11:31:00.280 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.279 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.280 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.280 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.280 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 50 msec}
2025-04-01 11:31:00.280 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:31:00.280 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 11:31:00.282 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:31:00.282 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.284 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.285 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.291 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:31:00.291 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.291 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:31:00.291 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:31:00.294 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 11:31:00.294 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.294 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 11:31:00.295 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.296 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.296 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.297 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.297 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.297 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.299 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 11:31:00.300 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:31:00.300 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:31:00.302 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 3 msec}
2025-04-01 11:31:00.302 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.304 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.306 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.306 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.306 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.308 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.309 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 5 msec}
2025-04-01 11:31:00.309 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:31:00.310 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.312 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.313 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.314 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:31:00.332 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.332 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.332 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.334 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 11:31:00.334 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.334 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 11:31:00.334 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.336 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:31:00.337 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.339 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.339 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.339 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.343 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:31:00.346 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:31:00.347 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.355 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.356 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.357 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.358 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.361 INFO  [http-nio-11040-exec-10] [com.momo.service.CommonService] - Session('curr_shop_id') is not found. Try to find on Database...
2025-04-01 11:31:00.361 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.362 INFO  [http-nio-11040-exec-1] [com.momo.service.CommonService] - Session('curr_shop_id') is not found. Try to find on Database...
2025-04-01 11:31:00.362 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.366 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 8 msec}
2025-04-01 11:31:00.367 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:31:00.368 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:31:00.371 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 11:31:00.371 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.371 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 11:31:00.376 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.381 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.382 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.382 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.382 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.363 ERROR [http-nio-11040-exec-2] [com.momo.handler.GlobalExceptionHandler] - NullPointerException: {}
java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "jakarta.servlet.http.HttpSession.getAttribute(String)" is null
	at com.momo.api.TodoController.getTodoForCalendar(TodoController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-01 11:31:00.385 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.386 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.390 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 11:31:00.390 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.390 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 11:31:00.393 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.396 WARN  [http-nio-11040-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "jakarta.servlet.http.HttpSession.getAttribute(String)" is null]
2025-04-01 11:31:00.400 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 11 msec}
2025-04-01 11:31:00.400 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 11:31:00.408 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 21 msec}
2025-04-01 11:31:00.409 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.410 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.414 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 30 msec}
2025-04-01 11:31:00.415 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.418 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 11:31:00.418 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.418 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 11:31:00.418 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:31:00.421 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.421 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:31:00.421 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.421 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:31:00.422 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 11:31:00.424 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:00.425 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:31:00.427 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.428 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:31:00.429 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.430 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.431 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.432 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:31:00.432 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 10 msec}
2025-04-01 11:31:00.433 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.432 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.434 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:31:00.434 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:31:00.434 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.434 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:31:00.436 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.440 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.442 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.444 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.444 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.445 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.446 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:00.447 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.447 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.447 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.448 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.448 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.448 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.448 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.450 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.450 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.451 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.453 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 4 msec}
2025-04-01 11:31:00.455 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.455 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:00.457 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 10 msec}
2025-04-01 11:31:00.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.458 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.458 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 13 msec}
2025-04-01 11:31:00.459 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.460 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 11:31:00.460 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.460 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 11:31:00.463 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.464 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 11:31:00.467 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.471 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.472 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 11 msec}
2025-04-01 11:31:00.472 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.472 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.472 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.472 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.472 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.472 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.474 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:31:00.475 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.475 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:31:00.474 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 19 msec}
2025-04-01 11:31:00.476 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.476 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.478 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.480 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:31:00.480 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.480 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:31:00.480 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.480 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.480 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:00.480 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.481 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.483 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.483 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.483 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:31:00.484 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 10 msec}
2025-04-01 11:31:00.485 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.486 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.487 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.488 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.491 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.491 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.491 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.493 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-01 11:31:00.494 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.495 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 6 msec}
2025-04-01 11:31:00.495 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:31:00.495 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.495 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:31:00.497 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.498 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.501 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.501 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:00.503 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 16 msec}
2025-04-01 11:31:00.514 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.514 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.514 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.516 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 20 msec}
2025-04-01 11:31:00.518 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.522 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:00.521 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 16 msec}
2025-04-01 11:31:00.553 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 25 msec}
2025-04-01 11:31:00.538 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.563 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.577 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.578 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.586 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.566 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.598 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 88 msec}
2025-04-01 11:31:00.604 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 14 msec}
2025-04-01 11:31:00.606 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 12 msec}
2025-04-01 11:31:00.615 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.633 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.633 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.633 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.633 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.633 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.633 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.656 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.657 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.658 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.658 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.658 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.661 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.661 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 43 msec}
2025-04-01 11:31:00.664 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 54 msec}
2025-04-01 11:31:00.666 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.670 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 11:31:00.671 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-01 11:31:00.670 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-01 11:31:00.677 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.677 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.677 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.683 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 11:31:00.688 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 8 msec}
2025-04-01 11:31:00.695 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.695 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.695 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.700 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.703 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.703 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.703 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.705 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.711 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.712 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.712 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.712 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.713 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.715 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.715 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.715 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.715 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.715 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.716 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 11:31:00.716 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.718 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.719 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.721 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:31:00.726 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.738 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.738 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.738 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.739 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.744 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.745 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 24 msec}
2025-04-01 11:31:00.754 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 11:31:00.760 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.764 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 11:31:00.769 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.769 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.769 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:31:00.770 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.771 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.771 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.771 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.772 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.772 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.772 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.773 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:31:00.774 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.774 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.776 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:31:00.776 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.779 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.783 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.801 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.806 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 20 msec}
2025-04-01 11:31:00.807 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 11:31:00.815 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.815 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.815 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.817 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.818 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.819 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.821 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:00.825 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.825 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.825 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.827 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.828 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.830 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.832 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:00.836 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.836 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.836 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.838 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.839 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.842 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.844 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:00.849 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.849 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.849 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.851 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.853 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:00.855 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.857 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 11:31:00.861 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.861 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.861 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.862 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.864 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.865 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.867 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:00.871 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.871 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.871 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.873 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.874 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.876 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.877 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:00.881 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.881 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.882 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.883 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.884 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.885 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.887 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:00.891 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.891 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:00.891 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:31:00.892 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:00.894 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:00.895 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:00.896 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:31:03.965 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:03.965 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:03.965 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:03.969 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:03.971 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:03.973 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:03.974 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:03.975 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:31:05.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:05.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:05.458 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:05.460 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:05.463 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:05.465 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:05.466 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:05.468 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:31:05.474 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:05.474 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:05.474 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:31:05.476 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:05.479 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:31:05.481 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:05.482 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:05.485 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 11:31:06.291 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:31:06.291 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:31:06.291 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:31:06.294 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:31:06.296 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 11:31:06.298 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:31:06.299 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:31:06.303 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 11:31:06.304 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:31:42.175 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-01 11:32:43.807 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:32:43.807 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:32:43.807 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:32:43.807 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:32:43.825 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:32:43.961 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:43.964 INFO  [http-nio-11040-exec-4] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDc2MywiZXhwIjoxNzQzNDc1MzYzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.aFnOpOLzb1Fgx-kls_By0Ko2W20AI05VvPr1Q3uv6eE, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgzNjN9.Pxepe8QR4ozw_1aqy8EHK6BDeu5TnI94A4e4oWdnasM, expireTime=3600000, revoked=false, expired=false)
2025-04-01 11:32:43.965 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:43.966 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgzNjN9.Pxepe8QR4ozw_1aqy8EHK6BDeu5TnI94A4e4oWdnasM'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:43.968 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 11:32:43.990 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 11:32:43.990 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:43.990 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 11:32:43.993 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:43.995 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:32:43.998 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:43.998 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.000 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-01 11:32:44.060 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:32:44.060 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.060 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:32:44.061 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.075 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-01 11:32:44.076 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.077 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.078 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:32:44.127 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:32:44.127 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.127 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:32:44.128 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.130 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.131 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.132 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.134 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:32:44.226 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:32:44.226 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.226 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:32:44.227 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.229 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.231 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.231 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.232 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.233 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:32:44.307 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:32:44.307 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.307 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:32:44.308 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.309 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.310 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.311 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.312 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:32:44.415 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:32:44.415 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.415 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:32:44.416 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.417 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.418 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.419 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.420 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:32:44.475 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 11:32:44.475 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.475 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 11:32:44.476 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.478 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.479 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.496 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 13 msec}
2025-04-01 11:32:44.537 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:32:44.538 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.538 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:32:44.539 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.540 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.541 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.543 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 11:32:44.598 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 11:32:44.598 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.598 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 11:32:44.599 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.600 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.601 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.602 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 11:32:44.659 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:32:44.659 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.659 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:32:44.660 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.661 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.662 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.664 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 11:32:44.718 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:44.718 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.718 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:44.719 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.720 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.721 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.722 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 11:32:44.779 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:44.779 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.779 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:44.780 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.782 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:32:44.783 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.785 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:32:44.840 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 11:32:44.840 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.840 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 11:32:44.841 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.843 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 11:32:44.843 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.844 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:32:44.844 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 0 msec}
2025-04-01 11:32:44.901 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 11:32:44.901 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.901 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 11:32:44.901 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.903 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 11:32:44.903 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.962 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:32:44.962 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:44.962 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:32:44.963 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:44.964 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:44.965 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:44.970 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 3 msec}
2025-04-01 11:32:45.020 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:32:45.020 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.020 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:32:45.021 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.022 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.023 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.026 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 11:32:45.080 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:32:45.080 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.080 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:32:45.080 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.082 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.083 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.085 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-01 11:32:45.172 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:32:45.172 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.172 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:32:45.173 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.175 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.176 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.218 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:32:45.218 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.218 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:32:45.219 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.221 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.223 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.226 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 11:32:45.281 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.281 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.281 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.283 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.286 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.290 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.292 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:32:45.355 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.355 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.355 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.356 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.358 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.359 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.361 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:32:45.459 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:32:45.459 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.459 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:32:45.460 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.462 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.463 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.502 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:32:45.502 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.502 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:32:45.503 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.505 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.507 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.509 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 11:32:45.578 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.578 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.578 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.580 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.583 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:32:45.585 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.588 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:32:45.657 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.657 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.657 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:32:45.659 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.660 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.662 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:32:45.664 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 11:32:45.754 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:32:45.754 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDY2MCwiZXhwIjoxNzQzNDc1MjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.2MCPCOz85aLmsksHDj5e6Xclrx3hU6cAGOYUZBefxJ4
2025-04-01 11:32:45.754 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:32:45.755 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:32:45.756 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:32:45.758 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:33:06.032 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 11:33:06.032 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:33:06.033 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 11:33:06.033 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:33:06.035 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - refresh
2025-04-01 11:33:06.082 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgyNjB9.tjd7lsk7QzljuzvaKnXrwNfMhz8G_YTOtjJYg1m524U'
 {executed in 21 msec}
2025-04-01 11:33:06.102 WARN  [http-nio-11040-exec-3] [o.s.w.s.m.s.DefaultHandlerExceptionResolver] - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-04-01 11:33:07.083 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:33:07.084 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:33:07.084 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:33:07.084 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:33:07.084 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:33:07.203 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 116 msec}
2025-04-01 11:33:07.204 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:33:10.166 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:33:10.166 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:33:10.167 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:33:10.167 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:33:10.173 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:33:10.310 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:10.312 INFO  [http-nio-11040-exec-10] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDc5MCwiZXhwIjoxNzQzNDc1MzkwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.sY7cMJ-2yy_yUzJ35IS0TU4Y_MvajzHvCnGrhfUJWsI, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgzOTB9.x0CjRyRN2dF9xs2bUnbT--kmLy8iMsagXlPE8QyPYXY, expireTime=3600000, revoked=false, expired=false)
2025-04-01 11:33:10.314 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:10.315 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0NzgzOTB9.x0CjRyRN2dF9xs2bUnbT--kmLy8iMsagXlPE8QyPYXY'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:10.316 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 11:33:42.199 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:33:42.200 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:33:42.200 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:33:42.200 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:33:42.200 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:33:42.216 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 14 msec}
2025-04-01 11:33:42.218 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:33:43.523 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:33:43.523 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:33:43.523 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:33:43.523 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:33:43.528 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:43.665 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 11:33:43.666 INFO  [http-nio-11040-exec-8] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDgyMywiZXhwIjoxNzQzNDc1NDIzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.TPomSQpo4mYCnNmIiF-COvYOS43WmdXmrBLGp1O--kI, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0Nzg0MjN9.PNnOVsP7TP8X4K-cH_Ghf-5rKa34-Tc32bmaa2QFGe8, expireTime=3600000, revoked=false, expired=false)
2025-04-01 11:33:43.668 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:43.669 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0Nzg0MjN9.PNnOVsP7TP8X4K-cH_Ghf-5rKa34-Tc32bmaa2QFGe8'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:43.671 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:43.690 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:33:43.690 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NDgyMywiZXhwIjoxNzQzNDc1NDIzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.TPomSQpo4mYCnNmIiF-COvYOS43WmdXmrBLGp1O--kI
2025-04-01 11:33:43.690 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:33:43.692 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:33:43.694 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:43.695 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:33:43.696 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:33:43.698 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 11:33:43.699 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:35:16.989 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:35:16.991 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:35:16.991 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:35:16.991 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:35:16.997 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:35:17.135 ERROR [http-nio-11040-exec-2] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@5aebfae4
2025-04-01 11:35:17.137 WARN  [http-nio-11040-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 11:35:37.679 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:35:37.680 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:35:37.680 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:35:37.681 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:35:37.688 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:35:37.820 ERROR [http-nio-11040-exec-1] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@46739abd
2025-04-01 11:35:37.821 WARN  [http-nio-11040-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 11:36:32.657 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-01 11:36:32.658 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@33be0b19]]
2025-04-01 11:36:32.658 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-01 11:36:32.658 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 11:36:32.665 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-01 11:36:32.666 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-01 11:36:32.666 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 11:36:32.666 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-01 11:36:35.537 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-01 11:36:35.566 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 78559 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-01 11:36:35.567 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-01 11:36:35.730 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-01 11:36:35.731 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-01 11:36:36.758 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-01 11:36:36.763 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-01 11:36:36.764 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-01 11:36:36.764 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-01 11:36:36.787 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-01 11:36:36.788 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1057 ms
2025-04-01 11:36:37.436 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-01 11:36:37.443 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-01 11:36:37.443 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-01 11:36:37.444 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-01 11:36:37.444 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-01 11:36:37.444 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-01 11:36:37.444 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-01 11:36:37.444 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2944e607
2025-04-01 11:36:37.474 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-01 11:36:37.586 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-01 11:36:38.012 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1f8053e8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a0e50b4, org.springframework.security.web.context.SecurityContextHolderFilter@709c6177, org.springframework.security.web.header.HeaderWriterFilter@5220355a, org.springframework.web.filter.CorsFilter@23833abd, org.springframework.security.web.authentication.logout.LogoutFilter@3b60af14, com.momo.filter.JwtAuthorizationFilter@441b6578, org.springframework.security.web.session.ConcurrentSessionFilter@3f8d54c6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3992a0e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@519b1e67, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@545fc78f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59197100, org.springframework.security.web.session.SessionManagementFilter@61f26805, org.springframework.security.web.access.ExceptionTranslationFilter@2f9475ea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7416afbd]
2025-04-01 11:36:38.227 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-01 11:36:38.307 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-01 11:36:38.324 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-01 11:36:38.333 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-01 11:36:38.334 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-01 11:36:38.334 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@70d89d4b]]
2025-04-01 11:36:38.334 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-01 11:36:38.335 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-01 11:36:38.335 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-01 11:36:38.341 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 3.137 seconds (process running for 3.712)
2025-04-01 11:37:23.778 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-01 11:37:23.778 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-01 11:37:23.782 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 4 ms
2025-04-01 11:37:23.798 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:23.798 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:37:23.799 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:23.799 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:37:23.814 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:24.046 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 23 msec}
2025-04-01 11:37:24.065 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:37:24.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:37:24.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:37:24.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:37:24.841 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:37:24.889 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:25.021 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:25.040 INFO  [http-nio-11040-exec-2] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA0NSwiZXhwIjoxNzQzNDc1NjQ1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1ybKvs8Sa2zi7wmIRMowqnj49lDEUb4SOe-YDOjQBy0, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0Nzg2NDV9.igegXBx9WF8xybajaH0DyJlGc6fz-0ospV2jr_ertwM, expireTime=3600000, revoked=false, expired=false)
2025-04-01 11:37:25.045 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:37:25.047 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0Nzg2NDV9.igegXBx9WF8xybajaH0DyJlGc6fz-0ospV2jr_ertwM'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:25.050 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:25.070 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:25.070 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA0NSwiZXhwIjoxNzQzNDc1NjQ1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1ybKvs8Sa2zi7wmIRMowqnj49lDEUb4SOe-YDOjQBy0
2025-04-01 11:37:25.070 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:25.083 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:25.085 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:25.087 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:25.088 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:25.090 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:25.090 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:37:34.322 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 11:37:34.323 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 11:37:34.323 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 11:37:34.323 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 11:37:34.327 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.457 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:34.462 INFO  [http-nio-11040-exec-4] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0Nzg2NTR9.ubDNfp7Yrul_zVa92tvUBVKlTfWNx6beAuL-_HCCJYY, expireTime=3600000, revoked=false, expired=false)
2025-04-01 11:37:34.464 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.466 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0Nzg2NTR9.ubDNfp7Yrul_zVa92tvUBVKlTfWNx6beAuL-_HCCJYY'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:34.468 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:34.479 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:34.479 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.479 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:34.481 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.483 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:34.486 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.488 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.492 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.493 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:37:34.523 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 11:37:34.523 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.523 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 11:37:34.525 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.528 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.533 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.534 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.554 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:37:34.554 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.554 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:37:34.558 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.692 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 11:37:34.693 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:37:34.694 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.694 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:37:34.696 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.697 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.697 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.698 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.698 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 134 msec}
2025-04-01 11:37:34.699 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 158 msec}
2025-04-01 11:37:34.701 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:34.702 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.703 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.703 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:37:34.703 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:37:34.703 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:37:34.708 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 11:37:34.709 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.709 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.711 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.713 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.713 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.718 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:37:34.718 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.718 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:37:34.720 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 6 msec}
2025-04-01 11:37:34.720 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.721 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.721 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.722 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.722 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 11 msec}
2025-04-01 11:37:34.723 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.729 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:37:34.729 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:37:34.730 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 6 msec}
2025-04-01 11:37:34.732 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.734 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.736 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 11:37:34.736 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.736 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 11:37:34.738 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.739 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 11:37:34.739 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.740 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 11:37:34.740 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 11:37:34.740 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.742 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.744 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:37:34.744 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.744 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:37:34.746 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.748 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:37:34.748 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.748 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:37:34.751 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.752 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 11:37:34.752 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:37:34.752 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.753 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.754 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 8 msec}
2025-04-01 11:37:34.756 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.758 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 11:37:34.758 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.760 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 6 msec}
2025-04-01 11:37:34.760 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:37:34.760 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.760 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:37:34.764 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.768 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:34.768 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.768 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 11:37:34.770 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:37:34.770 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:37:34.770 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.771 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 19 msec}
2025-04-01 11:37:34.770 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.771 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:37:34.773 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.773 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.775 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.779 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 17 msec}
2025-04-01 11:37:34.780 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:37:34.781 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.781 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.781 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.779 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:37:34.782 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 8 msec}
2025-04-01 11:37:34.783 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.786 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.786 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.788 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:37:34.788 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.789 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:34.789 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 10 msec}
2025-04-01 11:37:34.794 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.797 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 7 msec}
2025-04-01 11:37:34.797 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 5 msec}
2025-04-01 11:37:34.798 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 11:37:34.799 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 11:37:34.804 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:37:34.805 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.805 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:37:34.804 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:37:34.806 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.806 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 11:37:34.806 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:37:34.806 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.806 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 11:37:34.808 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.808 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.808 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.810 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:34.810 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.811 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:37:34.814 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.815 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.815 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.818 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 11:37:34.819 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 3 msec}
2025-04-01 11:37:34.823 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 4 msec}
2025-04-01 11:37:34.834 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.835 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.835 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.837 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.839 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:34.841 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.848 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 11:37:34.866 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.866 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.866 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:34.872 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.885 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 11:37:34.890 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:37:34.890 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.890 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:37:34.897 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.901 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.901 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:37:34.913 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:37:34.913 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.913 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:37:34.914 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.917 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.921 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 17 msec}
2025-04-01 11:37:34.928 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-01 11:37:34.934 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:37:34.935 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.935 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:37:34.938 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.938 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.942 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 11:37:34.944 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 25 msec}
2025-04-01 11:37:34.951 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 9 msec}
2025-04-01 11:37:34.952 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:34.972 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 10 msec}
2025-04-01 11:37:34.986 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:34.987 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:34.987 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:34.991 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:34.997 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 11:37:35.004 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.009 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:37:35.010 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.010 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:37:35.011 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.014 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.016 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.017 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:37:35.022 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 11:37:35.039 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:37:35.039 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.039 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 11:37:35.041 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.044 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.047 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.051 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 11:37:35.068 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 11:37:35.069 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.069 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 11:37:35.070 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.073 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.078 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.080 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 11:37:35.102 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:37:35.102 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.103 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:37:35.105 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.107 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.110 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.115 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 11:37:35.128 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.128 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.128 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.129 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.132 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.133 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.136 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:37:35.153 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.153 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.153 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.156 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.160 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.163 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.166 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:37:35.175 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:37:35.176 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.176 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 11:37:35.178 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.184 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 11:37:35.187 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.193 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 11:37:35.197 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:37:35.197 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.197 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 11:37:35.198 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.200 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.201 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.204 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 11:37:35.218 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:37:35.218 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.218 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 11:37:35.220 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.222 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.223 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.228 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-01 11:37:35.249 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.249 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.249 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.251 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.254 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.259 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.288 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.288 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.288 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.289 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.291 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.293 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.329 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:37:35.329 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.329 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:37:35.330 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.332 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.334 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.337 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 11:37:35.357 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.357 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.357 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.359 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.361 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.364 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.367 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 11:37:35.397 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.397 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.397 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.399 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.401 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.404 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.407 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 11:37:35.475 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.475 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.475 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.477 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.479 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.482 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.505 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.505 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.505 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.507 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.509 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.510 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.530 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.530 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.530 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.531 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.534 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.535 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.555 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 11:37:35.555 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.556 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 11:37:35.557 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.560 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.562 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.565 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 11:37:35.591 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.591 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.591 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.593 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.595 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.598 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.601 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 11:37:35.625 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.625 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.625 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 11:37:35.626 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.628 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.629 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.630 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 11:37:35.668 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.669 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.669 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.670 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.672 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.673 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.689 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.689 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.689 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.690 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.692 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:37:35.693 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:35.707 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.707 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:37:35.707 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 11:37:35.708 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:37:35.710 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:37:35.711 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:37:38.330 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-01 11:40:30.475 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 11:40:30.475 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:40:30.475 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 11:40:30.479 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:40:30.484 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:40:30.497 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:40:30.499 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:40:30.503 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 2 msec}
2025-04-01 11:40:30.520 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:40:30.520 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:40:30.520 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:40:30.521 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:40:30.523 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:40:30.525 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:40:30.525 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:40:30.527 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 11:40:30.576 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:40:30.576 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:40:30.576 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:40:30.578 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:40:30.580 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:40:30.582 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:40:30.582 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:40:30.585 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:40:48.004 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 11:40:48.004 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:40:48.004 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 11:40:48.006 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:40:48.009 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 11:40:48.010 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:40:48.011 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:40:48.014 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 2 msec}
2025-04-01 11:40:48.066 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:40:48.066 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:40:48.066 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 11:40:48.069 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:40:48.073 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:40:48.074 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:40:48.075 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:40:48.076 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 11:40:48.117 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:40:48.117 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ3NTA1NCwiZXhwIjoxNzQzNDc1NjU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.PZ8pkepWx0q8JHkHjNWC7nXI11JGN0aBeL4rjxInorM
2025-04-01 11:40:48.117 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 11:40:48.118 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 11:40:48.120 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 11:40:48.121 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 11:40:48.121 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 11:40:48.123 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 12:07:38.382 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-04-01 12:37:38.419 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2025-04-01 13:07:38.400 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2025-04-01 14:05:46.826 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:05:46.827 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:05:46.827 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:05:46.827 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:05:46.864 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:05:46.905 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 34 msec}
2025-04-01 14:05:46.905 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: null
2025-04-01 14:05:51.070 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:05:51.070 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:05:51.070 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:05:51.070 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:05:51.112 WARN  [http-nio-11040-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-01 14:05:59.454 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-01 14:05:59.455 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@70d89d4b]]
2025-04-01 14:05:59.455 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-01 14:05:59.455 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 14:05:59.466 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-01 14:05:59.467 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-01 14:05:59.467 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 14:05:59.467 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-01 14:06:03.756 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-01 14:06:03.799 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 95397 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-01 14:06:03.800 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-01 14:06:04.086 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-01 14:06:04.086 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-01 14:06:05.054 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-01 14:06:05.062 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-01 14:06:05.064 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-01 14:06:05.064 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-01 14:06:05.099 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-01 14:06:05.099 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1013 ms
2025-04-01 14:06:05.924 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-01 14:06:05.936 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-01 14:06:05.936 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-01 14:06:05.937 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-01 14:06:05.938 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-01 14:06:05.938 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-01 14:06:05.938 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-01 14:06:05.938 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@11a0dd43
2025-04-01 14:06:06.000 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-01 14:06:06.201 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-01 14:06:06.590 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@676be216, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@642e7dc4, org.springframework.security.web.context.SecurityContextHolderFilter@ea2da05, org.springframework.security.web.header.HeaderWriterFilter@3edbf538, org.springframework.web.filter.CorsFilter@6b2071bf, org.springframework.security.web.authentication.logout.LogoutFilter@12e43485, com.momo.filter.JwtAuthorizationFilter@50e024e6, org.springframework.security.web.session.ConcurrentSessionFilter@10101c8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8cc24b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5fc417b9, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@29c95d41, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68a317be, org.springframework.security.web.session.SessionManagementFilter@3157625f, org.springframework.security.web.access.ExceptionTranslationFilter@20bc2966, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@55efab44]
2025-04-01 14:06:06.784 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-01 14:06:06.877 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-01 14:06:06.897 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-01 14:06:06.916 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-01 14:06:06.918 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-01 14:06:06.918 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6bf96810]]
2025-04-01 14:06:06.918 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-01 14:06:06.918 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-01 14:06:06.918 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-01 14:06:06.928 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 3.677 seconds (process running for 4.458)
2025-04-01 14:06:07.421 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-01 14:06:07.421 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-01 14:06:07.422 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-01 14:06:07.438 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:06:07.438 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:06:07.438 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:06:07.438 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:06:07.459 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:06:07.655 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 20 msec}
2025-04-01 14:06:07.672 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: null
2025-04-01 14:06:09.288 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:06:09.289 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:06:09.289 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:06:09.289 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:06:09.351 WARN  [http-nio-11040-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-01 14:06:46.939 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:06:46.940 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:06:46.940 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:06:46.940 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:06:46.941 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:06:46.947 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 4 msec}
2025-04-01 14:06:46.948 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: null
2025-04-01 14:06:53.815 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:06:53.816 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:06:53.816 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:06:53.816 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:06:53.820 WARN  [http-nio-11040-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-01 14:07:06.897 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-01 14:07:09.151 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:09.152 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:09.152 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:09.152 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:09.153 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:07:09.156 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 2 msec}
2025-04-01 14:07:09.156 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: null
2025-04-01 14:07:10.449 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:10.449 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:10.449 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:10.449 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:10.453 WARN  [http-nio-11040-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-01 14:07:25.310 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:25.312 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:25.313 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:25.313 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:25.320 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:07:25.329 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 5 msec}
2025-04-01 14:07:25.330 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: null
2025-04-01 14:07:26.472 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:26.472 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:26.472 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:26.472 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:26.477 WARN  [http-nio-11040-exec-8] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-01 14:07:28.444 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:28.445 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:28.445 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:28.445 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:28.446 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:07:28.450 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 3 msec}
2025-04-01 14:07:28.451 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: null
2025-04-01 14:07:30.601 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:30.602 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:30.602 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:30.602 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:30.604 WARN  [http-nio-11040-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.String` from Object value (token `JsonToken.START_OBJECT`)]
2025-04-01 14:07:52.239 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:52.240 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:52.240 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:52.240 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:52.242 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: anonymousUser
2025-04-01 14:07:52.246 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = ''
 {executed in 3 msec}
2025-04-01 14:07:52.246 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: null
2025-04-01 14:07:53.231 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:53.232 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:07:53.232 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:07:53.232 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:07:53.249 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:07:53.405 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 15 msec}
2025-04-01 14:07:53.427 INFO  [http-nio-11040-exec-2] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODc2NzN9.6L3daHZUt8JlvgEyOKsoYvmh0bH5khg9rn7qsLzutAY, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:07:53.433 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:07:53.440 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODc2NzN9.6L3daHZUt8JlvgEyOKsoYvmh0bH5khg9rn7qsLzutAY'
        WHERE   user_id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:07:53.446 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.462 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:53.462 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.462 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:53.485 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.489 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:07:53.496 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.529 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.544 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:07:53.544 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.544 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:07:53.546 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.554 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:07:53.554 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.554 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:07:53.557 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.562 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.562 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.562 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.565 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.571 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.571 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.571 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 36 msec}
2025-04-01 14:07:53.572 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:07:53.574 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.574 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.580 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.580 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.583 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:07:53.583 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:53.583 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.583 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:07:53.584 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:07:53.585 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 3 msec}
2025-04-01 14:07:53.586 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.591 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.594 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.595 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:07:53.598 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.598 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 14:07:53.599 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.602 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.602 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:07:53.605 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.605 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.606 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.608 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.609 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:07:53.609 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.610 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:07:53.610 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.611 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.611 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.612 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.612 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.613 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.614 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:07:53.620 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.620 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.620 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.620 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:07:53.620 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.620 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:07:53.622 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.622 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.623 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.623 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.626 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.626 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.628 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:07:53.629 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.629 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:07:53.630 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.630 INFO  [http-nio-11040-exec-10] [com.momo.service.CommonService] - Session('curr_shop_id') is not found. Try to find on Database...
2025-04-01 14:07:53.630 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.632 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:07:53.632 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.635 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.640 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:07:53.640 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.640 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:07:53.641 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.643 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.643 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 6 msec}
2025-04-01 14:07:53.645 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.649 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.650 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.650 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.651 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.653 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.651 ERROR [http-nio-11040-exec-3] [com.momo.handler.GlobalExceptionHandler] - NullPointerException: {}
java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "jakarta.servlet.http.HttpSession.getAttribute(String)" is null
	at com.momo.api.TodoController.getTodoForCalendar(TodoController.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-01 14:07:53.656 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.658 WARN  [http-nio-11040-exec-3] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "jakarta.servlet.http.HttpSession.getAttribute(String)" is null]
2025-04-01 14:07:53.658 ERROR [http-nio-11040-exec-5] [com.momo.handler.GlobalExceptionHandler] - NullPointerException: {}
java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "jakarta.servlet.http.HttpSession.getAttribute(String)" is null
	at com.momo.api.TodoController.getTodoDetail(TodoController.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:66)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:117)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.momo.filter.JwtAuthorizationFilter.doFilterInternal(JwtAuthorizationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-01 14:07:53.658 WARN  [http-nio-11040-exec-5] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "jakarta.servlet.http.HttpSession.getAttribute(String)" is null]
2025-04-01 14:07:53.667 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.667 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.667 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.668 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:07:53.668 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.668 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:07:53.669 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.669 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.671 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.671 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.674 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.674 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.676 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.679 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:07:53.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:07:53.683 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.694 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 14:07:53.700 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:07:53.700 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.700 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:07:53.701 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.703 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:07:53.703 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.703 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:07:53.703 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.705 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.720 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 16 msec}
2025-04-01 14:07:53.720 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 15 msec}
2025-04-01 14:07:53.722 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:07:53.723 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.723 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:07:53.728 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.729 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.736 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.740 INFO  [http-nio-11040-exec-9] [com.momo.service.CommonService] - Session('curr_shop_id') is not found. Try to find on Database...
2025-04-01 14:07:53.741 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.742 INFO  [http-nio-11040-exec-8] [com.momo.service.CommonService] - Session('curr_shop_id') is not found. Try to find on Database...
2025-04-01 14:07:53.742 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.744 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.748 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:07:53.749 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-01 14:07:53.753 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.754 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.754 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.759 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.763 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:07:53.767 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.768 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.772 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:07:53.777 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 4 msec}
2025-04-01 14:07:53.777 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 5 msec}
2025-04-01 14:07:53.777 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-01 14:07:53.789 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:07:53.789 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.789 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:07:53.793 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:07:53.793 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.793 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:07:53.793 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.795 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.796 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:07:53.796 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.799 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.799 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.810 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:07:53.810 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.810 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:07:53.812 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.813 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 13 msec}
2025-04-01 14:07:53.813 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.813 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 12 msec}
2025-04-01 14:07:53.816 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.820 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:07:53.827 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.827 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.827 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.829 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.830 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.832 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.834 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:07:53.845 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.845 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.845 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:07:53.847 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.848 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.850 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.852 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:07:53.862 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:07:53.862 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.862 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:07:53.864 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.870 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.872 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.879 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:07:53.879 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.879 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:07:53.881 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 5 msec}
2025-04-01 14:07:53.882 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.886 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:07:53.888 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.891 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:07:53.895 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:07:53.895 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.895 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:07:53.898 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.900 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:53.902 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.907 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 3 msec}
2025-04-01 14:07:53.928 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.928 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.928 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:07:53.930 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.934 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:53.936 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:53.937 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:07:53.939 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:07:53.977 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:07:53.978 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:53.978 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:07:53.979 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:53.984 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:07:53.989 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:54.040 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:07:54.040 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:54.040 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:07:54.045 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:54.050 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:07:54.054 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:07:54.065 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:07:54.066 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDA3MywiZXhwIjoxNzQzNDg0NjczLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.QnSeDL5zNl-BJf32QuXrtz0aJh426kqYIIWQBhpdxfk
2025-04-01 14:07:54.066 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:07:54.068 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:07:54.070 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:07:54.073 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.463 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:08:26.465 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:08:26.465 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:08:26.465 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:08:26.468 INFO  [http-nio-11040-exec-5] [com.momo.api.AuthController] - refresh
2025-04-01 14:08:26.477 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODc2NzN9.6L3daHZUt8JlvgEyOKsoYvmh0bH5khg9rn7qsLzutAY'
 {executed in 5 msec}
2025-04-01 14:08:26.481 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:08:26.487 INFO  [http-nio-11040-exec-5] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.551 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:08:26.553 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.553 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.554 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.555 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.560 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:08:26.560 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:08:26.573 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 15 msec}
2025-04-01 14:08:26.573 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 16 msec}
2025-04-01 14:08:26.576 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.576 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.576 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.576 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.576 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.577 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.578 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.578 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.579 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:08:26.579 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:08:26.579 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:08:26.580 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:08:26.583 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 4 msec}
2025-04-01 14:08:26.598 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:08:26.598 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.598 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:08:26.608 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.612 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:08:26.615 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.616 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.621 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:08:26.637 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:08:26.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:08:26.646 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.648 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:08:26.648 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.648 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:08:26.649 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:08:26.649 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.649 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:08:26.650 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:08:26.653 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.653 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.653 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:08:26.653 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.653 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:08:26.653 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:08:26.654 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.654 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:08:26.654 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:08:26.655 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.655 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.655 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.656 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:08:26.658 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:08:26.658 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:08:26.658 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.660 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.661 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.661 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.661 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.663 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:08:26.663 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:08:26.667 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 6 msec}
2025-04-01 14:08:26.667 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 5 msec}
2025-04-01 14:08:26.679 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.679 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.679 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.679 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:08:26.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:08:26.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.680 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:08:26.681 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.681 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:08:26.687 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.687 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.688 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.692 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:08:26.693 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.693 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:08:26.695 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:08:26.695 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.695 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.695 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:08:26.696 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:08:26.697 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 14:08:26.699 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.700 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-01 14:08:26.701 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.701 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.702 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:08:26.704 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.704 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:08:26.704 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:08:26.705 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:08:26.712 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 44 msec}
2025-04-01 14:08:26.716 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.728 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 28 msec}
2025-04-01 14:08:26.734 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.736 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 7 msec}
2025-04-01 14:08:26.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:08:26.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.749 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.749 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.749 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:08:26.765 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 25 msec}
2025-04-01 14:08:26.767 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.767 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.773 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:08:26.775 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 14:08:26.776 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.777 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:08:26.777 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.777 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:08:26.777 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.778 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:08:26.780 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.784 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 4 msec}
2025-04-01 14:08:26.790 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:08:26.800 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.800 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:08:26.800 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.800 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:08:26.803 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.808 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:08:26.811 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.811 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.811 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.811 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.813 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.813 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:08:26.814 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:08:26.817 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.820 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:08:26.827 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.827 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.827 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.829 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.831 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:08:26.833 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:26.836 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:08:26.932 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.932 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.932 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:26.935 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:26.939 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:08:26.939 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:26.939 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:08:26.944 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:27.001 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 65 msec}
2025-04-01 14:08:27.032 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:27.034 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 34 msec}
2025-04-01 14:08:27.036 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:08:27.039 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:08:27.039 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:27.039 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:08:27.053 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:27.062 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:27.067 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:08:27.068 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:27.068 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-01 14:08:27.068 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:27.068 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:08:27.086 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:27.088 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:27.090 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:08:27.101 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:08:27.106 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:08:27.106 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:08:27.106 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:08:27.110 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 6 msec}
2025-04-01 14:08:27.110 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:08:27.112 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:08:27.115 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:11:03.254 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:11:03.255 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:11:03.255 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:11:03.257 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:11:03.262 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:11:03.264 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:11:03.265 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:11:03.268 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:11:03.280 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/all
2025-04-01 14:11:03.280 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:11:03.280 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/all
2025-04-01 14:11:03.281 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:11:03.284 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:11:03.285 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:11:03.312 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with sale as (
            select s.*,
                   IF(device_id is not null, true, false) as ct,
                   IF(wt_cms > 0 and (internet_plan is not null or tv_plan is not null), true, false) as wt,
                   IF(s.sd_id is not null, true, false) as sd,
                (
                    select device_nm
                    from tb_device
                    where device_id=s.device_id
                    ) as device_nm,
                (
                    select device_cd
                    from tb_device
                    where device_id=s.device_id
                    ) as device_cd,
                (
                select ct_plan_nm
                from tb_ct_plan
                where ct_plan_id=s.ct_actv_plan
                ) as ct_actv_plan_nm,
                (
                select ct_plan_nm
                from tb_ct_plan
                where ct_plan_id=s.ct_dec_plan
                ) as ct_dec_plan_nm,
                IFNULL(ac.name, s.seller_id) as seller_nm,
                IF(ac.name is not null, ac.pfp, 0) as seller_pfp
            from tb_sale s
            left outer join tb_account ac on s.seller_id=ac.id
            where shop_id=2

                order by actv_dt desc

        ), filters as (
            select *
            from sale
            where

            1=1

                limit 30

        ), search as (
            select *
            from filters
            where

            1=1
        ), result as (
                select json_arrayagg(json_object(
                'sale_id',sale_id,
                'cust_nm', cust_nm,
                'cust_tel',cust_tel,
                'cust_cd',cust_cd,
                'cust_gd',cust_gd,
                'actv_dt',actv_dt,
                'total_cms',total_cms,
                'ct', ct,
                'wt',wt,
                'sd',sd,
                'device_nm',device_nm,
                'seller_nm',seller_nm,
                'seller_pfp', seller_pfp
                ))
                from search
        )

        select (
            select count(*)
            from filters
        ) as total_cnt,
            (
                select *
                from result
        ) as list
 {executed in 8 msec}
2025-04-01 14:13:03.210 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:03.211 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:13:03.211 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:03.218 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:03.225 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:13:03.227 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:03.229 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:03.233 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:13:03.239 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:03.239 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:13:03.239 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:03.240 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:03.253 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:03.255 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:03.255 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:03.257 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:13:03.964 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:13:03.965 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDEwNiwiZXhwIjoxNzQzNDg0NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Cqeak6ml_RXkp2QjR4SuS-xi6qvyzflrLKmHp8v3JgM
2025-04-01 14:13:03.965 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:13:03.967 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:03.970 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:03.972 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:03.973 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:03.976 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:03.977 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:13:06.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:13:06.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:13:06.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:13:06.078 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:13:06.084 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:06.221 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:06.223 INFO  [http-nio-11040-exec-9] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NiwiZXhwIjoxNzQzNDg0OTg2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1OvPBgLg5xyelTwm0fAkIbMTrwnXIHokr-zhknv7shs, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODc5ODZ9.H9kXEGGxjI_e0n6itnu-1JPF4gLP8VNGI5NLhFlGddg, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:13:06.225 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:06.227 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODc5ODZ9.H9kXEGGxjI_e0n6itnu-1JPF4gLP8VNGI5NLhFlGddg'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:06.230 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:13:06.245 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:13:06.245 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NiwiZXhwIjoxNzQzNDg0OTg2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1OvPBgLg5xyelTwm0fAkIbMTrwnXIHokr-zhknv7shs
2025-04-01 14:13:06.245 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:13:06.247 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:06.249 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:06.250 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:06.251 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:06.252 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:06.252 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:13:06.997 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:13:06.997 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:13:06.997 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:13:06.997 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:13:07.000 INFO  [http-nio-11040-exec-4] [com.momo.api.AuthController] - refresh
2025-04-01 14:13:07.020 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODc5ODZ9.H9kXEGGxjI_e0n6itnu-1JPF4gLP8VNGI5NLhFlGddg'
 {executed in 15 msec}
2025-04-01 14:13:07.028 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:13:07.035 INFO  [http-nio-11040-exec-4] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:13:07.066 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:13:07.066 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.066 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:13:07.066 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:13:07.066 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.066 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:13:07.068 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:07.068 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.068 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:07.069 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.069 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.070 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.073 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:13:07.073 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:13:07.073 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.073 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:13:07.074 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:07.074 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:07.075 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.075 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.075 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.076 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.076 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.076 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.076 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.089 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:13:07.094 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 7 msec}
2025-04-01 14:13:07.095 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 14:13:07.096 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 6 msec}
2025-04-01 14:13:07.097 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.098 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.102 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-01 14:13:07.103 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:13:07.104 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:07.104 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.104 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:07.107 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.109 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.111 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.112 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.114 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:13:07.132 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:07.132 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.132 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:13:07.133 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.134 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.136 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.137 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.138 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:13:07.140 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:13:07.140 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.140 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:13:07.142 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.143 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.145 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.148 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:13:07.148 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.148 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:13:07.150 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.150 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:13:07.151 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:13:07.152 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.156 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:13:07.156 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:13:07.156 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.156 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:13:07.158 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.159 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.161 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.163 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 0 msec}
2025-04-01 14:13:07.164 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:13:07.165 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.165 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:13:07.166 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.167 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.168 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.170 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:13:07.172 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.172 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.172 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.173 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.175 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:07.176 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.178 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:13:07.183 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.183 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.183 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.186 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.187 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.187 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:13:07.187 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.187 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:13:07.188 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.188 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.189 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.190 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:13:07.190 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.190 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:13:07.191 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.195 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:13:07.195 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.195 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:13:07.196 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.198 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:13:07.199 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.203 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:13:07.204 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.204 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:13:07.205 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.207 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.209 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.218 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:13:07.218 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.218 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:13:07.221 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.234 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 22 msec}
2025-04-01 14:13:07.239 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 18 msec}
2025-04-01 14:13:07.250 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.265 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:13:07.266 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.266 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:13:07.267 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 14 msec}
2025-04-01 14:13:07.271 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.271 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:13:07.271 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.271 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:13:07.280 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:13:07.281 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.319 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 36 msec}
2025-04-01 14:13:07.320 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.332 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.336 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 10 msec}
2025-04-01 14:13:07.342 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:13:07.342 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.342 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:13:07.344 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.344 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.344 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.344 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.346 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.347 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.347 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:07.351 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.354 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:13:07.354 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:13:07.362 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.363 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.363 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.366 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.368 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:13:07.378 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.417 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 30 msec}
2025-04-01 14:13:07.507 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:13:07.508 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.508 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:13:07.517 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.518 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.518 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.518 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.529 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.534 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:13:07.534 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.534 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:13:07.545 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 26 msec}
2025-04-01 14:13:07.547 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.551 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 21 msec}
2025-04-01 14:13:07.552 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:13:07.552 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.553 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.553 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.558 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 4 msec}
2025-04-01 14:13:07.567 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 12 msec}
2025-04-01 14:13:07.569 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:13:07.570 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.570 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:13:07.585 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.587 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.588 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:13:07.588 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:13:07.592 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:13:07.593 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:13:07.594 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:13:07.595 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.595 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:13:07.603 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 5 msec}
2025-04-01 14:14:35.061 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:14:35.062 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:14:35.062 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:14:35.066 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:14:35.099 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 16 msec}
2025-04-01 14:14:35.103 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:14:35.105 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:14:35.148 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 37 msec}
2025-04-01 14:14:35.213 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:14:35.213 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:14:35.213 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:14:35.216 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:14:35.226 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 14:14:35.232 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:14:35.232 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:14:35.235 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:14:35.339 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:14:35.339 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDM4NywiZXhwIjoxNzQzNDg0OTg3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.enTPd_fw1pdUJRKXgdcFpn6WNZHl2BnirOHLVDDEOmU
2025-04-01 14:14:35.339 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:14:35.343 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:14:35.351 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:14:35.354 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:14:35.355 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:14:35.361 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 4 msec}
2025-04-01 14:14:35.362 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:15:00.599 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:00.599 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:15:00.599 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:00.599 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:15:00.600 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:00.603 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:00.604 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:15:03.746 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:15:03.746 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:15:03.746 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:15:03.746 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:15:03.752 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:03.891 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:03.893 INFO  [http-nio-11040-exec-8] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwMywiZXhwIjoxNzQzNDg1MTAzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E4D2bsP1nZ2tPSMEkjlScPVVNY4qroZlfJrTBEcwKv4, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgxMDN9.opmUFNFj95ougviaGIqvFER8jxW_cc7pkQVsaR2_vzg, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:15:03.894 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:03.897 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgxMDN9.opmUFNFj95ougviaGIqvFER8jxW_cc7pkQVsaR2_vzg'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:03.901 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:15:03.913 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:03.914 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwMywiZXhwIjoxNzQzNDg1MTAzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E4D2bsP1nZ2tPSMEkjlScPVVNY4qroZlfJrTBEcwKv4
2025-04-01 14:15:03.914 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:03.915 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:03.917 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:03.919 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:03.920 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:03.923 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:03.924 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:15:04.370 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:15:04.370 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:15:04.370 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:15:04.370 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:15:04.374 INFO  [http-nio-11040-exec-5] [com.momo.api.AuthController] - refresh
2025-04-01 14:15:04.379 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgxMDN9.opmUFNFj95ougviaGIqvFER8jxW_cc7pkQVsaR2_vzg'
 {executed in 1 msec}
2025-04-01 14:15:04.381 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:04.384 INFO  [http-nio-11040-exec-5] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:15:04.413 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:15:04.413 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.413 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:15:04.414 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:15:04.415 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.415 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:15:04.415 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.416 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.417 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.417 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.423 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:04.424 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.425 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.426 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.426 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.427 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.427 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:15:04.427 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 2 msec}
2025-04-01 14:15:04.428 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:15:04.428 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.429 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.429 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.430 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.432 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-01 14:15:04.433 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:15:04.434 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:15:04.443 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:04.443 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.443 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:04.446 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.449 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:04.451 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.452 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.455 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:15:04.465 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:04.465 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.465 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:04.467 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.468 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.469 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.470 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.471 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:15:04.479 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:15:04.479 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.479 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:15:04.480 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:15:04.480 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.480 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:15:04.481 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.482 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.483 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.483 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.485 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.486 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.488 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:15:04.488 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.488 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:15:04.489 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:15:04.489 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.490 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:15:04.490 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:15:04.493 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.495 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 14:15:04.496 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:15:04.496 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.496 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:15:04.499 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.500 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.501 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.503 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.503 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.503 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.504 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:15:04.504 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.505 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.506 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.508 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:15:04.513 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.513 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.513 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.516 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.517 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.519 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.520 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:15:04.520 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.520 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:15:04.521 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:15:04.521 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.523 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:15:04.525 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.526 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:04.528 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:15:04.528 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:04.528 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.528 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:15:04.529 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.531 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:15:04.532 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.537 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:15:04.537 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.537 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:15:04.538 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.539 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.541 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.543 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:15:04.544 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.544 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:15:04.545 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.546 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.546 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 14:15:04.547 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.550 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 14:15:04.552 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:15:04.552 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.552 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:15:04.554 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.555 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.556 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.560 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-01 14:15:04.586 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:15:04.586 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.586 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:15:04.588 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.590 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:04.594 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.681 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:15:04.681 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.681 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:15:04.683 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.684 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.684 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.684 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.685 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.686 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.686 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.689 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.690 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.694 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-01 14:15:04.694 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 14:15:04.707 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:15:04.707 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.707 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:15:04.707 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.707 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.707 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.709 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.709 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.710 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.710 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.712 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.712 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.714 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:15:04.714 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:15:04.720 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.720 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.720 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.722 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.723 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.724 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.727 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:15:04.737 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.737 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.737 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:15:04.739 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.741 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:04.743 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.745 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:15:04.754 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:15:04.754 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.754 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:15:04.755 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.757 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.758 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:04.772 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:15:04.772 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:04.772 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:15:04.773 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:04.775 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:04.778 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:05.463 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:05.463 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:05.463 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:05.465 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:05.467 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:05.469 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:05.470 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:05.472 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:15:05.484 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:05.484 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:05.484 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:15:05.487 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:05.488 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:05.490 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:05.490 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:05.492 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:15:06.099 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:06.099 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDUwNCwiZXhwIjoxNzQzNDg1MTA0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.1epGQyOOyPb9_ZH2xgcdIv3EXTaz1TdZDQC3K8BNd6U
2025-04-01 14:15:06.099 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:06.101 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:15:06.103 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:06.104 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:15:06.105 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:06.108 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:06.108 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:15:12.058 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:12.058 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:15:12.058 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:15:12.058 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:15:12.059 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:15:12.062 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:15:12.062 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:15:20.581 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:15:20.581 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:15:20.581 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:15:20.581 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:15:20.586 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:15:20.724 ERROR [http-nio-11040-exec-1] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@24dacdd3
2025-04-01 14:15:20.726 WARN  [http-nio-11040-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 14:15:21.526 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:15:21.526 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:15:21.526 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:15:21.526 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:15:21.541 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 14:15:21.674 ERROR [http-nio-11040-exec-6] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@21382ab6
2025-04-01 14:15:21.675 WARN  [http-nio-11040-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 14:19:03.637 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:03.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:03.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:03.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:03.713 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 56 msec}
2025-04-01 14:19:03.986 ERROR [http-nio-11040-exec-9] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@3884ca75
2025-04-01 14:19:03.990 WARN  [http-nio-11040-exec-9] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 14:19:04.404 INFO  [File Watcher] [o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-04-01 14:19:04.412 INFO  [Thread-5] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-01 14:19:04.412 INFO  [Thread-5] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6bf96810]]
2025-04-01 14:19:04.412 INFO  [Thread-5] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-01 14:19:04.412 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 14:19:04.414 INFO  [Thread-5] [o.apache.coyote.http11.Http11NioProtocol] - Stopping ProtocolHandler ["http-nio-11040"]
2025-04-01 14:19:04.420 INFO  [Thread-5] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-01 14:19:04.420 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-01 14:19:04.420 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 14:19:04.420 INFO  [Thread-5] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-01 14:19:04.532 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 95397 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-01 14:19:04.533 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-01 14:19:05.354 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-01 14:19:05.356 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-01 14:19:05.356 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-01 14:19:05.356 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-01 14:19:05.365 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-01 14:19:05.365 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 825 ms
2025-04-01 14:19:05.662 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-01 14:19:05.662 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-01 14:19:05.662 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-01 14:19:05.662 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-01 14:19:05.662 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-01 14:19:05.663 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-01 14:19:05.663 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-01 14:19:05.663 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@581693db
2025-04-01 14:19:05.676 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-01 14:19:05.725 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-01 14:19:05.872 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@31a3d55, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@313f2dbb, org.springframework.security.web.context.SecurityContextHolderFilter@d0c5714, org.springframework.security.web.header.HeaderWriterFilter@1806f1e1, org.springframework.web.filter.CorsFilter@16196d87, org.springframework.security.web.authentication.logout.LogoutFilter@832d15d, com.momo.filter.JwtAuthorizationFilter@ec568de, org.springframework.security.web.session.ConcurrentSessionFilter@5b68e1d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22aa26ad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b93d6c8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7bde11b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c671cc6, org.springframework.security.web.session.SessionManagementFilter@50413424, org.springframework.security.web.access.ExceptionTranslationFilter@9cbff2e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c1a8bd9]
2025-04-01 14:19:05.935 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-01 14:19:05.982 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-01 14:19:05.992 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-01 14:19:05.993 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-01 14:19:05.993 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-01 14:19:05.993 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@71040d6a]]
2025-04-01 14:19:05.993 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-01 14:19:05.993 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-01 14:19:05.993 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-01 14:19:05.997 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 1.498 seconds (process running for 783.516)
2025-04-01 14:19:05.998 INFO  [restartedMain] [o.s.b.d.a.ConditionEvaluationDeltaLoggingListener] - Condition evaluation unchanged
2025-04-01 14:19:08.751 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-01 14:19:08.751 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-01 14:19:08.752 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-01 14:19:08.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:08.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:08.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:08.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:08.766 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:19:08.905 ERROR [http-nio-11040-exec-1] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@151186cd
2025-04-01 14:19:08.907 WARN  [http-nio-11040-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 14:19:08.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:08.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:08.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:08.928 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:08.929 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:08.935 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-01 14:19:08.936 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:19:10.652 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:10.652 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:10.652 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:10.652 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:10.655 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:10.789 ERROR [http-nio-11040-exec-3] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@34fb2aac
2025-04-01 14:19:10.790 WARN  [http-nio-11040-exec-3] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 14:19:11.621 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:11.621 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:11.621 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:11.621 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:11.621 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:11.626 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-01 14:19:11.626 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:19:12.990 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:12.991 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:12.991 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:19:12.991 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:12.996 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.133 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.138 INFO  [http-nio-11040-exec-5] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgzNTN9.wR854wrz_CWC9-6L4PNe4eDZwPRHASbkwy-OMDJB67U, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:19:13.140 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.142 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgzNTN9.wR854wrz_CWC9-6L4PNe4eDZwPRHASbkwy-OMDJB67U'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.145 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:19:13.169 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:13.170 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.170 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:13.171 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.174 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.175 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.176 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.178 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.178 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:19:13.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:19:13.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:19:13.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:19:13.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:19:13.354 INFO  [http-nio-11040-exec-7] [com.momo.api.AuthController] - refresh
2025-04-01 14:19:13.359 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgzNTN9.wR854wrz_CWC9-6L4PNe4eDZwPRHASbkwy-OMDJB67U'
 {executed in 2 msec}
2025-04-01 14:19:13.361 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:19:13.363 INFO  [http-nio-11040-exec-7] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:19:13.394 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:19:13.394 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.394 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:19:13.396 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.397 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.402 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.403 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.437 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:19:13.437 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.437 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:19:13.440 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.480 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:19:13.481 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.481 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:19:13.481 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:13.481 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.481 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:19:13.482 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.482 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.491 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 81 msec}
2025-04-01 14:19:13.496 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 14 msec}
2025-04-01 14:19:13.497 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 13 msec}
2025-04-01 14:19:13.497 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 56 msec}
2025-04-01 14:19:13.499 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.500 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.500 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.500 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.500 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.501 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.503 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:19:13.503 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.503 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:19:13.503 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:19:13.513 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:19:13.513 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.513 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:19:13.517 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.518 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.520 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.520 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.522 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:19:13.529 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:19:13.529 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.529 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:19:13.530 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.532 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.533 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.533 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.535 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:19:13.538 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:19:13.538 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.538 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:19:13.540 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.541 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:19:13.541 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.546 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:19:13.546 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.546 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:19:13.547 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.548 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.548 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:19:13.549 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.552 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:19:13.554 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:19:13.554 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.554 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:19:13.555 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.556 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.557 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.560 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 14:19:13.563 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:19:13.564 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.564 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:19:13.565 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.567 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.570 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.572 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.573 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.573 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.576 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.576 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-01 14:19:13.587 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-01 14:19:13.595 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.606 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 14:19:13.615 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:19:13.615 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.615 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:19:13.616 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:19:13.616 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.616 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:19:13.618 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.618 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.620 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:19:13.621 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.621 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:19:13.622 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.623 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:19:13.623 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.623 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:19:13.624 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:19:13.624 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.625 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.625 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:19:13.626 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.626 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.626 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.627 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.627 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:19:13.633 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.694 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:19:13.709 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.711 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:19:13.717 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 83 msec}
2025-04-01 14:19:13.717 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.718 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 83 msec}
2025-04-01 14:19:13.718 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 89 msec}
2025-04-01 14:19:13.719 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.719 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:19:13.719 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.719 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.719 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.719 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:19:13.720 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.721 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:19:13.721 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.722 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.724 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.722 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.727 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.736 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 5 msec}
2025-04-01 14:19:13.740 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.749 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 4 msec}
2025-04-01 14:19:13.757 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:19:13.757 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.757 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:19:13.758 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.760 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.762 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.765 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:19:13.771 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.772 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.772 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.773 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.774 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.776 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.779 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:19:13.784 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.784 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.784 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.785 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.786 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.787 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.789 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:19:13.816 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:19:13.817 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.817 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:19:13.820 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.825 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:19:13.828 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.829 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:19:13.830 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.830 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:19:13.832 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.834 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.835 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.837 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:19:13.846 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.846 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.846 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.847 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.850 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:19:13.851 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.852 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:19:13.864 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.864 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.864 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:19:13.866 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.867 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:19:13.868 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:13.872 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:19:13.894 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:19:13.894 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NDc1MywiZXhwIjoxNzQzNDg1MzUzLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.0EXChZwaEqLAGaQ2VrQB1P4IfiTQ6eyg2zi9doaSdQo
2025-04-01 14:19:13.894 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:19:13.895 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:19:13.897 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:19:13.897 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:19:31.514 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-01 14:19:31.514 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@71040d6a]]
2025-04-01 14:19:31.514 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-01 14:19:31.514 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 14:19:31.517 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-01 14:19:31.517 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-01 14:19:31.517 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 14:19:31.517 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2025-04-01 14:23:55.447 INFO  [background-preinit] [o.h.validator.internal.util.Version] - HV000001: Hibernate Validator 8.0.1.Final
2025-04-01 14:23:55.518 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Starting PhoneManagementApplication using Java 17.0.12 with PID 98285 (/Users/chan/momo/phoneManagement/target/classes started by chan in /Users/chan/momo/phoneManagement)
2025-04-01 14:23:55.519 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - The following 1 profile is active: "dev"
2025-04-01 14:23:55.811 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-01 14:23:55.812 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-01 14:23:57.179 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port 11040 (http)
2025-04-01 14:23:57.186 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-11040"]
2025-04-01 14:23:57.187 INFO  [restartedMain] [o.apache.catalina.core.StandardService] - Starting service [Tomcat]
2025-04-01 14:23:57.188 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-04-01 14:23:57.215 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2025-04-01 14:23:57.215 INFO  [restartedMain] [o.s.b.w.s.c.ServletWebServerApplicationContext] - Root WebApplicationContext: initialization completed in 1402 ms
2025-04-01 14:23:57.924 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Using default implementation for ThreadExecutor
2025-04-01 14:23:57.931 INFO  [restartedMain] [org.quartz.core.SchedulerSignalerImpl] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2025-04-01 14:23:57.931 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Quartz Scheduler v.2.3.2 created.
2025-04-01 14:23:57.932 INFO  [restartedMain] [org.quartz.simpl.RAMJobStore] - RAMJobStore initialized.
2025-04-01 14:23:57.932 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler meta-data: Quartz Scheduler (v2.3.2) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2025-04-01 14:23:57.932 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2025-04-01 14:23:57.932 INFO  [restartedMain] [org.quartz.impl.StdSchedulerFactory] - Quartz scheduler version: 2.3.2
2025-04-01 14:23:57.932 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@47c5ef2b
2025-04-01 14:23:57.965 INFO  [restartedMain] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor] - Autowired annotation is not supported on static fields: public static int com.momo.job.DormantUserJob.DORMANT_CYCLE_DATE
2025-04-01 14:23:58.101 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: class path resource [public/index.html]
2025-04-01 14:23:58.460 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6c39cfb8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23820aa2, org.springframework.security.web.context.SecurityContextHolderFilter@b545a8d, org.springframework.security.web.header.HeaderWriterFilter@57974409, org.springframework.web.filter.CorsFilter@680a8eca, org.springframework.security.web.authentication.logout.LogoutFilter@5c3f90ce, com.momo.filter.JwtAuthorizationFilter@9b1efd4, org.springframework.security.web.session.ConcurrentSessionFilter@413d2d45, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46c0f1ba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22ec3367, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7f64bff3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2bd7a555, org.springframework.security.web.session.SessionManagementFilter@6b0691ee, org.springframework.security.web.access.ExceptionTranslationFilter@4314c00f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54eccbf2]
2025-04-01 14:23:58.714 WARN  [restartedMain] [o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration] - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-04-01 14:23:58.866 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2025-04-01 14:23:58.894 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-11040"]
2025-04-01 14:23:58.917 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port 11040 (http) with context path ''
2025-04-01 14:23:58.918 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2025-04-01 14:23:58.919 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@40bd8cc]]
2025-04-01 14:23:58.919 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2025-04-01 14:23:58.919 INFO  [restartedMain] [o.s.s.quartz.SchedulerFactoryBean] - Starting Quartz Scheduler now
2025-04-01 14:23:58.919 INFO  [restartedMain] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2025-04-01 14:23:58.929 INFO  [restartedMain] [com.momo.PhoneManagementApplication] - Started PhoneManagementApplication in 4.314 seconds (process running for 5.125)
2025-04-01 14:23:59.476 INFO  [http-nio-11040-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-01 14:23:59.477 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2025-04-01 14:23:59.478 INFO  [http-nio-11040-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 1 ms
2025-04-01 14:23:59.501 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:23:59.501 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:23:59.501 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:23:59.501 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:23:59.558 INFO  [http-nio-11040-exec-1] [com.momo.api.AuthController] - refresh
2025-04-01 14:23:59.797 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODgzNTN9.wR854wrz_CWC9-6L4PNe4eDZwPRHASbkwy-OMDJB67U'
 {executed in 15 msec}
2025-04-01 14:23:59.814 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:23:59.842 INFO  [http-nio-11040-exec-1] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:24:00.172 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:24:00.173 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.173 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:24:00.178 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.316 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 136 msec}
2025-04-01 14:24:00.318 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:00.319 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.319 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:00.319 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:00.319 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.319 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:00.320 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:24:00.321 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.321 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:24:00.323 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.323 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.326 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.330 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.334 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:24:00.334 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-01 14:24:00.336 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.337 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-01 14:24:00.339 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.339 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.341 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.341 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.341 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.342 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.344 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:24:00.344 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 5 msec}
2025-04-01 14:24:00.345 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:00.345 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 14:24:00.346 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:00.373 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:00.373 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.373 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:00.378 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.382 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:00.390 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.393 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.401 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 6 msec}
2025-04-01 14:24:00.414 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:00.415 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.416 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:00.420 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.423 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:00.428 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.429 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.430 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:24:00.430 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.430 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:24:00.434 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.434 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:24:00.437 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:00.446 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.448 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:24:00.449 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.449 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:24:00.456 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.457 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:24:00.458 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.458 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:24:00.461 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:24:00.462 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.462 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.462 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.462 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.467 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.470 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.470 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:24:00.480 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 12 msec}
2025-04-01 14:24:00.504 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 22 msec}
2025-04-01 14:24:00.505 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.518 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.527 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:24:00.528 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.528 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:24:00.535 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.542 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:24:00.544 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 34 msec}
2025-04-01 14:24:00.546 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.551 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.552 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.549 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 7 msec}
2025-04-01 14:24:00.556 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.557 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 3 msec}
2025-04-01 14:24:00.557 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.562 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:00.565 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:24:00.565 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.566 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:24:00.566 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:24:00.567 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.567 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:24:00.567 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:24:00.567 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.567 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:24:00.567 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-01 14:24:00.570 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.570 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.574 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 9 msec}
2025-04-01 14:24:00.581 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.583 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.585 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 10 msec}
2025-04-01 14:24:00.594 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 22 msec}
2025-04-01 14:24:00.597 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:24:00.597 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.597 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:24:00.602 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 15 msec}
2025-04-01 14:24:00.602 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.602 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 17 msec}
2025-04-01 14:24:00.613 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.633 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.644 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.670 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 36 msec}
2025-04-01 14:24:00.683 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 41 msec}
2025-04-01 14:24:00.683 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.719 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:00.719 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.719 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.719 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.723 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.719 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:00.744 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.745 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.745 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.752 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.751 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.776 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 76 msec}
2025-04-01 14:24:00.781 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.834 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 111 msec}
2025-04-01 14:24:00.862 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 79 msec}
2025-04-01 14:24:00.862 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 107 msec}
2025-04-01 14:24:00.862 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 102 msec}
2025-04-01 14:24:00.868 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.871 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.879 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.889 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 13 msec}
2025-04-01 14:24:00.889 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 14:24:00.900 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.901 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.901 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.901 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.901 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.901 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.906 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.906 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.911 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:24:00.911 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:24:00.916 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.916 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.924 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 14:24:00.924 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 4 msec}
2025-04-01 14:24:00.939 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.939 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.939 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.939 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:00.939 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.939 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.941 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.942 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.946 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:00.946 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:24:00.951 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.951 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.954 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:00.954 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:24:00.962 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.962 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.962 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.965 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.968 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:00.970 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.973 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:00.979 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.979 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.979 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.983 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:00.985 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:00.987 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:00.990 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:24:00.995 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.995 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:00.995 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:00.998 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:01.001 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:01.003 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:01.005 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:01.013 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:01.014 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:01.014 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:01.018 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:01.021 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:01.023 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:01.025 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:01.043 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:01.043 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:01.043 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:01.046 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:01.048 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:01.050 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:01.073 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:01.073 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:01.074 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:01.076 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:01.079 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:01.083 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:01.748 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:01.748 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:01.748 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:01.750 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:01.753 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:01.756 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:01.757 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:01.760 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:24:01.773 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:01.774 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:01.774 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:01.776 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:01.778 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:01.780 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:01.780 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:01.782 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:24:02.437 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:02.437 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTAzOSwiZXhwIjoxNzQzNDg1NjM5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.air5oduUGMwxVpgK7Qc9LukKsBa6TtGmmdLHhDQT1HA
2025-04-01 14:24:02.437 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:02.439 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:02.441 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:02.442 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:02.443 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:02.444 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:02.445 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:18.443 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:18.446 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:24:18.446 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:18.446 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:24:18.450 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:18.496 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 4 msec}
2025-04-01 14:24:18.498 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:20.380 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:24:20.380 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:24:20.380 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:24:20.380 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:24:20.388 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:24:20.531 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:20.535 INFO  [http-nio-11040-exec-2] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg2NjB9.dOzKCdGHe3eZlX3MLHcnY-OPkUJY6yC3aTg_wvHQsdQ, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:24:20.538 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:20.539 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg2NjB9.dOzKCdGHe3eZlX3MLHcnY-OPkUJY6yC3aTg_wvHQsdQ'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:20.542 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:20.558 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:20.558 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:20.558 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:20.563 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:20.566 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:20.568 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:20.569 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:20.576 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 5 msec}
2025-04-01 14:24:20.577 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:20.957 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:24:20.958 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:24:20.958 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:24:20.958 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:24:20.959 INFO  [http-nio-11040-exec-8] [com.momo.api.AuthController] - refresh
2025-04-01 14:24:20.963 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg2NjB9.dOzKCdGHe3eZlX3MLHcnY-OPkUJY6yC3aTg_wvHQsdQ'
 {executed in 2 msec}
2025-04-01 14:24:20.967 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:24:20.973 INFO  [http-nio-11040-exec-8] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:24:21.005 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.007 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.007 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.008 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.008 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.011 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.011 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.011 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.013 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:24:21.013 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.014 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.014 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.014 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.014 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.014 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.015 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:24:21.016 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.016 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:24:21.016 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.016 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.017 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:21.020 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 3 msec}
2025-04-01 14:24:21.030 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.030 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.030 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.034 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.037 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.042 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.043 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.045 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:24:21.053 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.054 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.054 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.055 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:24:21.055 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.055 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:24:21.056 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.056 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.058 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.058 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.061 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.061 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.061 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.062 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:24:21.062 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.062 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:24:21.064 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:24:21.065 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.068 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:21.068 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 4 msec}
2025-04-01 14:24:21.071 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:24:21.071 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.071 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:24:21.071 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.073 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.075 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.075 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:24:21.078 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.079 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:21.079 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.079 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:21.081 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 2 msec}
2025-04-01 14:24:21.081 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.083 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.086 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.086 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.086 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.086 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.089 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.089 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:24:21.090 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.092 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.095 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:21.101 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.101 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.101 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.101 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:24:21.102 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.102 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:24:21.103 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.103 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.104 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.104 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.106 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.106 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.106 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.107 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.108 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:21.112 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:24:21.112 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.112 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:24:21.114 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.116 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.118 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.119 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:24:21.119 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.119 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:24:21.120 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.123 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.124 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.125 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:24:21.125 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.126 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:24:21.127 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.128 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.129 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 3 msec}
2025-04-01 14:24:21.130 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.134 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:24:21.134 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.134 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:24:21.135 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 14:24:21.135 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.137 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.138 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.142 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-01 14:24:21.172 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:21.172 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.172 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:21.174 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.186 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 14:24:21.194 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.249 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:21.249 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.249 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:21.251 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.251 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.251 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.255 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.255 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.260 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:24:21.261 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:24:21.264 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.264 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.267 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:24:21.267 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:21.280 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.280 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.280 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.281 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:24:21.282 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.282 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:24:21.282 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.283 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.283 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.284 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.287 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.289 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.291 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:21.291 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:24:21.300 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.300 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.300 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.302 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.303 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.304 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.306 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:24:21.317 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.317 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.317 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:24:21.318 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.319 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.320 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.322 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:24:21.344 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:21.344 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.344 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:21.346 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.347 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.348 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.358 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:21.358 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.358 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:24:21.361 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.363 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.365 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.693 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.693 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.694 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.695 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.697 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.699 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.700 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.701 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:24:21.714 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.714 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:21.714 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:24:21.716 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:21.718 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:21.719 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:21.720 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:21.722 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:24:22.490 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:22.490 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA2MCwiZXhwIjoxNzQzNDg1NjYwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8PP_Q2BPNlbGcP34u5fO4e8uYKgoLakHzpxVMvCaK2E
2025-04-01 14:24:22.490 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:22.493 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:22.496 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:22.498 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:22.499 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:22.500 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:22.501 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:46.529 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:46.529 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:24:46.529 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:46.529 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:24:46.529 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:46.554 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 24 msec}
2025-04-01 14:24:46.555 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:58.117 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:58.118 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:24:58.118 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:58.118 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:24:58.120 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:58.128 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 4 msec}
2025-04-01 14:24:58.129 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:24:58.900 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-04-01 14:24:59.684 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:24:59.685 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:24:59.685 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:24:59.685 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:24:59.691 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:59.825 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:59.827 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA5OSwiZXhwIjoxNzQzNDg1Njk5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8Atzw0ff4sKlr6ogGpt8pMoEhUp6OFVNyd0fYcRr6TU, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg2OTl9.N5wtxSf2_iL4m79z1GUBFW4ljg5P7HPa52R0Jbp0aUs, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:24:59.830 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:59.832 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg2OTl9.N5wtxSf2_iL4m79z1GUBFW4ljg5P7HPa52R0Jbp0aUs'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:59.835 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:59.859 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:59.859 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTA5OSwiZXhwIjoxNzQzNDg1Njk5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8Atzw0ff4sKlr6ogGpt8pMoEhUp6OFVNyd0fYcRr6TU
2025-04-01 14:24:59.859 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:24:59.861 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:24:59.864 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:24:59.868 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:24:59.868 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:24:59.870 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:24:59.871 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:25:00.251 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:25:00.252 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:25:00.252 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:25:00.252 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:25:00.255 INFO  [http-nio-11040-exec-10] [com.momo.api.AuthController] - refresh
2025-04-01 14:25:00.263 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg2OTl9.N5wtxSf2_iL4m79z1GUBFW4ljg5P7HPa52R0Jbp0aUs'
 {executed in 2 msec}
2025-04-01 14:25:00.265 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.268 INFO  [http-nio-11040-exec-10] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:25:00.296 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:25:00.297 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:25:00.297 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.297 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.297 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:25:00.297 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:25:00.302 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.303 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.305 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.305 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.307 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:00.308 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:00.308 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.309 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.309 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:00.309 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:00.310 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.310 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.311 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.311 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.311 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.311 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.312 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:00.312 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:25:00.312 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.313 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 2 msec}
2025-04-01 14:25:00.313 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.313 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.314 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.314 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.318 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 4 msec}
2025-04-01 14:25:00.319 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:25:00.319 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:25:00.328 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:00.329 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.329 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:00.331 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.334 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.337 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.338 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.342 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 14:25:00.351 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:00.351 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.351 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:00.353 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.355 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.357 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.358 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.360 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:25:00.360 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.360 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:25:00.362 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.362 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:25:00.365 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.368 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:25:00.369 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.369 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:25:00.370 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.373 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:25:00.373 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.377 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.377 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:25:00.377 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.377 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:25:00.379 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.379 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:25:00.379 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:25:00.382 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.385 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.386 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:25:00.386 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.386 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:25:00.387 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 14:25:00.387 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.389 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.393 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.393 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.393 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.394 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.395 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.395 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:25:00.395 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:25:00.397 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.400 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:25:00.405 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.406 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.406 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.408 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.409 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:25:00.409 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.409 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:25:00.409 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.411 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.411 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.412 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:25:00.412 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.412 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:25:00.413 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:00.414 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:25:00.418 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:25:00.418 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.418 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:25:00.419 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.421 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.423 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.426 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:25:00.426 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.426 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:25:00.428 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.429 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.430 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.434 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:25:00.434 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.434 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:25:00.435 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.436 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:25:00.436 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.437 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.440 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:25:00.440 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:25:00.441 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.441 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:25:00.442 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.443 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.444 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.449 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-01 14:25:00.478 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:00.479 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.479 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:00.485 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.510 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 17 msec}
2025-04-01 14:25:00.553 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.569 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.569 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:25:00.569 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.569 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.569 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.570 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:25:00.572 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.572 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.575 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:25:00.575 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.578 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.578 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.582 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 14:25:00.582 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:25:00.591 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.591 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.591 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.594 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.595 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:25:00.596 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.596 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:25:00.596 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.597 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.598 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.598 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.599 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:25:00.599 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.602 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:25:00.610 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.610 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.610 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.612 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.613 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.614 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.616 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:25:00.627 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.627 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.627 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:00.628 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.629 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:00.631 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.632 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:25:00.653 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:00.653 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.653 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:00.654 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.656 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.657 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:00.670 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:00.670 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:00.670 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:00.672 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:00.674 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:00.676 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:03.138 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:03.139 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:03.139 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:03.141 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:03.143 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:03.145 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:03.146 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:03.149 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:03.159 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:03.159 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:03.159 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:03.161 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:03.163 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:03.165 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:03.165 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:03.167 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:03.919 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:03.919 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwMCwiZXhwIjoxNzQzNDg1NzAwLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.SQVq03sMb5npSz17uP9Lmm-4o8AMIQnQGzzf156IuCM
2025-04-01 14:25:03.919 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:03.922 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:03.925 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:03.927 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:03.928 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:03.930 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:03.930 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:25:06.094 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:25:06.094 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:25:06.094 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:25:06.094 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:25:06.099 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.235 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.237 INFO  [http-nio-11040-exec-10] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3MDZ9.5D2wh7ySCxC55B-h-RSjvI6RkqNbRVnmF4iyuv825tM, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:25:06.238 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.239 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3MDZ9.5D2wh7ySCxC55B-h-RSjvI6RkqNbRVnmF4iyuv825tM'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.241 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.256 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:06.256 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.256 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:06.257 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.259 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.260 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.260 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.261 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-01 14:25:06.262 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:25:06.466 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:25:06.466 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:25:06.467 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:25:06.467 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:25:06.469 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-01 14:25:06.476 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3MDZ9.5D2wh7ySCxC55B-h-RSjvI6RkqNbRVnmF4iyuv825tM'
 {executed in 1 msec}
2025-04-01 14:25:06.478 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.480 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:25:06.523 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:25:06.523 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.523 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:25:06.526 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:25:06.526 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.526 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:25:06.532 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:06.532 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.532 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:06.533 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.534 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.534 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.535 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:06.536 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:06.536 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.536 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.537 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.537 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.537 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.538 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.538 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.538 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:06.538 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.538 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:06.540 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:06.541 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:06.541 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 2 msec}
2025-04-01 14:25:06.541 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.547 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:25:06.551 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.552 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.554 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.555 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:25:06.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:06.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.555 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:06.561 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.563 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.565 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.566 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.570 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:25:06.602 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:06.602 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.602 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:06.612 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.614 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:25:06.615 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.615 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:25:06.616 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:25:06.617 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.617 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.618 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.618 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.622 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:25:06.623 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.638 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:25:06.638 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.638 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:25:06.640 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.643 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:25:06.643 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.643 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:25:06.643 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:06.645 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.645 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 10 msec}
2025-04-01 14:25:06.649 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.651 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:25:06.653 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:25:06.653 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:25:06.653 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.654 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:25:06.656 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.656 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.660 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:06.661 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 14:25:06.686 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.686 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.686 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.686 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.696 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.702 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 15 msec}
2025-04-01 14:25:06.707 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:25:06.707 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.708 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:25:06.712 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.722 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:25:06.723 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.723 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:25:06.723 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 26 msec}
2025-04-01 14:25:06.726 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.728 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 14 msec}
2025-04-01 14:25:06.729 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:25:06.729 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.729 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:25:06.732 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:25:06.732 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.733 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.734 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.735 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:06.738 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.738 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 14:25:06.738 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:25:06.743 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:25:06.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.757 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:25:06.757 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.757 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:25:06.758 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.758 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.758 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.761 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.761 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.761 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:25:06.762 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.762 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:25:06.764 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.767 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:25:06.767 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:25:06.768 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:25:06.832 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 75 msec}
2025-04-01 14:25:06.834 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.835 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.850 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 14 msec}
2025-04-01 14:25:06.846 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.846 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 10 msec}
2025-04-01 14:25:06.854 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:06.855 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.855 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:06.862 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.866 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:25:06.866 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:25:06.867 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.867 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:25:06.867 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 12 msec}
2025-04-01 14:25:06.870 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.870 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.872 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:06.874 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.878 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.878 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.878 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.878 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-01 14:25:06.881 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.883 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.884 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.886 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:25:06.895 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.895 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.895 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.896 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.898 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:25:06.899 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.902 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 14:25:06.962 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:25:06.962 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.962 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:25:06.965 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.967 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:06.969 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.972 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:25:06.986 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.986 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:06.986 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:06.987 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:06.989 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:06.991 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:06.993 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:25:07.014 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:07.014 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:07.014 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:25:07.016 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:07.017 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:07.019 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:07.020 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:25:07.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:07.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:07.045 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:07.046 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:07.048 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:07.050 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:07.072 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:07.072 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:07.072 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:25:07.074 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:07.075 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:25:07.076 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:08.747 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:08.747 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:08.747 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:08.750 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:08.752 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:08.754 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:08.755 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:08.758 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:08.769 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:08.769 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:08.769 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:25:08.771 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:08.773 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:08.775 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:08.775 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:08.777 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:25:09.386 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:09.386 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTEwNiwiZXhwIjoxNzQzNDg1NzA2LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.3prE5eWPUlq2D6QcRlTv2bVKDFTHnq8e1P2Q94Qzc2k
2025-04-01 14:25:09.386 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:25:09.390 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:25:09.392 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:09.394 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:25:09.395 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:25:09.397 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:25:09.398 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:03.371 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:03.372 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:26:03.372 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:03.372 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:26:03.374 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:03.394 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 17 msec}
2025-04-01 14:26:03.396 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:05.097 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:26:05.097 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:26:05.097 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:26:05.097 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:26:05.101 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.235 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.238 INFO  [http-nio-11040-exec-4] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3NjV9.ZMmFYWeEe_cH3dprLeloCaMbrgPNPCvi4gTRUkYHrKo, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:26:05.239 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.241 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3NjV9.ZMmFYWeEe_cH3dprLeloCaMbrgPNPCvi4gTRUkYHrKo'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:05.244 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.260 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:05.260 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.260 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:05.261 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.263 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.265 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.266 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.268 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:05.268 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:05.661 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:26:05.661 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:26:05.661 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:26:05.661 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:26:05.663 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-01 14:26:05.676 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3NjV9.ZMmFYWeEe_cH3dprLeloCaMbrgPNPCvi4gTRUkYHrKo'
 {executed in 5 msec}
2025-04-01 14:26:05.686 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:26:05.692 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:26:05.724 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:26:05.725 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.725 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:26:05.727 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.728 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:26:05.728 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.728 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:26:05.729 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.735 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:26:05.737 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 14:26:05.741 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.741 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:05.741 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.741 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:05.744 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.744 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.744 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.746 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:05.746 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.746 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:05.746 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.747 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.748 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:26:05.756 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 8 msec}
2025-04-01 14:26:05.757 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.757 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.761 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 14 msec}
2025-04-01 14:26:05.762 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 14:26:05.762 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 14:26:05.764 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.764 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.766 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.766 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:05.785 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:05.785 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.785 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:05.786 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.789 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:05.790 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.791 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.793 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:26:05.807 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:05.807 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.807 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:05.808 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.810 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:05.811 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.811 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.812 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:26:05.817 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:26:05.817 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.817 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:26:05.818 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.819 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.820 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.824 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:26:05.824 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.824 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:26:05.824 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:26:05.825 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.826 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:05.827 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.829 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:26:05.833 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:26:05.833 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.833 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:26:05.835 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.837 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.838 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.840 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 14:26:05.841 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:26:05.841 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.841 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:26:05.843 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.844 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.845 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.847 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:26:05.887 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:05.887 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.887 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:05.888 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:26:05.888 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.888 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:26:05.888 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:26:05.888 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.888 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:26:05.890 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.892 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.894 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.894 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:26:05.895 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.896 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:26:05.896 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.896 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:05.898 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:26:05.899 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.899 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:26:05.898 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.899 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:26:05.899 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.899 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:26:05.899 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.900 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.900 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:26:05.900 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.903 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:26:05.903 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 14:26:05.904 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:26:05.905 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:26:05.905 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.905 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:26:05.909 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.909 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.910 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.911 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:05.911 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.911 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:05.911 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:05.913 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.914 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 3 msec}
2025-04-01 14:26:05.916 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.920 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:26:05.920 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 9 msec}
2025-04-01 14:26:05.934 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 15 msec}
2025-04-01 14:26:05.934 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:05.940 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 5 msec}
2025-04-01 14:26:05.946 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:05.946 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:05.946 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:05.950 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:05.954 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:05.959 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.001 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:26:06.001 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.001 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:26:06.002 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.003 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.004 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.006 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:26:06.012 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.012 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.012 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.013 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.014 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.015 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.017 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:26:06.024 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.024 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.024 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.025 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.026 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.027 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.029 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:26:06.054 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:26:06.054 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.054 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:26:06.055 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.057 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:06.057 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.059 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:26:06.070 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.070 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.070 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.071 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.072 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.073 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.074 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:26:06.086 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.086 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.086 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:06.087 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.089 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:06.090 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.092 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:26:06.104 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:06.104 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.104 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:06.106 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.108 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.112 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.131 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:06.131 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.131 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:06.134 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.137 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:06.138 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.371 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:06.371 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.371 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:06.373 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.375 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.375 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.376 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:06.378 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:26:06.401 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:06.401 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:06.401 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:06.402 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:06.403 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:06.404 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:06.404 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:06.406 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:26:07.205 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:07.205 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE2NSwiZXhwIjoxNzQzNDg1NzY1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.J-kgd-CydrMV0AAGUkT4lD95W66cqz2hzci11TsGfCY
2025-04-01 14:26:07.205 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:07.207 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:07.208 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:07.209 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:07.210 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:07.211 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:07.211 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:13.861 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:13.861 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:26:13.861 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:13.861 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:26:13.862 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:13.864 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:13.864 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:14.836 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:26:14.836 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:26:14.836 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:26:14.836 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:26:14.840 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:14.990 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:14.992 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NCwiZXhwIjoxNzQzNDg1Nzc0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.MAmYlGeOPDyDoqfTVHOZ6KGVUhCMtCG6n0RuLDLoZ7c, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3NzR9.R2CJRTETWUPxZ0UU22PSHBd1itjqbq1BnMRF2eDi_bo, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:26:14.993 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:14.994 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3NzR9.R2CJRTETWUPxZ0UU22PSHBd1itjqbq1BnMRF2eDi_bo'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:14.997 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.009 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:15.009 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NCwiZXhwIjoxNzQzNDg1Nzc0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.MAmYlGeOPDyDoqfTVHOZ6KGVUhCMtCG6n0RuLDLoZ7c
2025-04-01 14:26:15.009 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:15.011 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.013 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.014 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.015 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.017 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:15.017 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:15.475 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:26:15.475 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:26:15.475 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:26:15.475 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:26:15.476 INFO  [http-nio-11040-exec-1] [com.momo.api.AuthController] - refresh
2025-04-01 14:26:15.484 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg3NzR9.R2CJRTETWUPxZ0UU22PSHBd1itjqbq1BnMRF2eDi_bo'
 {executed in 4 msec}
2025-04-01 14:26:15.486 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.492 INFO  [http-nio-11040-exec-1] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:26:15.522 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:26:15.522 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.522 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:26:15.524 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.525 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.530 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.531 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.533 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:15.533 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.533 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:15.533 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:26:15.534 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.534 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:26:15.535 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.535 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:15.535 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.535 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:15.535 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.536 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.537 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.537 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 5 msec}
2025-04-01 14:26:15.538 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:15.538 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.539 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.539 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.540 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.540 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.541 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.542 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:26:15.542 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:15.542 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.542 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:26:15.544 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:26:15.550 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:15.551 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.551 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:15.552 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.553 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.555 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.556 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.558 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:26:15.576 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:15.577 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.577 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:15.578 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.579 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.580 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.580 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.582 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:26:15.586 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:26:15.587 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.587 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:26:15.589 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.589 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:26:15.589 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.589 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:26:15.590 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.590 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.591 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.591 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.592 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.595 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:26:15.596 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:26:15.598 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:26:15.598 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.599 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:26:15.600 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.601 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.603 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.604 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 0 msec}
2025-04-01 14:26:15.605 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:26:15.606 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.606 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:26:15.608 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.609 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.609 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.611 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:26:15.615 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.615 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.615 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.616 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.618 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.618 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.620 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:26:15.624 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.624 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.624 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.626 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.627 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.629 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.630 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:26:15.630 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.630 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:26:15.630 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:26:15.631 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.633 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:15.633 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.634 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:15.634 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:15.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:26:15.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.638 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:26:15.639 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.640 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.641 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.646 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:26:15.646 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.646 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:26:15.647 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.649 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.649 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.653 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:26:15.653 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.653 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:26:15.654 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 14:26:15.654 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.656 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.657 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.659 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:26:15.660 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:26:15.660 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.660 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:26:15.662 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.662 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:15.663 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.667 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-01 14:26:15.696 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:15.696 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.696 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:15.697 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.699 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:15.702 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.741 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:26:15.741 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.741 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:26:15.742 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.744 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:15.745 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.747 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:26:15.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.754 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.755 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.757 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:26:15.757 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.759 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:26:15.768 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.768 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.768 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.770 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.771 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.773 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.774 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:26:15.811 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:15.811 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.811 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:15.812 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.814 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.817 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.825 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:26:15.826 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.826 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:26:15.827 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.829 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:15.830 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.833 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:26:15.853 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.853 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.853 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.855 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.856 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.857 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.862 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 14:26:15.874 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.875 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.875 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:26:15.877 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.879 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:26:15.880 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:15.884 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:26:15.941 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:15.941 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:15.941 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:26:15.958 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:15.969 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 14:26:15.975 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:16.059 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:16.059 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:16.059 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:16.062 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:16.066 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:26:16.069 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:16.069 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:16.073 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:26:16.084 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:16.084 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:16.084 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:26:16.089 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:16.095 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:26:16.104 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:16.105 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:16.108 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:26:16.797 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:16.797 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTE3NSwiZXhwIjoxNzQzNDg1Nzc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IDd27ZXnZghP156TNDULoAGbA_DKidATQdfIGNVdTs0
2025-04-01 14:26:16.797 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:26:16.799 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:26:16.801 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:16.803 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:26:16.804 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:26:16.806 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:26:16.806 INFO  [http-nio-11040-exec-8] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:11.202 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:11.203 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:11.203 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:11.203 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:11.206 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:11.222 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 6 msec}
2025-04-01 14:27:11.223 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:45.569 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:45.570 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:45.570 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:45.570 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:45.573 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:45.583 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 6 msec}
2025-04-01 14:27:45.585 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:48.634 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:27:48.635 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:48.635 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:27:48.635 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:48.641 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:48.780 ERROR [http-nio-11040-exec-5] [com.momo.handler.GlobalExceptionHandler] - BusinessException: com.momo.common.response.ErrorResponse@7601d31b
2025-04-01 14:27:48.785 WARN  [http-nio-11040-exec-5] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.momo.exception.BusinessException]
2025-04-01 14:27:48.802 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:48.802 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:48.802 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:48.803 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:48.803 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:48.805 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:48.806 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:53.827 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:53.828 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:53.828 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:53.828 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:53.829 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:53.836 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:53.837 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:54.469 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:27:54.469 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:54.469 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:27:54.469 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:54.473 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:54.608 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:54.610 INFO  [http-nio-11040-exec-4] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NCwiZXhwIjoxNzQzNDg1ODc0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.ZFaXtlWcq-pWN8sOcVJgtSm7wAshm-j0v8vHFHWqk7E, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg4NzR9.8Ip9qPaik7JsgXTKigVdHo-eNP9DNIigl3CKFpfLPkI, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:27:54.612 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:54.614 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg4NzR9.8Ip9qPaik7JsgXTKigVdHo-eNP9DNIigl3CKFpfLPkI'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:54.617 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:54.628 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:54.628 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NCwiZXhwIjoxNzQzNDg1ODc0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.ZFaXtlWcq-pWN8sOcVJgtSm7wAshm-j0v8vHFHWqk7E
2025-04-01 14:27:54.628 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:54.630 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:54.632 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:54.633 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:54.634 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:54.635 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:54.636 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:55.016 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:27:55.016 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:55.017 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:27:55.017 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:55.018 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - refresh
2025-04-01 14:27:55.026 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODg4NzR9.8Ip9qPaik7JsgXTKigVdHo-eNP9DNIigl3CKFpfLPkI'
 {executed in 2 msec}
2025-04-01 14:27:55.029 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.032 INFO  [http-nio-11040-exec-3] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:27:55.065 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:27:55.065 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.066 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:27:55.067 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.069 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.071 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.072 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:55.076 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.076 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 3 msec}
2025-04-01 14:27:55.079 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.079 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.079 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.081 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:55.082 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.082 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:27:55.082 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.083 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.083 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.083 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.084 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.084 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:27:55.084 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.085 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.085 INFO  [http-nio-11040-exec-10] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:55.087 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:27:55.093 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.093 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.093 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.095 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.097 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:55.098 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.099 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.101 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:27:55.109 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.109 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.109 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.111 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.112 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.114 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.114 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.116 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:27:55.118 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:27:55.118 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.118 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:27:55.120 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.121 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.122 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:27:55.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.126 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:27:55.129 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 3 msec}
2025-04-01 14:27:55.129 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.132 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.134 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.135 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:27:55.135 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.135 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:27:55.136 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.136 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:27:55.136 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:55.138 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.140 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 0 msec}
2025-04-01 14:27:55.142 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:27:55.142 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.142 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:27:55.144 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.145 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.145 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.147 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:27:55.150 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.150 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.150 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.151 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.152 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:55.152 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.153 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:27:55.158 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.158 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.158 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.159 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.160 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.161 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.164 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:27:55.164 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:27:55.164 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.164 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:27:55.166 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.167 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:55.168 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.168 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:55.169 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.173 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:27:55.173 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.173 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:27:55.174 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.175 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.175 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.181 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:27:55.181 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.181 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:27:55.182 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.183 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.184 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.187 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:27:55.187 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.187 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:27:55.188 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.189 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.190 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.192 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:27:55.195 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 9 msec}
2025-04-01 14:27:55.196 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:27:55.196 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.196 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:27:55.198 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.199 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.200 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.202 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-01 14:27:55.229 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:55.229 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.229 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:55.231 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.234 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.240 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.274 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:27:55.275 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.275 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:27:55.276 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.278 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.279 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.281 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:27:55.289 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.289 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.289 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.290 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.292 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.293 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.295 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:27:55.302 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.302 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.302 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.304 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.305 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.306 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.307 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:27:55.338 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:27:55.339 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.339 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:27:55.340 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.341 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.342 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.344 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:27:55.358 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.358 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.358 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.359 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.361 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.362 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.363 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:27:55.380 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.380 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.380 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:55.382 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.383 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.385 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.387 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:27:55.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:55.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.412 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:55.413 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.415 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:55.417 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.446 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:55.446 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.446 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:55.458 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:55.461 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:55.463 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:55.999 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:55.999 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:55.999 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:56.000 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:56.002 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:56.004 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:56.005 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:56.007 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:27:56.018 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:56.019 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:56.019 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:56.021 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:56.023 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:56.025 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:56.026 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:56.028 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:27:56.689 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:56.689 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3NSwiZXhwIjoxNzQzNDg1ODc1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.RcJnhx3RtVEbpLeCRS_rhQgTR3mBx9VjdUwZ1W-m8rg
2025-04-01 14:27:56.689 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:56.691 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:56.694 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:56.695 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:56.695 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:56.698 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:56.698 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:58.889 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:27:58.889 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:58.889 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:27:58.889 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:58.894 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:59.028 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.029 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwOTAwNzl9.ykmUJdMGFW5FuMg3XLUovnE2PzFfxsKJ4oa2zD4HWw4, expireTime=604800000, revoked=false, expired=false)
2025-04-01 14:27:59.030 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.032 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwOTAwNzl9.ykmUJdMGFW5FuMg3XLUovnE2PzFfxsKJ4oa2zD4HWw4'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:59.034 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.050 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:59.050 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.050 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:59.051 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.053 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.054 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.054 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.056 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.056 INFO  [http-nio-11040-exec-6] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:59.231 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:27:59.231 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:27:59.231 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:27:59.231 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:27:59.233 INFO  [http-nio-11040-exec-10] [com.momo.api.AuthController] - refresh
2025-04-01 14:27:59.237 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwOTAwNzl9.ykmUJdMGFW5FuMg3XLUovnE2PzFfxsKJ4oa2zD4HWw4'
 {executed in 2 msec}
2025-04-01 14:27:59.239 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.245 INFO  [http-nio-11040-exec-10] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:27:59.275 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:27:59.276 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:59.276 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.276 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:27:59.277 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.277 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.278 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.278 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.279 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.279 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.279 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.279 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.280 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.281 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:27:59.282 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.282 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:27:59.282 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-01 14:27:59.282 INFO  [http-nio-11040-exec-5] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:27:59.293 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:59.293 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.293 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:59.296 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.298 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.299 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.300 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.302 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:27:59.320 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:59.320 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.320 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:27:59.321 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.323 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.323 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.324 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.326 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:27:59.332 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:27:59.332 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.332 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:27:59.334 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.335 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.336 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.341 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 1 msec}
2025-04-01 14:27:59.341 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:27:59.341 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.341 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:27:59.343 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.346 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.349 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.354 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:27:59.354 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.354 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:27:59.382 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 29 msec}
2025-04-01 14:27:59.387 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.392 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:27:59.395 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.400 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 4 msec}
2025-04-01 14:27:59.400 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:27:59.401 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.401 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:27:59.408 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.412 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.417 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.418 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.414 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:27:59.419 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.419 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:27:59.418 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:27:59.420 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.421 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.423 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:27:59.423 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.423 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:27:59.423 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.423 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.424 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.424 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.425 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:27:59.427 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:59.427 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:27:59.430 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 14:27:59.437 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.444 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.444 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:27:59.445 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.445 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.445 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:27:59.445 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.446 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.446 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.448 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.449 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:27:59.458 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:27:59.458 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.458 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:27:59.460 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.460 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:27:59.461 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.461 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:27:59.462 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.467 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 21 msec}
2025-04-01 14:27:59.468 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 19 msec}
2025-04-01 14:27:59.469 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 23 msec}
2025-04-01 14:27:59.469 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-01 14:27:59.469 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.472 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.473 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:27:59.474 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.474 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.478 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 14:27:59.496 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 15 msec}
2025-04-01 14:27:59.503 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 30 msec}
2025-04-01 14:27:59.511 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 8 msec}
2025-04-01 14:27:59.542 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:59.542 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.542 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:59.547 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.551 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:27:59.553 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.595 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:27:59.595 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.595 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:27:59.597 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.599 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:59.600 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.602 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:27:59.612 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.612 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.612 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.614 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.616 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:27:59.618 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.620 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:27:59.628 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.628 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.628 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.630 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.631 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.633 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.635 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:27:59.677 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:27:59.677 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.677 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:27:59.678 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.680 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.680 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.683 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:27:59.693 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.693 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.693 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.695 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.696 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.697 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.700 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:27:59.712 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.712 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.712 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:27:59.714 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.715 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.717 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.719 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:27:59.731 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:59.731 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.731 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:59.733 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.734 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:27:59.735 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:27:59.751 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:59.751 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTI3OSwiZXhwIjoxNzQzNDg1ODc5LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.E92xHsXNJq4UkfIIuNqpfGhePbWMXNnDFYtcw59aNjI
2025-04-01 14:27:59.751 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:27:59.752 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:27:59.753 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:27:59.754 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:20.417 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:28:20.418 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:28:20.418 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:28:20.418 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:28:20.419 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:20.423 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:20.423 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:28:27.284 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:28:27.285 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:28:27.285 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:28:27.285 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:28:27.289 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.419 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.421 INFO  [http-nio-11040-exec-3] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwOTAxMDd9.1enVcsz0HVKMLexsLIqDjfExpU82nZV_OIu4gxK0PWM, expireTime=604800000, revoked=false, expired=false)
2025-04-01 14:28:27.422 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.423 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwOTAxMDd9.1enVcsz0HVKMLexsLIqDjfExpU82nZV_OIu4gxK0PWM'
        WHERE   user_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.426 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.446 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:28:27.446 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.446 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:28:27.448 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.450 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.450 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.451 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.452 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.453 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:28:27.541 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:28:27.542 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:28:27.542 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:28:27.542 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:28:27.543 INFO  [http-nio-11040-exec-10] [com.momo.api.AuthController] - refresh
2025-04-01 14:28:27.548 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDQwOTAxMDd9.1enVcsz0HVKMLexsLIqDjfExpU82nZV_OIu4gxK0PWM'
 {executed in 2 msec}
2025-04-01 14:28:27.551 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.553 INFO  [http-nio-11040-exec-10] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:28:27.573 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:28:27.573 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:28:27.573 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.574 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:28:27.575 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.575 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.576 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.576 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.577 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.577 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.577 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.577 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.578 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.579 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:28:27.579 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.579 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 14:28:27.579 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:28:27.579 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 0 msec}
2025-04-01 14:28:27.587 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:28:27.587 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.587 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:28:27.588 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.589 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.590 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.591 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.592 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:28:27.618 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:28:27.619 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.619 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:28:27.619 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:28:27.619 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.619 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:28:27.620 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.620 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.621 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.627 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:28:27.628 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.628 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.628 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:28:27.630 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.630 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.632 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.634 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:28:27.634 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.634 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.634 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.635 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.636 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:28:27.637 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.637 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.638 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 4 msec}
2025-04-01 14:28:27.638 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 14:28:27.641 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:28:27.642 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 2 msec}
2025-04-01 14:28:27.654 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.654 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.654 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.655 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:28:27.655 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.655 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:28:27.656 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.657 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.658 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.659 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.659 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:28:27.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:28:27.659 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.659 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:28:27.659 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.660 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:28:27.661 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.661 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.661 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.662 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.662 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.662 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.663 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:28:27.663 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.663 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.664 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.664 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.664 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.664 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.667 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.667 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 14:28:27.668 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.668 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.669 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:28:27.669 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 3 msec}
2025-04-01 14:28:27.679 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 9 msec}
2025-04-01 14:28:27.679 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.679 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.679 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.682 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.698 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 15 msec}
2025-04-01 14:28:27.704 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:28:27.705 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.705 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:28:27.706 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.711 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.715 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:28:27.721 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.722 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.722 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.722 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.726 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.744 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 36 msec}
2025-04-01 14:28:27.746 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 17 msec}
2025-04-01 14:28:27.753 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.763 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 6 msec}
2025-04-01 14:28:27.771 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.771 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.771 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.775 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:28:27.775 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.775 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:28:27.775 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.775 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.775 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.776 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.776 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.776 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.778 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.778 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.778 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.780 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.782 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.784 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.787 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 5 msec}
2025-04-01 14:28:27.790 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 14:28:27.820 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:28:27.820 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.820 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:28:27.822 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.823 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.823 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:28:27.824 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.828 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.827 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.828 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.828 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.830 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.842 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 17 msec}
2025-04-01 14:28:27.846 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 15 msec}
2025-04-01 14:28:27.846 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 18 msec}
2025-04-01 14:28:27.852 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.852 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.852 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.855 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:28:27.855 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 14:28:27.908 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.908 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.908 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.912 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.915 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:28:27.917 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.920 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:28:27.930 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.930 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.930 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.932 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.934 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.936 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.938 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:28:27.944 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.944 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.944 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.945 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.947 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.948 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.950 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:28:27.955 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.955 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:28:27.955 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:28:27.957 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:28:27.959 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:28:27.960 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:28:27.962 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:33:25.621 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:25.622 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:33:25.622 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:25.625 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:25.630 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:25.632 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:25.633 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:25.636 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:33:25.643 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:25.643 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:33:25.643 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:25.644 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:25.645 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:25.646 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:25.647 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:25.648 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:33:26.330 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:33:26.330 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTMwNywiZXhwIjoxNzQzNDg1OTA3LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.mavjOO_l7sbKjrxAWwk778C1td_MYr7PryXEyklst5E
2025-04-01 14:33:26.330 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:33:26.332 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:26.334 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:26.335 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:26.336 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:26.339 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:26.339 INFO  [http-nio-11040-exec-7] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:33:28.047 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/public/login
2025-04-01 14:33:28.048 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:33:28.048 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/public/login
2025-04-01 14:33:28.048 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:33:28.052 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.185 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE
            tb_account
        SET last_login_dt=NOW(),
            user_st=0
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.186 INFO  [http-nio-11040-exec-1] [com.momo.service.JwtService] - save refresh token: JwtVO(grantType=Bearer, username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U, refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE, expireTime=3600000, revoked=false, expired=false)
2025-04-01 14:33:28.188 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  *
        FROM    tb_refresh_token
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:28.190 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. UPDATE  tb_refresh_token
        SET     refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE'
        WHERE   user_id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:28.193 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT curr_shop_id
        FROM tb_account
        WHERE id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:33:28.212 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:33:28.212 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.212 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:33:28.213 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.214 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.215 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.215 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.217 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.217 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:33:28.813 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:33:28.813 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:33:28.813 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:33:28.813 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:33:28.815 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-01 14:33:28.821 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE'
 {executed in 2 msec}
2025-04-01 14:33:28.824 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:33:28.840 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:33:28.879 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:33:28.879 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.879 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:33:28.879 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:33:28.880 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.880 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:33:28.879 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:33:28.880 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.880 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:33:28.881 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.881 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:28.881 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.881 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:28.882 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.882 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.883 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.884 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.884 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:28.884 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.884 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.886 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.886 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.887 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.887 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.886 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.889 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.889 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:33:28.890 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.891 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.892 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 3 msec}
2025-04-01 14:33:28.896 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 4 msec}
2025-04-01 14:33:28.896 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 3 msec}
2025-04-01 14:33:28.897 INFO  [http-nio-11040-exec-3] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:33:28.900 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:28.900 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.901 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:28.905 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.929 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 24 msec}
2025-04-01 14:33:28.931 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.932 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.934 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:33:28.936 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:33:28.936 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.936 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:33:28.939 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.941 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:28.941 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.941 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:33:28.942 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:33:28.942 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.942 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:33:28.943 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.943 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.947 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 14:33:28.947 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:33:28.947 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:33:28.949 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.949 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:33:28.949 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.949 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:33:28.950 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.950 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:28.951 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.951 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.956 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 5 msec}
2025-04-01 14:33:28.956 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 4 msec}
2025-04-01 14:33:28.961 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 5 msec}
2025-04-01 14:33:28.964 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 12 msec}
2025-04-01 14:33:28.968 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.972 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:33:28.972 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.972 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:33:28.972 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 3 msec}
2025-04-01 14:33:28.973 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.974 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:28.974 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:28.974 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:28.975 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:28.976 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:28.976 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:28.977 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.977 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:28.980 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:33:28.981 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:33:28.999 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:33:29.000 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.000 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:33:29.001 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.002 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.003 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:33:29.004 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.004 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.005 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.006 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:29.007 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:33:29.007 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:29.011 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:33:29.014 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.014 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:33:29.015 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.015 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:33:29.015 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.015 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.015 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:33:29.017 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.018 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.021 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 14:33:29.021 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:33:29.021 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.021 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:33:29.022 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:33:29.024 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.028 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:33:29.028 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 11 msec}
2025-04-01 14:33:29.028 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.028 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 8 msec}
2025-04-01 14:33:29.031 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.033 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 4 msec}
2025-04-01 14:33:29.036 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 2 msec}
2025-04-01 14:33:29.061 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:33:29.061 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.062 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:33:29.064 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.068 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:29.069 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.141 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:33:29.141 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.141 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:33:29.144 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.146 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:29.147 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.151 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:33:29.165 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.165 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.165 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.168 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.170 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:29.171 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.174 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:33:29.185 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.186 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.186 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.187 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.189 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:29.190 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.193 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:33:29.249 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:33:29.249 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.249 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:33:29.252 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.261 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:33:29.264 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.269 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:33:29.270 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.270 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:33:29.272 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.273 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:29.275 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.277 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:33:29.298 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.298 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.298 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.300 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.301 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:29.302 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.304 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:33:29.320 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.320 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.320 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:33:29.321 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.323 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:33:29.324 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:33:29.326 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:33:29.351 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:33:29.351 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTYwOCwiZXhwIjoxNzQzNDg2MjA4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.IMxEAAwshAopp-NuwVnEjq64G6zRs0hry6vY3n-Z17U
2025-04-01 14:33:29.351 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:33:29.352 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:33:29.354 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:33:29.355 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.204 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:34:38.209 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:34:38.209 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:34:38.209 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:34:38.213 INFO  [http-nio-11040-exec-7] [com.momo.api.AuthController] - refresh
2025-04-01 14:34:38.221 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE'
 {executed in 2 msec}
2025-04-01 14:34:38.222 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:34:38.224 INFO  [http-nio-11040-exec-7] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:34:38.251 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:34:38.251 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:34:38.251 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.251 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:34:38.251 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.251 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:34:38.252 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.252 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.277 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 24 msec}
2025-04-01 14:34:38.277 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 25 msec}
2025-04-01 14:34:38.284 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.285 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.286 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.286 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.287 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:34:38.288 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-01 14:34:38.288 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.288 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.290 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.290 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.290 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.291 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.292 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.292 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:34:38.293 INFO  [http-nio-11040-exec-2] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:34:38.299 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:34:38.299 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.299 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:34:38.301 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.304 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.305 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.306 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.308 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:34:38.317 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:34:38.317 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.317 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:34:38.318 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.319 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.320 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.320 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.321 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:34:38.326 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:34:38.326 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.326 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:34:38.327 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.329 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:34:38.330 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.333 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:34:38.333 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.333 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:34:38.334 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 1 msec}
2025-04-01 14:34:38.334 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.335 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.336 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.338 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:34:38.342 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:34:38.342 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.342 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:34:38.343 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.344 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.345 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.346 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 0 msec}
2025-04-01 14:34:38.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:34:38.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.351 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:34:38.352 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.353 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.353 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.355 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:34:38.357 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.358 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.358 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.359 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.360 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:34:38.360 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.361 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:34:38.365 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.365 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.365 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.366 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.367 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:34:38.368 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.371 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:34:38.374 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:34:38.375 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.375 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:34:38.376 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.377 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.378 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.379 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:34:38.380 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.381 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:34:38.381 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.381 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:34:38.383 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.384 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.386 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.389 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:34:38.389 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.389 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:34:38.390 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.391 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.392 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.396 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 3 msec}
2025-04-01 14:34:38.396 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:34:38.396 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.396 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:34:38.398 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.399 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.400 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.402 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 14:34:38.404 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:34:38.404 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.404 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:34:38.405 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.406 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.408 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.411 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-01 14:34:38.477 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:34:38.479 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.479 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:34:38.482 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.484 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:34:38.485 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.486 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:34:38.487 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.487 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:34:38.489 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.492 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.493 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.497 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 2 msec}
2025-04-01 14:34:38.502 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.502 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.502 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.504 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.506 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:34:38.508 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.522 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 13 msec}
2025-04-01 14:34:38.535 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.535 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.535 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.538 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.540 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.546 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.553 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 4 msec}
2025-04-01 14:34:38.558 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:34:38.558 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.558 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:34:38.560 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.562 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.562 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.564 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:34:38.578 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.578 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.578 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.580 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.581 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.583 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.585 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:34:38.604 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.604 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.604 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:34:38.606 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.607 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.608 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.609 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:34:38.647 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:34:38.648 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.648 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:34:38.650 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.652 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:34:38.654 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:34:38.675 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:34:38.675 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NTY3OCwiZXhwIjoxNzQzNDg2Mjc4LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.8BbfzSQ6ZIflegdiZ_HiQrPl2VYTdmh3yOnPRc-eMKs
2025-04-01 14:34:38.675 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:34:38.677 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:34:38.679 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 14:34:38.683 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.594 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:47:34.595 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 14:47:34.596 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 14:47:34.596 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 14:47:34.601 INFO  [http-nio-11040-exec-9] [com.momo.api.AuthController] - refresh
2025-04-01 14:47:34.610 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE'
 {executed in 2 msec}
2025-04-01 14:47:34.612 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.614 INFO  [http-nio-11040-exec-9] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 14:47:34.644 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:47:34.644 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.644 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 14:47:34.644 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 14:47:34.644 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.644 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 14:47:34.647 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.647 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.648 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:47:34.648 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.648 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:47:34.649 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.649 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.650 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.652 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.652 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.653 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.653 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.653 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 14:47:34.655 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:47:34.655 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-01 14:47:34.655 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.656 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.657 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 14:47:34.657 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.657 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 14:47:34.658 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:47:34.659 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.694 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 35 msec}
2025-04-01 14:47:34.695 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:47:34.695 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.695 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:47:34.697 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.698 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.699 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.700 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.700 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 14:47:34.701 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.703 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.704 INFO  [http-nio-11040-exec-5] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.707 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 14:47:34.724 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:47:34.724 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.724 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 14:47:34.725 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.727 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.728 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.729 INFO  [http-nio-11040-exec-2] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.730 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 14:47:34.733 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:47:34.733 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.733 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 14:47:34.734 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.736 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.737 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.740 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:47:34.740 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.740 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 14:47:34.741 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 14:47:34.741 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.743 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.745 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.748 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 14:47:34.748 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 14:47:34.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.749 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 14:47:34.751 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.752 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.754 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.756 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 14:47:34.759 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:47:34.759 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.759 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:47:34.760 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.761 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.762 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.764 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 14:47:34.765 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.765 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.765 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.766 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.767 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.768 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.771 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:47:34.775 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.775 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.775 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.777 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.779 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.781 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.781 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 14:47:34.781 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.781 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 14:47:34.782 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:47:34.782 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.783 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.784 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.784 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 14:47:34.785 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.789 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:47:34.789 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.789 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 14:47:34.790 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.791 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.791 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.797 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:47:34.798 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.798 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 14:47:34.799 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.800 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.802 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.805 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:47:34.805 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.805 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 14:47:34.807 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.808 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 14:47:34.808 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 3 msec}
2025-04-01 14:47:34.808 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.813 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 2 msec}
2025-04-01 14:47:34.813 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:47:34.814 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.814 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 14:47:34.819 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.825 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 6 msec}
2025-04-01 14:47:34.879 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.893 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 8 msec}
2025-04-01 14:47:34.908 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:47:34.910 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.910 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:47:34.908 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.911 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.911 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.911 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:47:34.911 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.911 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:47:34.912 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.912 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.912 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.913 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.913 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.913 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.914 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.914 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.914 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.915 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:47:34.915 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 14:47:34.920 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.920 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.920 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.922 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.923 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.924 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.925 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:47:34.969 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 14:47:34.969 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.969 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 14:47:34.970 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.972 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.973 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.974 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 0 msec}
2025-04-01 14:47:34.990 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.991 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:34.991 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:34.992 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:34.993 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:34.994 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:34.996 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:47:35.016 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:35.016 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:35.016 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 14:47:35.017 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:35.019 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:35.020 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:35.021 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 14:47:35.044 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:47:35.045 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:35.045 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:47:35.049 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:35.058 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 9 msec}
2025-04-01 14:47:35.061 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 14:47:35.080 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:47:35.080 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NjQ1NCwiZXhwIjoxNzQzNDg3MDU0LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.YnmXQiaCDZ91Bm-29LSsKfqNQAxdPvEYsn83aQr0NnU
2025-04-01 14:47:35.080 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 14:47:35.082 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 14:47:35.084 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 14:47:35.086 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:03:34.752 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-04-01 15:04:45.754 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 15:04:45.755 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 15:04:45.755 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 15:04:45.755 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 15:04:45.761 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - refresh
2025-04-01 15:04:45.770 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE'
 {executed in 2 msec}
2025-04-01 15:04:45.771 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.773 INFO  [http-nio-11040-exec-6] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 15:04:45.832 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 15:04:45.832 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.832 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 15:04:45.832 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 15:04:45.833 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.833 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 15:04:45.834 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.834 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.838 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:04:45.838 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.838 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:04:45.839 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 15:04:45.839 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 15:04:45.839 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.839 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 15:04:45.840 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:04:45.840 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.840 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.841 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.841 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.841 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.841 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:04:45.841 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:04:45.842 INFO  [http-nio-11040-exec-8] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.842 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.842 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.842 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.843 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.843 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 15:04:45.843 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-01 15:04:45.843 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 15:04:45.844 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-01 15:04:45.844 INFO  [http-nio-11040-exec-1] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 15:04:45.851 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:04:45.851 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.851 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:04:45.852 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.855 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.858 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.859 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.862 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 2 msec}
2025-04-01 15:04:45.875 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:04:45.875 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.875 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:04:45.877 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.878 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.880 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.881 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.882 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 15:04:45.885 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 15:04:45.885 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.885 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 15:04:45.886 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.887 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.889 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.893 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 15:04:45.893 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.893 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 15:04:45.894 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 2 msec}
2025-04-01 15:04:45.894 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.895 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.897 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.900 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 1 msec}
2025-04-01 15:04:45.901 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 15:04:45.901 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.901 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 15:04:45.904 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.905 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.906 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.907 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 15:04:45.920 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:04:45.920 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.920 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:04:45.920 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:45.920 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.920 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:45.922 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.922 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.927 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 15:04:45.927 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 15:04:45.928 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.928 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.931 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:04:45.931 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 15:04:45.943 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 15:04:45.943 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.943 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 15:04:45.944 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:45.945 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 15:04:45.945 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.945 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.945 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:45.945 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 15:04:45.945 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.947 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.947 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.948 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.949 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.949 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.949 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.950 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:04:45.950 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.950 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.952 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:04:45.952 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:04:45.957 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 15:04:45.957 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.957 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 15:04:45.959 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.960 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.961 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 15:04:45.961 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.961 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 15:04:45.962 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.962 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.964 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:04:45.964 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:45.966 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 3 msec}
2025-04-01 15:04:45.966 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 1 msec}
2025-04-01 15:04:45.971 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 15:04:45.972 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:45.972 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 15:04:45.974 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:45.975 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:45.976 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.233 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 256 msec}
2025-04-01 15:04:46.290 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:04:46.290 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.291 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:04:46.291 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:04:46.291 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.290 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.291 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:04:46.291 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.291 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.296 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.296 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.296 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.304 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 15:04:46.306 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 8 msec}
2025-04-01 15:04:46.308 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 11 msec}
2025-04-01 15:04:46.309 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.309 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.311 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.312 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 15:04:46.323 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:04:46.323 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.323 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:04:46.324 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 9 msec}
2025-04-01 15:04:46.329 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.333 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.333 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.333 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.333 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:04:46.335 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.336 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.336 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:46.338 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.339 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 15:04:46.342 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 15:04:46.370 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.370 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.370 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.374 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.375 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:04:46.375 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.375 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:04:46.376 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:46.377 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.378 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.380 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 15:04:46.382 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 2 msec}
2025-04-01 15:04:46.382 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.386 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 3 msec}
2025-04-01 15:04:46.399 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.399 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.399 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.400 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.402 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:04:46.403 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.404 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:04:46.409 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.409 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.409 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.410 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.412 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:04:46.413 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.415 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:04:46.425 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.425 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.425 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:04:46.426 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.427 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:46.428 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.430 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:04:46.455 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:04:46.455 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.455 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:04:46.456 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.460 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 4 msec}
2025-04-01 15:04:46.461 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:04:46.482 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:04:46.482 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4NzQ4NSwiZXhwIjoxNzQzNDg4MDg1LCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.Nr_r0A8AoxalxFXUJWnlp14qrtpE8ESEOapFbZosw3U
2025-04-01 15:04:46.482 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:04:46.484 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:04:46.486 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:04:46.489 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.802 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/auth/refresh
2025-04-01 15:24:31.803 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 15:24:31.804 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/auth/refresh
2025-04-01 15:24:31.804 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 15:24:31.808 INFO  [http-nio-11040-exec-5] [com.momo.api.AuthController] - refresh
2025-04-01 15:24:31.819 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT  *
        FROM    tb_refresh_token
        WHERE   refresh_token='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE3NDM0ODkyMDh9.IO1scdDyJHWdGeWVHm8PaTgkzxkBh5oPs-XLhF1FrPE'
 {executed in 2 msec}
2025-04-01 15:24:31.820 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.823 INFO  [http-nio-11040-exec-5] [com.momo.api.AuthController] - jwt: JwtVO(grantType=Bearer , username=km1104rs, accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54, refreshToken=null, expireTime=null, revoked=false, expired=false)
2025-04-01 15:24:31.868 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/read/all
2025-04-01 15:24:31.868 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/all
2025-04-01 15:24:31.869 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.869 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/read/all
2025-04-01 15:24:31.869 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.869 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/all
2025-04-01 15:24:31.873 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.873 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.874 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:24:31.875 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.875 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:24:31.875 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 15:24:31.875 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.875 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 15:24:31.876 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:24:31.876 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:24:31.876 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.876 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.877 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.877 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.877 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.877 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:24:31.877 INFO  [http-nio-11040-exec-6] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.877 INFO  [http-nio-11040-exec-10] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.878 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.878 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.878 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.878 INFO  [http-nio-11040-exec-9] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.879 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. UPDATE tb_notification
        SET read_st = TRUE
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 15:24:31.879 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT content,
               notif_id,
               read_st,
               notif_tp as type,
               IF(date(send_dt) = current_date,true,false) as today,
            (
               TIMESTAMPDIFF(MINUTE, send_dt, current_timestamp)
            ) as ago
        FROM tb_notification
        WHERE receiver_id='km1104rs'
        ORDER BY send_dt DESC
 {executed in 1 msec}
2025-04-01 15:24:31.880 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 0 msec}
2025-04-01 15:24:31.880 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 0 msec}
2025-04-01 15:24:31.880 INFO  [http-nio-11040-exec-9] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 15:24:31.887 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:24:31.887 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.888 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:24:31.889 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.891 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.894 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.895 INFO  [http-nio-11040-exec-7] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.910 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 13 msec}
2025-04-01 15:24:31.917 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 15:24:31.920 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.920 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:24:31.920 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.920 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/notif/count/unread
2025-04-01 15:24:31.920 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/graph/ct/d
2025-04-01 15:24:31.926 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.929 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.936 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 15:24:31.936 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 7 msec}
2025-04-01 15:24:31.938 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.938 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-3] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/pimg
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/pimg
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.939 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/change/ct
2025-04-01 15:24:31.940 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT count(*)
        FROM tb_notification
        WHERE receiver_id = 'km1104rs'
          AND read_st = FALSE
 {executed in 1 msec}
2025-04-01 15:24:31.941 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.941 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.942 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.943 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:24:31.944 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:24:31.944 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.944 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:24:31.947 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. set @limit_cond := (
               case 'd'
                   when 'h' then '2000-01-24'
                   when 'd' then '2025-04-01'
                   when 'w' then '2025-04-01'
                   when 'm' then date_sub('2025-04-01', interval 1 month)
               end
        );

        with recursive org_date_table as (
            select (
                       case
                           when 'd' = 'h' then '2000-01-01'
                           when 'd' != 'h' then '2025-01-01'
                           end
                       ) as it
            union all
            select (
                       case 'd'
                           when 'h' then date_add(it, interval 1 day)
                           when 'd' then date_add(it, interval 1 day)
                           when 'w' then date_add(it, interval 1 week)
                           when 'm' then date_add(it, interval 1 month)
                           end
                       ) as it
            from org_date_table
            where it < @limit_cond
        ), date_table as (
            select
                year(it) as _year,
                (
                    case 'd'
                        when 'h' then day(it)
                        when 'd' then it
                        when 'w' then week(it)
                        when 'm' then month(it)
                        end
                    ) as dt
            from org_date_table
        ),  date_sale as (
            select year(actv_dt) _year,
                   month(actv_dt) as m,
                   week(actv_dt) as w,
                   actv_dt as d,
                   hour(regi_dt) as h,
                   tb_sale.*
            from tb_sale
            where shop_id=2 and

                actv_dt between '2025-01-01' and (
                    case
                        when 'd' = 'h' then '2025-01-01'
                        when 'd' != 'h' then '2025-04-01'
                        end
                    )
        ), final as (
            select count(device_id) as cnt
            from date_table dd
                     left outer join date_sale ds on dd._year=ds._year and
                                                     d = dt
            group by dd._year, dd.dt
        )

        select
            (
                select json_arrayagg(cnt)
                from final
            ) as value,
            (
                select json_arrayagg(date_format(it, '%Y-%m-%d'))
                from org_date_table
            ) as date
 {executed in 5 msec}
2025-04-01 15:24:31.947 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.947 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.947 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.948 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.948 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pimg_id as id,
               pimg_text as text,
               pimg_path as file
        from tb_post_img
        where shop_id=2
 {executed in 1 msec}
2025-04-01 15:24:31.952 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. with tb as (
            SELECT
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                          device_id != 0 and
                          actv_dt BETWEEN '2025-03-01' AND '2025-03-01'
                    ) as prev,
                (
                    SELECT count(*)
                    FROM tb_sale
                    WHERE shop_id=2 and
                        device_id != 0 and
                        actv_dt BETWEEN '2025-04-01' AND '2025-04-01'
                ) as curr
            FROM DUAL
        )

        SELECT tb.curr - tb.prev
        FROM tb
 {executed in 3 msec}
2025-04-01 15:24:31.953 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.954 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:31.954 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.954 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:31.956 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.956 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 15:24:31.957 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.974 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.974 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/shop/all
2025-04-01 15:24:31.975 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.975 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/shop/all
2025-04-01 15:24:31.976 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.978 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:24:31.978 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:24:31.979 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.979 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 15:24:31.979 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.979 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pfp
2025-04-01 15:24:31.979 INFO  [http-nio-11040-exec-1] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:24:31.980 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.981 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.981 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:24:31.981 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:31.982 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.982 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:31.986 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.986 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.987 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/summary
2025-04-01 15:24:31.987 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.987 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/summary
2025-04-01 15:24:31.988 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:31.988 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.988 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:24:31.989 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.990 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:31.992 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 3 msec}
2025-04-01 15:24:31.995 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/ratio
2025-04-01 15:24:31.995 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:31.995 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/ratio
2025-04-01 15:24:31.997 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:31.998 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.003 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.004 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/sale/wip
2025-04-01 15:24:32.004 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.004 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/sale/wip
2025-04-01 15:24:32.005 INFO  [http-nio-11040-exec-4] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.005 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SET @total_sale_count := (
            SELECT count(*)
            FROM tb_sale
            WHERE shop_id=2 and
                device_id is not null and
                actv_dt like '2025-04%'
        );

        with tb as (
            SELECT count(*) as curr
            FROM tb_sale_card sc
                     LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2 and
                actv_dt like '2025-04%'
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                sd_id is not null
            UNION ALL
            SELECT count(*) as curr
            FROM tb_sale
            WHERE shop_id= 2 and
                actv_dt like '2025-04%' and
                exsvc_id is not null
        )

        SELECT
            curr as value,
            @total_sale_count as total,
            (
                CASE
                    WHEN @total_sale_count = 0 THEN 0
                    WHEN @total_sale_count != 0 THEN TRUNCATE(((curr/@total_sale_count))*100, 1)
                    END
                ) as per
        FROM tb
 {executed in 0 msec}
2025-04-01 15:24:32.005 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. with prevMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-03%'
        ), currMonth as (
            SELECT *
            FROM tb_sale
            WHERE shop_id=2 and
                actv_dt like '2025-04%'
        ) , tb as (
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE device_id is not null
                    ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE internet_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE internet_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(count(*), 0)
                    FROM prevMonth
                    WHERE tv_plan is not null
                ) as prev,
                (
                    SELECT IFNULL(count(*), 0)
                    FROM currMonth
                    WHERE tv_plan is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(SUM(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
            UNION ALL
            SELECT
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM prevMonth
                    where device_id is not null
                ) as prev,
                (
                    SELECT IFNULL(AVG(total_cms),0)
                    FROM currMonth
                    where device_id is not null
                ) as curr
            from dual
        )

        SELECT FLOOR(curr) as value,
               (
                   CASE
                       WHEN curr = 0 THEN 0
                       WHEN prev = 0 THEN 100
                       WHEN prev != 0 THEN TRUNCATE(((curr/prev)-1)*100, 1)
                   END
                   ) as per
        FROM tb
 {executed in 13 msec}
2025-04-01 15:24:32.005 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 0 msec}
2025-04-01 15:24:32.007 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.010 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. with table_ud as (
            SELECT ud_st
            FROM tb_sale_used_device sud
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sud.sale_id
            WHERE sud.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_card as (
            SELECT card_st
            FROM tb_sale_card sc
            LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%'
        ), table_comb as (
            SELECT comb_st
            FROM tb_sale
            WHERE shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_sup as (
            SELECT sup_st
            FROM tb_sale_support sc LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), table_pm as (
            SELECT checked
            FROM tb_promise sc
                LEFT OUTER JOIN tb_sale sl on sl.sale_id=sc.sale_id
            WHERE sc.shop_id=2
--               and
--                 actv_dt like '%%'
        ), rst as (
            SELECT
                (
                    SELECT count(*)
                    FROM table_ud
                    WHERE ud_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_card
                    WHERE card_st!=2
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_comb
                    WHERE comb_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_sup
                    WHERE sup_st!=1
                )
            UNION ALL
            SELECT
                (
                    SELECT count(*)
                    FROM table_pm
                    WHERE checked!=1
                )
        )

        SELECT *
        FROM rst
 {executed in 1 msec}
2025-04-01 15:24:32.054 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:24:32.057 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.057 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:24:32.076 INFO  [http-nio-11040-exec-8] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.080 DEBUG [http-nio-11040-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:24:32.082 INFO  [http-nio-11040-exec-8] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.112 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:24:32.112 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.112 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:24:32.115 INFO  [http-nio-11040-exec-2] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.118 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 3 msec}
2025-04-01 15:24:32.119 INFO  [http-nio-11040-exec-2] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.126 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.126 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.126 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.128 INFO  [http-nio-11040-exec-5] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.129 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.130 INFO  [http-nio-11040-exec-5] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.131 DEBUG [http-nio-11040-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:24:32.134 DEBUG [http-nio-11040-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 14 msec}
2025-04-01 15:24:32.138 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.138 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.138 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.139 INFO  [http-nio-11040-exec-10] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.141 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.142 INFO  [http-nio-11040-exec-10] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.144 DEBUG [http-nio-11040-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
14. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:24:32.175 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo
2025-04-01 15:24:32.176 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.176 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo
2025-04-01 15:24:32.179 INFO  [http-nio-11040-exec-1] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.182 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 2 msec}
2025-04-01 15:24:32.183 INFO  [http-nio-11040-exec-1] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.185 DEBUG [http-nio-11040-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT SUBSTR(todo_dt, 9, 2)
        FROM tb_todo
        WHERE shop_id= 2  and
            todo_dt like '%2025-04%'
 {executed in 1 msec}
2025-04-01 15:24:32.190 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.191 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.191 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.192 INFO  [http-nio-11040-exec-9] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.193 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.194 INFO  [http-nio-11040-exec-9] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.196 DEBUG [http-nio-11040-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 1 msec}
2025-04-01 15:24:32.205 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.205 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.205 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/todo/detail
2025-04-01 15:24:32.206 INFO  [http-nio-11040-exec-6] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.207 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.208 INFO  [http-nio-11040-exec-6] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.209 DEBUG [http-nio-11040-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* TodoMapper.xml : getTodoDetail */
                todo_id,
                color,
                checked,
               content
        FROM tb_todo td
        WHERE td.shop_id=2 and
            todo_dt='2025-04-01'
 {executed in 0 msec}
2025-04-01 15:24:32.234 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:24:32.234 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.234 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:24:32.235 INFO  [http-nio-11040-exec-7] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.236 DEBUG [http-nio-11040-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
12. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.237 INFO  [http-nio-11040-exec-7] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:24:32.248 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:24:32.248 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - access token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrbTExMDRycyIsImlhdCI6MTc0MzQ4ODY3MSwiZXhwIjoxNzQzNDg5MjcxLCJhdXRob3JpdGllcyI6IlJPTEVfU1RGLEFQUFJPVkUifQ.DHmJOZCNkjuDykAcWW-PFHArynbPq2Zw_uLjB-aPV54
2025-04-01 15:24:32.248 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/img/download/pimg
2025-04-01 15:24:32.249 INFO  [http-nio-11040-exec-3] [com.momo.provider.JwtProvider] - get authentication username : km1104rs
2025-04-01 15:24:32.251 DEBUG [http-nio-11040-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ac.id,
               ac.pwd,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where ac.curr_shop_id = sf.shop_id and
                         ac.id = sf.staff_id
                   ) as role
        from tb_account ac
        where id='km1104rs'
 {executed in 1 msec}
2025-04-01 15:24:32.251 INFO  [http-nio-11040-exec-3] [com.momo.filter.JwtAuthorizationFilter] - Security Context에 'km1104rs' 인증 정보를 저장했습니다
2025-04-01 15:33:34.781 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2025-04-01 15:34:03.455 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - security filter: http://localhost:11040/api/v1/user/info
2025-04-01 15:34:03.455 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - access token: null
2025-04-01 15:34:03.455 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - from url: http://localhost:11040/api/v1/user/info
2025-04-01 15:34:03.455 INFO  [http-nio-11040-exec-4] [com.momo.filter.JwtAuthorizationFilter] - 유효한 JWT 토큰이 없습니다
2025-04-01 15:34:03.457 INFO  [http-nio-11040-exec-4] [c.momo.common.util.SecurityContextUtil] - principal: UserDetailsImpl(username=km1104rs, password=$2a$10$uXShhwl6ULOkbJe477uDWOfdiUUcu6lOSF/Dhj9xP3U1nUn/gXkc6, authorities=[ROLE_STF, APPROVE])
2025-04-01 15:34:03.461 DEBUG [http-nio-11040-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT ac.id,
               ac.name,
               ac.tel,
               ac.nickname,
               ac.pfp,
               ac.curr_shop_id,
               (
                   select IFNULL(sf.role, -1)
                   from tb_staff sf
                   where sf.shop_id = ac.curr_shop_id and
                         sf.staff_id = ac.id
                   ) as role,
               sh.shop_nm,
               sh.shop_addr,
               sh.provider,
               (
                   IFNULL((
                       select sf2.approval_st
                       from tb_staff sf2
                       where sf2.shop_id=ac.curr_shop_id and
                           sf2.staff_id=ac.id
                       ), -1)
                ) as approval_st,
                ac.corp_nm,
                ac.br_no
        FROM tb_account ac
        LEFT OUTER JOIN tb_shop sh on sh.shop_id=ac.curr_shop_id
        WHERE id = 'km1104rs'
 {executed in 2 msec}
2025-04-01 15:34:03.462 INFO  [http-nio-11040-exec-4] [com.momo.api.UserController] - User: {role=1, approval_st=1, shop_addr=충청남도 천안시 병천면 충절로 1600 한국기술교육대학교 다산정보관 102, br_no=5218702490, provider=2, name=박희찬, nickname=대표, corp_nm=123, tel=010-4524-0636, id=km1104rs, pfp=1921fc01-e573-4243-9365-6b905389f4fc.png, curr_shop_id=2, shop_nm=한기대점 }
2025-04-01 15:35:35.089 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2025-04-01 15:35:35.090 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@40bd8cc]]
2025-04-01 15:35:35.090 INFO  [SpringApplicationShutdownHook] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2025-04-01 15:35:35.090 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 15:35:35.104 INFO  [SpringApplicationShutdownHook] [o.s.s.quartz.SchedulerFactoryBean] - Shutting down Quartz Scheduler
2025-04-01 15:35:35.104 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2025-04-01 15:35:35.104 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2025-04-01 15:35:35.104 INFO  [SpringApplicationShutdownHook] [org.quartz.core.QuartzScheduler] - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
