import React, { useState, useMemo, useLayoutEffect, useRef } from 'react';
import styles from '../../css/timeline.module.css';
import {cm} from "../utils/cm";

const charTime    = 0.02;
const charsPerSec = 1 / charTime;

const labelColorMap = [
    ['vad___', 'gray'],
    ['infer_', 'blue'],
    ['s_wait', 'green'],
    ['llama_', 'red'],
    ['m_wait', 'pink'],
    ['motion', 'black'],
];

const SAMPLE = ".............................................................................||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.........................||||||||||||||||||||||||||...........................................................................|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.......................................................................................................................................................||||||||||||||||||||||||..................................................|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..........................|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||................\n" +
    ".............................................................................|........................||||||||||||||||||||||...||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..||||||||||||||||||||||||||||||||||||||||||..........|||||||||||||||||||||||||||||||||||||||||||||...|||||||||||||||||||||||||||||||||||||||||||||.....|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..............|||||||||||||||||||||||||||||||||||||||||||||||||||||.......................||||||||||||||||||||||||||||||||||||||||||||||||..||||||||||||||||||||||||||||||||||||||||||||||||||||||||..................||||||||||||||||||||||||||||||||||||||||||||||||||||||.....................|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||........|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.............||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||...............|||||||||||||||||||||||||||||||||||||||||||||||..|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||....|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.................................................||||||||||||||||||||||||||||||||||||.............||||||||||||||||||||||||||||||||||||||||||||||||||||.......................||||||||||||||||||||||||||||||||||||||||||||||.....||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..|||||||||||||||||||||||||||||||||||||||||\n" +
    ".......................................................................................................................................................................................................>||||||||||||||||||||||||||||||||||.........>|||||||||||||||||||||||||||||||||||||||||||...........>|||||||||||||||||||||||||||||||||||||||||||||||>||||.................................................................................................................................................................................................................................................................>|||||||||||||..........................................................>||||||||||||.........................................................................................................................................................................................................................................................................................>||||||||||||||||||||||||||||||||||||....................................>||||...............................................................................................................................................................................................................................................................................................................................................................................................................................\n" +
    "............................................................................................................................>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||||||||||||||.>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||....>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||....>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||.>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||..>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||......>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>||||||||||||||||||||||||||||||||||||||||||\n" +
||||||||.................................................................................................................................................................................................................................................................................................................................................................>|||||||||||||||||||...........................................................................................................................>|||||||||||||||||||..............................................................................................................................................................................................................................................................................>|||||||||||||||||||..........................................................................................................\n" +
    "...........................................................................................................................................................................................................................................................................................................................................................................................................................>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.....................................................................................................................................................>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||......................................>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||........>|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||............................................>||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||................................................\n" +
    "<CRLF>124| 변비 안 걸리고 똥이.|Output: The speaker, feeling sarcastic and humorous, is making a joke about bowel movements.|[]||0||0\n" +
    "199| -변비 안 걸리고 똥만 잘 써도|Output: The speaker, feeling sarcastic and annoyed, is making a humorous comment.|[\"chan: 변비 안 걸리고 똥이.\"]||0||0\n" +
    "243| -변비 안 걸리고 똥만 잘 싸도 얼마나 행복하고 그게 행복?|Output: The speaker, feeling relieved and content, is expressing gratitude for a simple yet significant happiness.|[\"chan: 변비 안 걸리고 똥이.\",\"chan: -변비 안 걸리고 똥만 잘 써도\"]||0||0\n" +
    "298| -꼭만 잘 써도 얼마나 행복하고 그게 행복인데 진짜.||[]||0||0\n" +
    "346| -맞아 행복하고 그게 행복인데 진짜|Output: The speaker, feeling content and satisfied, is affirming their happiness.|[\"chan: 변비 안 걸리고 똥이.\",\"chan: -변비 안 걸리고 똥만 잘 써도\",\"chan: -변비 안 걸리고 똥만 잘 싸도 얼마나 행복하고 그게 행복?\"]|Sad_S|0.801391068129195|Pointing|0.897056267785833\n" +
    "412| -그러니까. -잠만 잘 자도.|Output: The speaker, feeling content and relaxed, is expressing satisfaction with their current situation.|[\"chan: 변비 안 걸리고 똥이.\",\"chan: -변비 안 걸리고 똥만 잘 써도\",\"chan: -변비 안 걸리고 똥만 잘 싸도 얼마나 행복하고 그게 행복?\",\"chan: -맞아 행복하고 그게 행복인데 진짜\"]||0||0\n" +
    "479| -그러면 우리가 그런 걸 얘기해야겠다.|Output: The speaker, feeling relieved and content, is suggesting a topic of conversation.|[\"chan: 변비 안 걸리고 똥이.\",\"chan: -변비 안 걸리고 똥만 잘 써도\",\"chan: -변비 안 걸리고 똥만 잘 싸도 얼마나 행복하고 그게 행복?\",\"chan: -맞아 행복하고 그게 행복인데 진짜\",\"chan: -그러니까. -잠만 잘 자도.\"]|Smile_S|0.847263625123531|OkaySign|0.920023272814658\n" +
    "550| 우리가 그런 걸 얘기해야겠다. 우리도 그런 때가 있었잖아.|Output: The speaker, feeling nostalgic and sympathetic, is sharing a personal experience.|[\"chan: -변비 안 걸리고 똥만 잘 써도\",\"chan: -변비 안 걸리고 똥만 잘 싸도 얼마나 행복하고 그게 행복?\",\"chan: -맞아 행복하고 그게 행복인데 진짜\",\"chan: -그러니까. -잠만 잘 자도.\",\"chan: -그러면 우리가 그런 걸 얘기해야겠다.\"]||0||0\n" +
    "608| 우리도 그런 때가 있었잖아.|Output: The speaker, feeling nostalgic and content, is reminiscing about past experiences.|[\"chan: -변비 안 걸리고 똥만 잘 싸도 얼마나 행복하고 그게 행복?\",\"chan: -맞아 행복하고 그게 행복인데 진짜\",\"chan: -그러니까. -잠만 잘 자도.\",\"chan: -그러면 우리가 그런 걸 얘기해야겠다.\",\"chan: 우리가 그런 걸 얘기해야겠다. 우리도 그런 때가 있었잖아.\"]||0||0\n" +
    "680| 약간 외모 상병이라|Output: The speaker, feeling slightly anxious, is sharing a personal experience about health issues.|[\"chan: -맞아 행복하고 그게 행복인데 진짜\",\"chan: -그러니까. -잠만 잘 자도.\",\"chan: -그러면 우리가 그런 걸 얘기해야겠다.\",\"chan: 우리가 그런 걸 얘기해야겠다. 우리도 그런 때가 있었잖아.\",\"chan: 우리도 그런 때가 있었잖아.\"]||0||0\n" +
    "768| 외모 정병이라면 내 외모 특정|Output: The speaker, feeling sarcastic, is making a humorous comment.|[\"chan: -그러니까. -잠만 잘 자도.\",\"chan: -그러면 우리가 그런 걸 얘기해야겠다.\",\"chan: 우리가 그런 걸 얘기해야겠다. 우리도 그런 때가 있었잖아.\",\"chan: 우리도 그런 때가 있었잖아.\",\"chan: 약간 외모 상병이라\"]|Sad_S|0.764396693112168|Hansim|0.886656466367327\n" +
    "839| 내 외모 특정 부분이 마음에 안 들어서|Output: The speaker, feeling self-conscious, is sharing a personal concern.|[\"chan: -그러면 우리가 그런 걸 얘기해야겠다.\",\"chan: 우리가 그런 걸 얘기해야겠다. 우리도 그런 때가 있었잖아.\",\"chan: 우리도 그런 때가 있었잖아.\",\"chan: 약간 외모 상병이라\",\"chan: 외모 정병이라면 내 외모 특정\"]|Sad_S|0.854940586569085|Clapping|0.922512720743463\n" +
    "912| -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.|Output: The speaker, feeling self-conscious and slightly annoyed, is sharing a personal experience.|[\"chan: 우리가 그런 걸 얘기해야겠다. 우리도 그런 때가 있었잖아.\",\"chan: 우리도 그런 때가 있었잖아.\",\"chan: 약간 외모 상병이라\",\"chan: 외모 정병이라면 내 외모 특정\",\"chan: 내 외모 특정 부분이 마음에 안 들어서\"]|Angry_S|0.827732669869071|Angry_small|0.889827989873672\n" +
    "974| 그런 느낌인건가?|Output: The speaker, feeling slightly annoyed, is indirectly expressing dissatisfaction.|[\"chan: 약간 외모 상병이라\",\"chan: 외모 정병이라면 내 외모 특정\",\"chan: 내 외모 특정 부분이 마음에 안 들어서\",\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\",\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\"]|Angry_S|0.817753369672494|Angry_small|0.892836835029448\n" +
    "1047| -그러니까 약간 컴플렉스에 접착하는 것 같은데? -중앙부|Output: The speaker, feeling self-conscious and slightly anxious, is revealing their inner thoughts.|[\"chan: 외모 정병이라면 내 외모 특정\",\"chan: 내 외모 특정 부분이 마음에 안 들어서\",\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\",\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\",\"chan: 그런 느낌인건가?\"]|Angry_S|0.82371566012033|Angry_small|0.899857948560202\n" +
    "1128| 약간 콤플렉스에 집착하는 것처럼|Output: The speaker, feeling introspective and slightly anxious, is self-reflectively discussing their complex.|[\"chan: 내 외모 특정 부분이 마음에 안 들어서\",\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\",\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\",\"chan: 그런 느낌인건가?\",\"chan: -그러니까 약간 컴플렉스에 접착하는 것 같은데? -중앙부\"]||0||0\n" +
    "1213| 근데 저 궁금한 거 있는데|Output: The speaker, feeling curious, is asking a question.|[\"chan: -그러니까 그러는 부분이 마음에 안 들어서 막 계속 그렇게 하는 그런 느낌인 것 같아요.\",\"chan: 그런 느낌인건가?\",\"chan: -그러니까 약간 컴플렉스에 접착하는 것 같은데? -중앙부\",\"chan: 약간 콤플렉스에 집착하는 것처럼\",\"chan: 약간 콤플렉스에 집착하는 것처럼\"]|Sad_L|0.866284352061298|Listening|0.950761749201861\n" +
    "1278| 근데 저 궁금한 거 있는데|Output: The speaker, feeling curious, is asking a question.|[\"chan: 그런 느낌인건가?\",\"chan: -그러니까 약간 컴플렉스에 접착하는 것 같은데? -중앙부\",\"chan: 약간 콤플렉스에 집착하는 것처럼\",\"chan: 약간 콤플렉스에 집착하는 것처럼\",\"chan: 근데 저 궁금한 거 있는데\"]|Sad_L|0.866284352061298|Listening|0.950761749201861\n" +
    "1347| -컴플렉스가 있고 그거를 사회화 되기 전부터|Output: The speaker, feeling introspective and slightly anxious, is sharing their thoughts about their complex.|[\"chan: 약간 콤플렉스에 집착하는 것처럼\",\"chan: 약간 콤플렉스에 집착하는 것처럼\",\"chan: 근데 저 궁금한 거 있는데\",\"chan: 근데 저 궁금한 거 있는데\",\"chan: 근데 저 궁금한 거 있는데\"]||0||0\n" +
    "1424| 그거를 사회화 되기 전부터 가요 아니면은||[\"chan: 약간 콤플렉스에 집착하는 것처럼\",\"chan: 근데 저 궁금한 거 있는데\",\"chan: 근데 저 궁금한 거 있는데\",\"chan: 근데 저 궁금한 거 있는데\",\"chan: -컴플렉스가 있고 그거를 사회화 되기 전부터\"]||0||0\n";

function Tooltip({ visible, x, y, content }) {
    if (!visible) return null;
    return (
        <div className={styles.tooltip} style={{ left: x, top: y }}>
            {content}
        </div>
    );
}

export default function TimelineTest() {
    const [input, setInput] = useState(SAMPLE);
    const [lines, setLines] = useState([]);
    const [axisTop, setAxisTop] = useState(0);
    const [tooltip, setTooltip] = useState({
        visible: false, x: 0, y: 0, content: ''
    });

    const timelineRef = useRef(null);
    const areaRef     = useRef(null);

    const [details, setDetails] = useState([]);

    const [openIndex, setOpenIndex] = useState(-1);

    const [filter, setFilter] = useState(false)

    const handleRender = () => {
        const inputs = input.trim().split('<CRLF>');
        const lines = inputs[0].split('\n');
        setLines(lines);
        const details = inputs[1].split('\n');

        let list = [];
        for(const detail of details){
            const params = detail.split('|');
            let it = {
                step: params[0],
                seg: params[1] && params[1].trim(),
                llama: params[2],
                prev_chats: params[3] && JSON.parse(params[3]),
                face_clip: params[4],
                face_score: params[5],
                action_clip: params[6],
                action_score: params[7]
            }
            // console.log(it.prev_chats)
            list.push(it);
        }
        setDetails(list);
    };

    // runsList: [{type, count}, ...] for each line
    const runsList = useMemo(() => {
        return lines.map(line => {
            const runs = [];
            let runType = null, count = 0;
            const flush = () => {
                if (count > 0) {
                    runs.push({ type: runType, count });
                    count = 0;
                }
            };
            for (const ch of line) {
                const isBar = ch === '>' || ch === '|';
                if (runType == null) {
                    runType = isBar ? 'bar' : 'white';
                    count = 1;
                } else if ((isBar && runType === 'bar') || (!isBar && runType === 'white')) {
                    count++;
                } else {
                    flush();
                    runType = isBar ? 'bar' : 'white';
                    count = 1;
                }
            }
            flush();
            // console.log(runs)
            return runs;
        });
    }, [lines]);


    const maxLen = useMemo(
        () => lines.reduce((m, l) => Math.max(m, l.length), 0),
        [lines]
    );

    // axisTop: timeline height + gap
    useLayoutEffect(() => {
        if (!timelineRef.current) return;
        const { height } = timelineRef.current.getBoundingClientRect();
        setAxisTop(height + 5);
    }, [runsList]);

    // ticks for 0..maxSec
    const ticks = useMemo(() => {
        const maxSec = Math.floor(maxLen * charTime);
        return Array.from({ length: maxSec + 1 }, (_, s) => ({
            sec: s,
            x: s * charsPerSec
        }));
    }, [maxLen]);

    const onBarMouseMove = (e, run) => {
        const rect = areaRef.current.getBoundingClientRect();
        setTooltip({
            visible: true,
            x: e.clientX - rect.left + 10,
            y: e.clientY - rect.top - 24,
            content: `${(run.count * charTime).toFixed(2)}s`
        });
    };

    const onBarMouseLeave = () => {
        setTooltip(t => ({ ...t, visible: false }));
    };

    const openChatLogPanel = (i)=>{
        console.log(i)
        if(openIndex === i){
            setOpenIndex(-1)
        }else{
            setOpenIndex(i);
        }
    }

    return (
        <div style={{overflowX: 'auto', paddingBottom: '40px'}}>
      <textarea
          className={styles.textarea}
          value={input}
          onChange={e => setInput(e.target.value)}
          placeholder="타임라인 텍스트를 붙여넣고 Render 클릭"
      />
            <button className={styles.button} onClick={handleRender}>
                Render Timeline
            </button>

            <div className={styles.chartWrapper}>
                {/* 2. 왼쪽 라벨 영역 */}
                <div className={styles.labelsColumn}>
                    {runsList.map((_, rowIdx) => {
                        const labelText = labelColorMap[rowIdx]?.[0] || '';
                        return (
                            <div key={rowIdx} className={styles.label}>
                                {labelText}
                            </div>
                        );
                    })}
                </div>

                {/* 2. 오른쪽 타임라인 영역 */}
                <div className={styles.timelineArea} ref={areaRef}>
                    <div ref={timelineRef} className={styles.timeline}>
                        {runsList.map((runs, rowIdx) => {
                            const color = labelColorMap[rowIdx]?.[1] || 'gray';
                            return (
                                <div key={rowIdx} className={styles.line}>
                                    {runs.map((run, runIdx) => {
                                        if (run.type === 'white') {
                                            return (
                                                <div
                                                    key={runIdx}
                                                    className={styles.spacer}
                                                    style={{width: `${run.count}px`}}
                                                />
                                            );
                                        } else {
                                            return (
                                                <div
                                                    key={runIdx}
                                                    className={`${styles.bar} ${styles[color]}`}
                                                    style={{width: `${run.count}px`}}
                                                    onMouseMove={e => onBarMouseMove(e, run)}
                                                    onMouseLeave={onBarMouseLeave}
                                                >
                                                    <span>{(run.count * charTime).toFixed(2)}</span>
                                                </div>
                                            );
                                        }
                                    })}
                                </div>
                            );
                        })}
                    </div>

                    {/* 3. 0초 눈금 (왼쪽 하단) */}
                    {/*<div className={styles.zeroTick}>0s</div>*/}

                    {/* 3. x축 */}
                    <div
                        className={styles.xAxis}
                        style={{
                            top: `${axisTop}px`,
                            width: `${maxLen}px`
                        }}
                    >
                        {
                            ticks.map(t => (
                                <React.Fragment key={t.sec}>
                                    <div
                                        className={styles.tick}
                                        style={{left: `${t.x}px`}}
                                    />
                                    <div
                                        className={styles['tick-label']}
                                        style={{left: `${t.x}px`}}
                                    >
                                        {t.sec}s
                                    </div>
                                </React.Fragment>
                            ))
                        }
                    </div>

                    <Tooltip {...tooltip} />


                </div>

            </div>
            <div className={styles.detail_panel}>
                <button type='button' className={cm(styles.filter_button, `${filter && styles.on}`)} onClick={()=>{
                    setFilter(!filter)
                }}>매칭된 모션만 보기</button>
                <div className={styles.detail_cont}>
                    {
                        details.map((v, i) => {
                            if(filter && (!v.action_clip && !v.face_clip)){
                                return null;
                            }
                            return (
                                <div className={cm(styles.detail_item)}>
                                    <div onClick={()=>{
                                        if(v.prev_chats && v.prev_chats.length > 0) {
                                            openChatLogPanel(i)
                                        }
                                    }}>
                                        <span className={cm(styles.detail_span, styles.step)}>{v.step}</span>
                                        <span className={cm(styles.detail_span, styles.segment)}>{v.seg}</span>
                                        <span className={cm(styles.detail_span, styles.llama)}>{v.llama}</span>
                                        <span className={cm(styles.detail_span, styles.clip_name)}>{v.face_clip}</span>
                                        <span className={cm(styles.detail_span, styles.score)}>{v.face_score}</span>
                                        <span
                                            className={cm(styles.detail_span, styles.clip_name)}>{v.action_clip}</span>
                                        <span className={cm(styles.detail_span, styles.score)}>{v.action_score}</span>
                                        <span className={styles.chat_count}>{v.prev_chats && v.prev_chats.length}</span>
                                    </div>
                                    {
                                        openIndex === i && (
                                            <div className={styles.chat_log_panel}>
                                                {
                                                    v.prev_chats && v.prev_chats.map((chat, i) => {
                                                        return (
                                                            <div className={styles.chat_log_item}>
                                                                {chat}
                                                            </div>
                                                        )
                                                    })
                                                }
                                            </div>
                                        )
                                    }

                                </div>
                            )
                        })
                    }
                </div>
            </div>

        </div>
    );
}
