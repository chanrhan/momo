<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.momo.mapper.ReserveMsgMapper">
    <select id="insertMsg" parameterType="com.momo.common.vo.ReserveMessageVO">
        SET @next_msg_id := (
            select IFNULL(max(msg_id),0)+1
            from tb_rsv_msg
            where shop_id=#{currShopId} and
                  sale_id=#{saleId} and
                  rsv_dt=#{rsvDt}
            );

        INSERT INTO tb_rsv_msg
        (shop_id, sale_id, msg_id, msg_tp, content, rsv_dt, rsv_tp, dday)
        VALUES (#{currShopId}, #{saleId}, @next_msg_id, #{msgTp},#{content},#{rsvDt}, #{rsvTp}, #{dday});

        SELECT @next_msg_id
    </select>

    <delete id="deleteMessageList">
        delete from tb_rsv_msg
        where
        (
        <foreach collection="list" index="index" item="item" open="" close="" separator="or">
            (
                shop_id=#{item.shopId} and
                sale_id=#{item.saleId} and
                rsv_dt=#{item.rsvDt} and
                msg_id=#{item.msgId}
            )
        </foreach>
        )
    </delete>

    <select id="getReserveMsgBySale">
        select msg_id,
               rsv_dt,
               rsv_tp,
               msg_tp,
               msg_st
        from tb_rsv_msg
        where shop_id=#{currShopId} and
              sale_id=#{saleId}
        order by msg_tp
    </select>

    <select id="getReserveMsgForCalendar">
        <![CDATA[

        set @from := (
            select concat(#{date},'-01')
        );


        with recursive calendar as (
            select @from as d
            union all
            select date_add(d, interval 1 day) as d
            from calendar
            where d < last_day(@from)
        ), msg as (
            select rsv_dt,
                   json_object(
                           'msg_st',msg_st,
                           'cnt', IFNULL(count(msg_st),0)
                   ) as value
            from tb_rsv_msg
            where shop_id=#{currShopId}
            group by rsv_dt, msg_st
        )


        select json_arrayagg(value) as value
        from calendar
                 left outer join msg rm on rm.rsv_dt=d
        group by d
        ]]>
    </select>

    <select id="getReserveMsgDetail">
        SELECT sl.cust_nm,
               msg_st,
               msg_tp,
               IF(rm.rsv_tp != 2, 'D', 'M') as dday_tp,
               dday
        FROM tb_rsv_msg rm
        LEFT OUTER JOIN tb_sale sl on sl.sale_id= rm.sale_id
        WHERE rm.shop_id= #{currShopId} and
            rsv_dt=#{date}
    </select>

    <select id="getTodayReservedMsg">
        SELECT rm.content,
               sl.cust_nm,
               sl.cust_tel,
                (
                    select shop_nm
                    from tb_shop sh
                    where sh.shop_id = rm.shop_id
                   ) as shop_nm
        from tb_rsv_msg rm
        left outer join tb_sale sl on sl.shop_id = rm.shop_id and sl.sale_id = rm.sale_id
        where rsv_dt = DATE_FORMAT(current_date, '%Y-%d-%m')
    </select>

    <select id="getReserveMsgAll">
        with base as (
        SELECT rm.sens_req_dt as req_dt,
            rm.sens_req_id as req_id,
            sl.cust_tel,
            sl.cust_nm,
            (
            SELECT shop_nm
            FROM tb_shop sh
            WHERE sh.shop_id = rm.shop_id
            ) as shop_nm,
            (
            SELECT title
            FROM tb_msg_template mt
            where mt.msg_id = rm.msg_tp
            ) as template_title,
            rm.msg_st,
            rm.shop_id,
            rm.sale_id,
            rm.rsv_dt,
            rm.msg_id
        FROM tb_rsv_msg rm
        LEFT OUTER JOIN tb_sale sl on sl.shop_id = rm.shop_id and sl.sale_id = rm.sale_id
        ), search as (
            SELECT *
            FROM base
            WHERE
            <if test="keyword != null and !keyword.equals('')">
                (
                cust_nm like '%${keyword}%' or
                cust_tel like '%${keyword}%' or
                shop_nm like '%${keyword}%' or
                template_title like '%${keyword}%' or
                req_id like '%${keyword}%'
                ) and
            </if>
            1=1
        ), result as (
            SELECT json_arrayagg(json_object(
            'msg_st',msg_St,
            'shop_nm',shop_nm,
            'cust_tel', cust_tel,
            'template_title',template_title,
            'cust_nm',cust_nm,
            'req_dt',req_dt,
            'req_id',req_id,
            'shop_id',shop_id,
            'sale_id',sale_id,
            'rsv_dt',rsv_dt,
            'msg_id',msg_id
            ))
            from search
        )

        SELECT (
            SELECT count(*)
            FROM base
        ) as total_cnt,
            (
                SELECT *
                FROM result
        ) as list
    </select>
    
    <update id="updateMessageSendState">
        update tb_rsv_msg
        set msg_st=#{msgSt},
            sens_req_dt=#{reqDt},
            sens_req_id=#{reqId}
        where shop_id=#{shopId} and
              sale_id=#{saleId} and
              rsv_dt=#{rsvDt} and
              msg_id=#{msgId}
    </update>
</mapper>