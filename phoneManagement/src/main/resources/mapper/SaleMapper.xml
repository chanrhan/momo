<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.momo.mapper.SaleMapper">
    <select id="isDuplicatedTel" parameterType="com.momo.common.vo.SaleVO">
        select IF(count(*) > 0, true, false)
        from tb_sale
        where shop_id=#{shopId} and
              cust_tel=#{custTel} and
              MONTH(actv_dt) = MONTH(#{actvDt}) and
              YEAR(actv_dt) = YEAR(#{actvDt})
    </select>



    <select id="getSaleAll" parameterType="com.momo.common.vo.SaleSearchVO">
        with tb as (
            select s.*,
                (
                    select device_nm
                    from tb_device
                    where device_id=s.device_id
                    ) as device_nm,
                (
                    select ac.name
                    from tb_account ac
                    where ac.id = s.seller_id
                ) as seller_nm
            from tb_sale s
            where shop_id=(
                select ac2.curr_shop_id
                from tb_account ac2
                where ac2.id = #{userId}
                )
            )

        select *
        from tb
        where
        <if test="keyword != null and !keyword.equals('')">
            (
                cust_nm like '%${keyword}%' or
                cust_tel like '%${keyword}%' or
                cust_cd like '%${keyword}%'
            ) and
        </if>
        <if test="keydate != null">
            (
                actv_dt like '%${keydate}%'
            ) and
        </if>
        ${filters}
        1=1
        <if test="order != null and !order.equals('')">
            order by ${order} ${asc}
        </if>
<!--        <if test="limit != null and !limit.equals('')">-->
<!--            limit ${limit} ${offset}-->
<!--        </if>-->
    </select>

    <select id="getSaleTotalCount">
        select count(sale_id)
        from tb_sale
        where shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
            )
    </select>

<!--    get sale-->
    <select id="getSaleOne">
        select s.*,
               (
                   select device_nm
                   from tb_device
                   where device_id=s.device_id
               ) as device_nm,
               (
                   select ac.name
                   from tb_account ac
                   where ac.id = s.seller_id
               ) as seller_nm,
                (
                select cp.ct_plan_nm
                from tb_ct_plan cp
                where cp.ct_plan_id=s.ct_actv_plan
               ) as ct_actv_plan_nm,
               (
                   select cp.ct_plan_nm
                   from tb_ct_plan cp
                   where cp.ct_plan_id=s.ct_dec_plan
               ) as ct_dec_plan_nm
        from tb_sale s
        where shop_id=(
            select ac2.curr_shop_id
            from tb_account ac2
            where ac2.id = #{userId}
        ) and sale_id=#{saleId}
    </select>

<!--    get sale category-->
    <select id="getSaleAsUsedDevice">
        SET @curr_shop_id := (
            SELECT curr_shop_id
            from tb_account
            WHERE id=#{userId}
            );

        WITH tb as (
            SELECT sl.sale_id,
                   sud.ud_id,
                    sud.ud_st,
                   sl.actv_dt,
                   sl.cust_nm,
                   sl.cust_tel,
                   sl.cust_cd,
                    sud.ud_nm,
                   sud.ud_cms,
                   sl.total_cms,
                   (
                       SELECT name
                       from tb_account
                       where id=#{userId}
                       ) as seller_nm
            from tb_sale_used_device sud
            left outer join tb_sale sl on sud.sale_id=sl.sale_id
            WHERE sud.shop_id=@curr_shop_id
        )

        SELECT *
        from tb
        WHERE
        <if test="completed != null and completed == true">
            ud_st = 2 and
        </if>
        <if test="keyword != null and !keyword.equals('')">
            (
                cust_nm like '%${keyword}%' or
                cust_tel like '%${keyword}%' or
                device_nm like '%${keyword}%'
            ) and
        </if>
        1=1
        <if test="order != null and !order.equals('')">
            order by ${order} ${asc}
        </if>
    </select>

    <select id="getSaleAsCard">
        SET @curr_shop_id := (
            SELECT curr_shop_id
            from tb_account
            WHERE id=#{userId}
        );

        WITH tb as (
            SELECT sl.sale_id,
                   sc.card_id,
                   sc.card_st,
                   sl.actv_dt,
                   sl.cust_nm,
                   sl.cust_tel,
                   sl.cust_cd,
                   sc.card_nm,
                   sc.card_tp,
                   (
                       SELECT name
                       from tb_account
                       where id=#{userId}
                   ) as seller_nm
            from tb_sale_card sc
                     left outer join tb_sale sl on sc.sale_id=sl.sale_id
            WHERE sc.shop_id=@curr_shop_id
        )

        SELECT *
        from tb
        WHERE
        <if test="completed != null and completed == true">
            card_st = 2 and
        </if>
        <if test="keyword != null and !keyword.equals('')">
            (
            cust_nm like '%${keyword}%' or
            cust_tel like '%${keyword}%' or
            cust_cd like '%${keyword}%' or
            seller_nm like '%${keyword}%'
            ) and
        </if>
        1=1
        <if test="order != null and !order.equals('')">
            order by ${order} ${asc}
        </if>
    </select>

    <select id="getSaleAsComb">
        SET @curr_shop_id := (
            SELECT curr_shop_id
            from tb_account
            WHERE id=#{userId}
        );

        WITH tb as (
            SELECT sl.sale_id,
                   sl.comb_st,
                   sl.actv_dt,
                   sl.cust_nm,
                   sl.cust_tel,
                   sl.cust_cd,
                   sl.comb_tp,
                   sl.comb_memo,
                   (
                       SELECT name
                       from tb_account
                       where id=#{userId}
                   ) as seller_nm
            from tb_sale sl
            WHERE sl.shop_id=@curr_shop_id and
                  sl.comb_tp is not null
        )

        SELECT *
        from tb
        WHERE
        <if test="completed != null and completed == true">
            comb_st = 1 and
        </if>
        <if test="keyword != null and !keyword.equals('')">
                (
                    cust_nm like '%${keyword}%' or
                    cust_tel like '%${keyword}%' or
                    cust_cd like '%${keyword}%' or
                    seller_nm like '%${keyword}%' or
                    comb_memo like '%${keyword}%' or
                    comb_tp like '%${keyword}%'
                ) and
            </if>
            1=1
            <if test="order != null and !order.equals('')">
                order by ${order} ${asc}
            </if>
    </select>

    <select id="getSaleAsSupport">
        SET @curr_shop_id := (
            SELECT curr_shop_id
            from tb_account
            WHERE id=#{userId}
        );

        WITH tb as (
            SELECT sl.sale_id,
                   ss.sup_id,
                   ss.sup_st,
                   sl.actv_dt,
                   sl.cust_nm,
                   sl.cust_tel,
                   sl.cust_cd,
                   ss.sup_div,
                   ss.sup_amount,
                   (
                       SELECT name
                       from tb_account
                       where id=#{userId}
                   ) as seller_nm
            from tb_sale_support ss
                     left outer join tb_sale sl on ss.sale_id=sl.sale_id
            WHERE ss.shop_id=@curr_shop_id
        )

        SELECT *
        from tb
        WHERE
        <if test="completed != null and completed == true">
            sup_st = 1 and
        </if>
        <if test="keyword != null and !keyword.equals('')">
            (
            cust_nm like '%${keyword}%' or
            cust_tel like '%${keyword}%' or
            cust_cd like '%${keyword}%' or
            seller_nm like '%${keyword}%'
            ) and
        </if>
        1=1
        <if test="order != null and !order.equals('')">
            order by ${order} ${asc}
        </if>
    </select>

    <select id="getSaleAsPromise">
        SET @curr_shop_id := (
        SELECT curr_shop_id
        from tb_account
        WHERE id=#{userId}
        );

        WITH tb as (
                SELECT distinct sl.sale_id,
                        sl.cust_nm,
                        sl.cust_tel,
                        sl.cust_cd,
                        sl.actv_dt
                from tb_promise pm
                left outer join tb_sale sl on pm.sale_id=sl.sale_id
                WHERE pm.shop_id=@curr_shop_id
        )

        SELECT *
        from tb
        WHERE
<!--        <if test="completed != null and completed == true">-->
<!--            card_st = 2 and-->
<!--        </if>-->
        <if test="keyword != null and !keyword.equals('')">
            (
                (
                select IFNULL(count(*),0)
                from tb_promise apm
                where apm.shop_id=@curr_shop_id and
                apm.sale_id=tb.sale_id and
                apm.content like '%${keyword}%'
                ) > 0 or
                cust_nm like '%${keyword}%' or
                cust_tel like '%${keyword}%'
            )
          and
        </if>
        1=1
        <if test="order != null and !order.equals('')">
            order by ${order} ${asc}
        </if>
    </select>

<!--    promise-->
    <update id="changePromiseState">
        UPDATE tb_promise
        SET checked=#{checked}
        WHERE shop_id=(
            SELECT curr_shop_id
            from tb_account
            WHERE id=#{userId}
            ) and
            sale_id=#{saleId} and
            pm_id=#{pmId}
    </update>


    <!--    진행현황 관리-->
    <update id="changeUsedDeviceState">
        UPDATE tb_sale_used_device
        SET ud_st=#{state}
        WHERE shop_id=(
            SELECT  curr_shop_id
            FROM tb_account
            WHERE id=#{userId}
        ) and
            sale_id=#{saleId} and
            ud_id=#{udId}
    </update>

    <update id="changeCardState">
        UPDATE tb_sale_card
        SET card_st=#{state}
        WHERE shop_id=(
            SELECT  curr_shop_id
            FROM tb_account
            WHERE id=#{userId}
        ) and
            sale_id=#{saleId} and
            card_id=#{cardId}
    </update>

    <update id="changeCombState">
        UPDATE tb_sale
        SET comb_st=#{state}
        WHERE shop_id=(
            SELECT  curr_shop_id
            FROM tb_account
            WHERE id=#{userId}
        ) and
            sale_id=#{saleId}
    </update>

    <update id="changeSupportState">
        UPDATE tb_sale_support
        SET sup_st=#{state}
        WHERE shop_id=(
            SELECT  curr_shop_id
            FROM tb_account
            WHERE id=#{userId}
        ) and
            sale_id=#{saleId} and
            sup_id=#{supId}
    </update>


<!--    update-->

    <update id="updateSale" parameterType="com.momo.common.vo.SaleVO">
        UPDATE tb_sale
        SET actv_dt = #{actvDt},
            provider = #{provider},
            seller_id = #{sellerId},
            cust_nm = #{custNm},
            cust_gd = #{custGd},
            cust_tel = #{custTel},
            cust_cd = #{custCd},
            ct_actv_div = #{ctActvDiv},
            device_id = #{deviceId},
            ct_actv_plan = #{ctActvPlan},
            ct_dec_plan = #{ctDecPlan},
            ct_actv_tp = #{ctActvTp},
            device_stor = #{deviceStor},
            ct_istm = #{ctIstm},
            ct_cms = #{ctCms},
            wt_actv_tp = #{wtActvTp},
            wt_cms = #{wtCms},
            internet_plan = #{internetPlan},
            tv_plan = #{tvPlan},
            sd_id = #{sdId},
            exsvc_id = #{exsvcId},
            comb_tp = #{combTp},
            comb_memo = #{combMemo},
            family = #{family},
            friend = #{friend},
            sale_memo=#{saleMemo},
            estimate=#{estimate},
            docs=#{docs}
        where sale_id=#{saleId}
    </update>

    <delete id="deleteSale">
        delete from tb_sale
        where sale_id=#{saleId}
        and shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
            )
    </delete>

    <insert id="insertSale" parameterType="com.momo.common.vo.SaleVO">
        set @shop_id := (
            select curr_shop_id
            from tb_account
            where id= #{userId}
            );

        SET @next_sale_id := (
            select IFNULL(max(sale_id)+1,1)
            from tb_sale
            );

        INSERT INTO tb_sale
        (shop_id, sale_id, cust_nm, cust_tel, cust_cd, cust_gd, provider, actv_dt,
         device_id, device_stor, ct_istm, ct_actv_div, ct_actv_tp, ct_actv_plan, ct_dec_plan,
         ct_cms, sd_id, comb_tp, comb_memo,
         wt_actv_tp, wt_cms, internet_plan, tv_plan, exsvc_id, family,
         friend, seller_id, estimate, docs, sale_memo, total_cms)
        VALUES (@shop_id,@next_sale_id, #{custNm},#{custTel},#{custCd},#{custGd},
                #{provider},#{actvDt},#{deviceId},#{deviceStor},#{ctIstm},#{ctActvDiv},#{ctActvTp},#{ctActvPlan},
                #{ctDecPlan},#{ctCms},#{sdId},#{combTp},
                #{combMemo},#{wtActvTp},#{wtCms},#{internetPlan},#{tvPlan},
                #{exsvcId},#{family},#{friend},#{sellerId},#{estimate},#{docs},#{saleMemo},#{totalCms})
    </insert>

<!--    고객약속, 추가, 지원, 카드, 중고폰  -->

    <select id="getMaxSaleId">
        SELECT IFNULL(max(sale_id),0)
        from tb_sale
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
            )
    </select>

<!--    get-->
    <select id="getSalePromiseDetail">
        SELECT pm_id,
               checked,
               content
        from tb_promise
        where sale_id=#{saleId} and
            shop_id = (
                select curr_shop_id
                from tb_account
                where id=#{userId}
            )
    </select>

    <select id="getSaleSupportDetail">
        SELECT sup_div,
               sup_amount
        from tb_sale_support
        where sale_id=#{saleId} and
              shop_id = (
                  select curr_shop_id
                  from tb_account
                  where id=#{userId}
                  )
    </select>

    <select id="getSaleAddDetail">
        SELECT add_div,
               add_amount
        from tb_sale_add
        where sale_id=#{saleId} and
            shop_id = (
                select curr_shop_id
                from tb_account
                where id=#{userId}
            )
    </select>

    <select id="getSaleCardDetail">
        SELECT card_tp,
               card_nm
        from tb_sale_card
        where sale_id=#{saleId} and
            shop_id = (
                select curr_shop_id
                from tb_account
                where id=#{userId}
            )
    </select>

    <select id="getSaleUsedDeviceDetail">
        SELECT ud_nm,
               ud_stor
        from tb_sale_used_device
        where sale_id=#{saleId} and
            shop_id = (
                select curr_shop_id
                from tb_account
                where id=#{userId}
            )
    </select>


<!--    insert-->
    <insert id="insertSalePromise" parameterType="com.momo.common.vo.SalePromiseVO">
        set @curr_shop_id := (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        );

        INSERT INTO tb_promise
            (shop_id, sale_id, pm_id, checked, content)
        VALUES
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="), (">
            (
            select curr_shop_id
            from tb_account
            where id=#{userId}
            ),#{saleId},#{index}+1,#{item.checked},#{item.content}
        </foreach>
    </insert>

    <insert id="insertSaleSupport" parameterType="com.momo.common.vo.SaleSupportVO">
        set @curr_shop_id := (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        );


        INSERT INTO tb_sale_support
        (shop_id, sale_id, sup_id, sup_div, sup_amount)
        VALUES
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="), (">
            (
            select curr_shop_id
            from tb_account
            where id=#{userId}
            ),#{saleId},#{index}+1,#{item.supDiv},#{item.supAmount}
        </foreach>
    </insert>

    <insert id="insertSaleAdd" parameterType="com.momo.common.vo.SaleAddVO">
        set @curr_shop_id := (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        );

        INSERT INTO tb_sale_add
            (shop_id, sale_id, add_id, add_div, add_amount)
        VALUES
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="), (">
            (
            select curr_shop_id
            from tb_account
            where id=#{userId}
            ),#{saleId},#{index}+1,#{item.addDiv},#{item.addAmount}
        </foreach>
    </insert>

    <insert id="insertSaleCard" parameterType="com.momo.common.vo.SaleCardVO">
        set @curr_shop_id := (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        );

        INSERT INTO tb_sale_card
            (shop_id, sale_id, card_id, card_nm, card_tp)
        VALUES
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="), (">
            (
            select curr_shop_id
            from tb_account
            where id=#{userId}
            ),#{saleId},#{index}+1,#{item.cardNm},#{item.cardTp}
        </foreach>
    </insert>

    <insert id="insertSaleUsedDevice" parameterType="com.momo.common.vo.SaleUsedDeviceVO">
        set @curr_shop_id := (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        );

        INSERT INTO tb_sale_used_device
            (shop_id, sale_id, ud_id, ud_nm, ud_stor)
        VALUES
        <foreach collection="list" index="index" item="item" open="(" close=")" separator="), (">
            (
            select curr_shop_id
            from tb_account
            where id=#{userId}
            ),#{saleId},#{index}+1,#{item.udNm},#{item.udStor}
        </foreach>
    </insert>

<!--    update-->
    <update id="updateSaleAsPromise">
        UPDATE tb_promise
        SET checked=#{checked},
            content=#{content}
        WHERE shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            pm_id=#{pmId}
    </update>

    <update id="updateSaleSupport">
        UPDATE tb_sale_support
        SET sup_div=#{div},
            sup_amount=#{amount}
        WHERE shop_id = (
                            select curr_shop_id
                            from tb_account
                            where id=#{userId}
                        ) and
              sale_id=#{saleId} and
              sup_id=#{supId}
    </update>

    <update id="updateSaleAdd">
        UPDATE tb_sale_add
        SET add_div=#{div},
            add_amount=#{amount}
        WHERE shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            add_id=#{addId}
    </update>

    <update id="updateSaleCard">
        UPDATE tb_sale_card
        SET card_nm=#{cardNm},
            card_tp=#{cardTp}
        WHERE shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            card_id=#{cardId}
    </update>

    <update id="updateSaleUsedDevice">
        UPDATE tb_sale_used_device
        SET ud_nm=#{udNm},
            ud_stor=#{udStor}
        WHERE shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            ud_id=#{udId}
    </update>

<!--    count-->
    <select id="getSaleTotalPromiseCount">
        SELECT count(*)
        from tb_promise
        where shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
            )
        group by sale_id
    </select>

    <select id="getSaleTotalSupportCount">
        SELECT count(*)
        from tb_sale_support
        where shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        )
    </select>

<!--    <select id="getSaleAddCount">-->
<!--        SELECT count(*)-->
<!--        from tb_sale_add-->
<!--        where shop_id = (-->
<!--            select curr_shop_id-->
<!--            from tb_account-->
<!--            where id=#{userId}-->
<!--        ) and-->
<!--            sale_id=#{saleId}-->
<!--    </select>-->

    <select id="getSaleTotalCardCount">
        SELECT count(*)
        from tb_sale_card
        where shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        )
    </select>

    <select id="getSaleTotalCombCount">
        SELECT count(*)
        from tb_sale
        where shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            comb_tp is not null
    </select>

    <select id="getSaleTotalUsedDeviceCount">
        SELECT count(*)
        from tb_sale_used_device
        where shop_id = (
            select curr_shop_id
            from tb_account
            where id=#{userId}
        )
    </select>

<!--    delete-->
    <delete id="deleteSalePromise">
        DELETE FROM tb_promise
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
            ) and
            sale_id=#{saleId} and
            pm_id=#{pmId}
    </delete>

    <delete id="deleteSaleSupport">
        DELETE FROM tb_sale_support
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            sup_id=#{supId}
    </delete>

    <delete id="deleteSaleAdd">
        DELETE FROM tb_sale_add
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            add_id=#{addId}
    </delete>

    <delete id="deleteSaleCard">
        DELETE FROM tb_sale_card
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            card_id=#{cardId}
    </delete>

    <delete id="deleteSaleUsedDevice">
        DELETE FROM tb_sale_used_device
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId} and
            ud_id=#{udId}
    </delete>

<!--    delete all-->
    <delete id="deleteAllSalePromise">
        DELETE FROM tb_promise
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId}
    </delete>

    <delete id="deleteAllSaleSupport">
        DELETE FROM tb_sale_support
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId}
    </delete>

    <delete id="deleteAllSaleAdd">
        DELETE FROM tb_sale_add
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId}
    </delete>

    <delete id="deleteAllSaleCard">
        DELETE FROM tb_sale_card
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId}
    </delete>

    <delete id="deleteAllSaleUsedDevice">
        DELETE FROM tb_sale_used_device
        WHERE shop_id=(
            select curr_shop_id
            from tb_account
            where id=#{userId}
        ) and
            sale_id=#{saleId}
    </delete>



</mapper>