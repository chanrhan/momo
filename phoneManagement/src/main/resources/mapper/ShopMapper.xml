<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.momo.mapper.ShopMapper">
    <!--    Shop-->
    <insert id="insertShop" parameterType="com.momo.common.vo.UserVO">
        set @next_shopId := (
            select IFNULL(count(*)+1, 1)
            from tb_shop
            );

        INSERT INTO tb_shop
            (shop_id, shop_nm, shop_addr, shop_tel, provider, br_nm, br_no)
        VALUES (@next_shopId, #{shopNm}, #{shopAddr}, #{shopTel},#{provider},
                (
                    select br_no
                    from tb_account
                    where id=#{userId}
                    ),#{brNo});

        UPDATE tb_account
        SET     curr_shop_id = @next_shopId
        WHERE   curr_shop_id = 0 and id=#{userId};

        INSERT INTO tb_staff
            (shop_id, staff_id, role)
        VALUES (@next_shopId, #{userId}, 1);

        set @size1 := (
            select IFNULL(count(*),0)
            from tb_internet_plan
            where shop_id=@next_shopId
        );

        insert into tb_internet_plan
        select @next_shopId as shop_id,
               (@size1 + row_number() over (order by internet_plan_id)) as idx,
               provider,
               internet_plan_nm,
               now()
        from tb_internet_plan
        where shop_id = -1;

        set @size2 := (
            select IFNULL(count(*),0)
            from tb_tv_plan
            where shop_id=@next_shopId
        );

        insert into tb_tv_plan
        select @next_shopId as shop_id,
               (@size2 + row_number() over (order by tv_plan_id)) as idx,
               provider,
               tv_plan_nm,
               now()
        from tb_tv_plan
        where shop_id = -1;

        set @size3 := (
            select IFNULL(count(*),0)
            from tb_extra_service
            where shop_id=@next_shopId
        );

        insert into tb_extra_service
        select @next_shopId as shop_id,
               (@size3 + row_number() over (order by exsvc_id)) as idx,
               provider,
               exsvc_nm,
               now()
        from tb_extra_service
        where shop_id = -1;

        set @size4 := (
            select IFNULL(count(*),0)
            from tb_sup_div
            where shop_id=@next_shopId
        );

        insert into tb_sup_div
        select @next_shopId as shop_id,
               (@size4 + row_number() over (order by sup_div_id)) as idx,
               sup_div_nm,
               now()
        from tb_sup_div
        where shop_id = -1;

        set @size5 := (
            select IFNULL(count(*),0)
            from tb_add_div
            where shop_id=@next_shopId
        );

        insert into tb_add_div
        select @next_shopId as shop_id,
               (@size5 + row_number() over (order by add_div_id)) as idx,
               add_div_nm,
               now()
        from tb_add_div
        where shop_id = -1;

        set @size6 := (
            select IFNULL(count(*),0)
            from tb_comb_tp
            where shop_id=@next_shopId
        );

        insert into tb_comb_tp
        select @next_shopId as shop_id,
               (@size6 + row_number() over (order by comb_tp_id)) as idx,
               comb_tp_nm,
               now()
        from tb_comb_tp
        where shop_id = -1;

    </insert>

    <update id="updateShop" parameterType="com.momo.common.vo.UserVO">
        update
        tb_shop
        set
        <if test='shopNm != null and !shopNm.equals("")'>
            shop_nm=#{shopNm},
        </if>
        <if test='corpId != null'>
            corp_id=#{corpId},
        </if>
        <if test='shopTel != null and !shopTel.equals("")'>
            shop_tel=#{shopTel},
        </if>
        <if test='sendTel != null and !sendTel.equals("")'>
            send_tel=#{sendTel},
        </if>
        <if test='shopAddr != null and !shopAddr.equals("")'>
            shop_addr=#{shopAddr},
        </if>
        shop_id=#{shopId}
        where
        shop_id=#{shopId}
    </update>

    <delete id="deleteShop">
        DELETE
        FROM tb_shop
        WHERE shop_id = #{shopId}
    </delete>

    <select id="getShop" parameterType="com.momo.common.vo.ShopVO">
        SELECT shop_id,
               shop_nm,
               shop_addr
        from tb_shop
        where
        <if test="keyword != null and !keyword.equals('')">
            shop_nm like '%${keyword}%' and
        </if>
        1=1
        limit 20
    </select>

    <select id="getShopItems">
        select sh.shop_id,
               sh.shop_nm
        from tb_staff sf
        left outer join tb_shop sh on sh.shop_id=sf.shop_id
        where staff_id=#{userId}
    </select>

    <insert id="joinShop">
        INSERT INTO tb_staff
            (shop_id, staff_id, role, approval_st)
        VALUES (#{shopId}, #{userId}, 0, 0);
    </insert>

    <select id="getShopAdmin">
        with base as (
            select sh.shop_id,
                   shop_nm,
                   (
                       SELECT ac.name
                       FROM tb_account ac
                       where ac.id=sf.staff_id
                  ) as reps_nm,
                (
                        SELECT ac.pfp
                        FROM tb_account ac
                        where ac.id=sf.staff_id
                ) as pfp,
                sf.staff_id as id,
                  br_no,
                  shop_addr,
                  shop_tel,
                  (
                      select IFNULL(sum(total_cms),0)
                      from tb_sale sl
                      where sl.shop_id=sh.shop_id
                  ) as total_cms,
                (
                    select DATE_FORMAT(max(sl.regi_dt), '%Y-%m-%d')
                    from tb_sale sl
                    where sl.shop_id=sh.shop_id
                ) as last_sale_dt,
                  DATE_FORMAT(sh.regi_dt, '%Y-%m-%d') as regi_dt
            from tb_shop sh
            left outer join tb_staff sf on sf.shop_id=sh.shop_id and role=1
        ), search as (
            select *
            from base
            where
                <if test="keyword != null and !keyword.equals('')">
                    (
                        shop_nm like '%${keyword}%' or
                        shop_addr like '%${keyword}%' or
                        shop_tel like '%${keyword}%' or
                        reps_nm like '%${keyword}%'
                    ) and
                </if>
            1=1
            <if test="order != null and !order.equals('')">
                order by ${order} ${asc}
            </if>
            <if test="limit != null and !limit.equals('')">
                limit ${limit}
            </if>
        ), result as (
            select json_arrayagg(json_object(
                                 'shop_id',shop_id,
                                 'shop_nm',shop_nm,
                                 'shop_addr',shop_addr,
                                 'shop_tel',shop_tel,
                                 'reps_nm',reps_nm,
                                 'br_no',br_no,
                                 'total_cms',total_cms,
                                 'last_sale_dt',last_sale_dt,
                                 'regi_dt',regi_dt,
                                 'pfp',pfp,
                                 'id',id
        ))
            from search
        )

        select (
            select count(*)
            from search
        ) as total_cnt,
            (
                select *
                from result
        ) as list
    </select>
</mapper>